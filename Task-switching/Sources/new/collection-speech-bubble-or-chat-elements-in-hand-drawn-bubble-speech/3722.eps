%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Lunarts_21-08-2020-1_13.eps
%%Creator: Adobe Illustrator(R) 23.1
%%For: Vova Hryshchenko
%%CreationDate: 24.08.2020
%%BoundingBox: 0 0 2540 2371
%%HiResBoundingBox: 0 0 2540 2370.9292
%%CropBox: 0 0 2540 2370.9292
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.1.1 x673 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=0 RasterRes=72 GradRes=72 Text=0 Stroke=0 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Collection Speech Bubble or chat elements in cartoon Sketch hand drawn bubble speech vector illustration</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:headline>
            <rdf:Alt>
               <rdf:li>Collection Speech Bubble or chat elements in cartoon Sketch hand drawn bubble speech vector illustration</rdf:li>
            </rdf:Alt>
         </dc:headline>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Collection Speech Bubble or chat elements in cartoon Sketch hand drawn bubble speech vector illustration</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>bubble</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>icon</rdf:li>
               <rdf:li>message</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>symbol</rdf:li>
               <rdf:li>doodle</rdf:li>
               <rdf:li>speech</rdf:li>
               <rdf:li>talk</rdf:li>
               <rdf:li>balloon</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>sign</rdf:li>
               <rdf:li>chat</rdf:li>
               <rdf:li>sketch</rdf:li>
               <rdf:li>drawn</rdf:li>
               <rdf:li>blank</rdf:li>
               <rdf:li>communication</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>hand</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>comic</rdf:li>
               <rdf:li>discussion</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>outline</rdf:li>
               <rdf:li>speak</rdf:li>
               <rdf:li>art</rdf:li>
               <rdf:li>shape</rdf:li>
               <rdf:li>white</rdf:li>
               <rdf:li>cloud</rdf:li>
               <rdf:li>line</rdf:li>
               <rdf:li>dialog</rdf:li>
               <rdf:li>gossip</rdf:li>
               <rdf:li>group</rdf:li>
               <rdf:li>drawing</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>empty</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>text</rdf:li>
               <rdf:li>idea</rdf:li>
               <rdf:li>tag</rdf:li>
               <rdf:li>talking</rdf:li>
               <rdf:li>think</rdf:li>
               <rdf:li>abstract</rdf:li>
               <rdf:li>business</rdf:li>
               <rdf:li>retro</rdf:li>
               <rdf:li>black</rdf:li>
               <rdf:li>circle</rdf:li>
               <rdf:li>object</rdf:li>
               <rdf:li>speech bubble</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:MetadataDate>2019-05-18T09:11:40+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2020-08-24T18:06:40.356+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-05-18T09:11:39+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FVK7u7SztpLq7mjt7aEcpZ5WCRoo7szEAD54qxX/lZNheEDy7pWo+YVJotzZQCO1J9rq6a3&#xA;hYe6M2S4VXjzL58NG/wawT9pW1G19Svsoqn/AA+NDvVY/wCYgsKf4h0HVNGjH95dtCl5bLXu01k9&#xA;xxX3dVx4VZLpmq6ZqtnHe6ZdxXtnL/d3EDrIh/2SkjIqisVdirTukaNJIwREBZ3Y0AA3JJOKsJ0/&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F87F117407206811822AB2A6B75D99AD</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stRef:instanceID>
            <stRef:documentID>xmp.did:0880117407206811822A8072EAEFE205</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AC3D3EC9D6DEE611ADF3FA58164AFD71</stEvt:instanceID>
                  <stEvt:when>2017-01-20T09:07:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T18:36:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:05801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T21:11:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:577FABBD61206811822AA8872E1D75D1</stEvt:instanceID>
                  <stEvt:when>2019-04-07T19:22:06+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stEvt:instanceID>
                  <stEvt:when>2019-05-11T00:15:08+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</stEvt:instanceID>
                  <stEvt:when>2019-05-18T09:11:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2540.000000</stDim:w>
            <stDim:h>2370.929285</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2370.93 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2370.93 li
2540 2370.93 li
2540 0 li
cp
clp
684.02 532.83 mo
678.348 547.505 669.442 560.522 657.508 570.919 cv
646.35 580.638 632.125 587.933 618.056 592.795 cv
602.063 598.321 584.964 601.619 568.461 603.718 cv
550.065 606.058 531.534 607.182 513.019 608.066 cv
494.013 608.974 474.993 609.592 456 610.763 cv
452.431 610.982 448.829 610.904 445.536 612.451 cv
443.396 613.456 441.504 615.031 439.886 616.741 cv
435.659 621.207 432.562 626.728 429.453 631.99 cv
421.545 645.373 413.479 658.806 400.449 667.441 cv
394.977 671.068 388.941 673.646 382.594 675.137 cv
386 666.362 388.686 657.301 390.383 648.041 cv
392.063 638.871 393.635 628.117 390.519 619.057 cv
389.311 615.546 387.292 612.189 383.951 610.346 cv
379.347 607.805 373.149 608.713 368.107 608.543 cv
354.797 608.094 341.486 607.342 328.242 605.905 cv
307.643 603.669 286.473 599.819 267.682 590.725 cv
259.706 586.865 252.189 582.089 245.604 576.246 cv
243.07 573.996 240.636 571.627 238.446 569.038 cv
238.032 568.549 237.63 568.05 237.227 567.551 cv
237.152 567.459 237.066 567.35 236.997 567.261 cv
236.792 566.991 236.588 566.721 236.386 566.449 cv
235.536 565.299 234.719 564.126 233.93 562.934 cv
226.046 551.026 221.188 538.679 216.786 525.344 cv
211.303 508.737 207.319 491.641 204.198 474.443 cv
200.821 455.827 198.521 437.032 197.161 418.16 cv
195.817 399.505 195.374 380.763 196.168 362.071 cv
196.868 345.6 198.342 330.039 201.863 314.117 cv
203.315 307.544 205.113 301.026 207.51 294.729 cv
207.79 293.994 208.082 293.264 208.375 292.534 cv
208.427 292.404 208.514 292.197 208.569 292.064 cv
208.707 291.745 208.845 291.424 208.986 291.106 cv
209.562 289.81 210.168 288.527 210.813 287.264 cv
212.032 284.876 213.385 282.553 214.917 280.352 cv
215.255 279.867 215.605 279.392 215.957 278.916 cv
215.961 278.909 215.959 278.912 215.963 278.907 cv
215.978 278.889 215.984 278.881 216.002 278.859 cv
216.183 278.637 216.36 278.414 216.542 278.193 cv
217.28 277.305 218.057 276.452 218.871 275.632 cv
220.274 274.232 221.729 272.885 223.232 271.594 cv
223.994 270.94 224.767 270.302 225.551 269.676 cv
225.777 269.495 226.348 269.056 226.42 268.999 cv
226.724 268.769 227.026 268.539 227.333 268.312 cv
230.905 265.676 234.666 263.3 238.544 261.142 cv
240.678 259.954 242.848 258.831 245.045 257.768 cv
246.172 257.221 247.307 256.69 248.448 256.174 cv
249.009 255.919 249.57 255.669 250.133 255.422 cv
250.459 255.28 251.436 254.86 251.631 254.775 cv
251.815 254.699 252.857 254.266 253.185 254.133 cv
253.834 253.869 254.485 253.609 255.137 253.353 cv
256.421 252.848 257.711 252.358 259.006 251.882 cv
261.778 250.862 264.573 249.906 267.385 249.004 cv
280.469 244.802 293.9 241.719 307.403 239.206 cv
324.635 235.999 341.527 233.811 358.939 232.041 cv
380.827 229.818 402.79 228.367 424.764 227.326 cv
451.882 226.041 479.03 225.393 506.177 225.096 cv
533.974 224.792 562.337 223.552 589.922 227.729 cv
610.377 230.827 630.808 237.326 646.404 251.461 cv
649.025 253.837 651.497 256.378 653.812 259.054 cv
654.774 260.167 655.707 261.305 656.619 262.46 cv
656.67 262.527 656.702 262.565 656.729 262.6 cv
656.755 262.635 656.782 262.67 656.83 262.734 cv
657.046 263.02 657.264 263.307 657.479 263.596 cv
657.984 264.275 658.48 264.961 658.968 265.654 cv
662.703 270.954 665.92 276.608 668.717 282.455 cv
671.778 288.855 674.18 295.158 676.485 302.364 cv
679.065 310.429 681.144 318.651 682.888 326.936 cv
687.195 347.396 689.514 368.233 691.046 389.067 cv
693.085 416.784 693.683 444.602 693.693 472.387 cv
693.7 492.889 691.456 513.588 684.02 532.83 cv
cp
701.446 425.77 mo
700.625 401.24 699.056 376.706 695.77 352.374 cv
693.313 334.19 689.91 316.016 684.167 298.557 cv
679.738 285.09 673.9 271.859 665.556 260.333 cv
655.148 245.954 641.27 235.091 624.875 228.252 cv
602.466 218.904 577.394 217.005 553.376 216.519 cv
523.635 215.916 493.795 216.588 464.062 217.394 cv
439.156 218.07 414.254 219.135 389.403 220.93 cv
369.32 222.38 349.27 224.323 329.327 227.113 cv
313.746 229.293 298.213 232.009 282.936 235.795 cv
270.827 238.797 258.908 242.518 247.425 247.413 cv
238.67 251.145 230.181 255.64 222.549 261.355 cv
219.145 263.905 215.882 266.626 212.869 269.63 cv
204.665 277.899 200.008 289.272 196.689 300.242 cv
192.175 315.162 189.997 330.794 188.677 346.29 cv
187.133 364.419 186.975 382.663 187.702 400.836 cv
188.479 420.309 190.326 439.733 193.129 459.017 cv
195.749 477.034 199.247 494.957 204.064 512.52 cv
208.184 527.539 213.239 542.477 220.333 556.376 cv
223.106 561.812 226.241 567.075 229.957 571.923 cv
234.579 577.952 240.13 583.025 246.185 587.599 cv
261.855 599.435 280.872 606.084 299.931 610.06 cv
324.992 615.289 350.801 616.643 376.332 617.269 cv
377.04 617.287 377.747 617.304 378.455 617.326 cv
378.502 617.327 378.54 617.328 378.574 617.329 cv
378.607 617.339 378.648 617.351 378.7 617.364 cv
378.914 617.422 379.125 617.486 379.336 617.549 cv
379.428 617.593 379.748 617.726 379.945 617.833 cv
380.039 617.884 380.104 617.918 380.155 617.944 cv
380.392 618.153 380.614 618.374 380.837 618.598 cv
380.928 618.689 380.989 618.746 381.032 618.786 cv
381.051 618.82 381.078 618.867 381.125 618.938 cv
381.353 619.291 381.566 619.648 381.77 620.015 cv
381.828 620.12 382.026 620.538 382.109 620.706 cv
382.168 620.877 382.356 621.38 382.398 621.508 cv
382.693 622.396 382.923 623.305 383.109 624.223 cv
383.446 625.889 383.591 627.675 383.643 629.776 cv
383.913 640.636 381.386 651.574 378.232 661.897 cv
376.517 667.509 374.512 673.043 372.135 678.409 cv
370.992 680.988 372.243 685.185 375.799 684.795 cv
385.852 683.695 395.543 680.695 404.087 675.192 cv
411.355 670.511 417.537 664.425 422.83 657.624 cv
427.731 651.327 431.893 644.554 435.945 637.692 cv
437.625 634.845 439.293 631.988 441.078 629.205 cv
441.879 627.956 442.704 626.721 443.578 625.521 cv
443.767 625.262 443.958 625.005 444.151 624.75 cv
444.181 624.713 444.208 624.681 444.253 624.626 cv
444.663 624.132 445.07 623.635 445.501 623.16 cv
446.195 622.395 446.939 621.688 447.727 621.024 cv
447.874 620.925 448.357 620.568 448.586 620.429 cv
449.048 620.15 450.443 619.654 449.225 620.032 cv
449.652 619.9 450.071 619.756 450.502 619.636 cv
450.717 619.577 450.94 619.556 451.157 619.512 cv
449.98 619.745 450.9 619.58 451.529 619.537 cv
453.953 619.372 456.377 619.225 458.801 619.082 cv
468.484 618.512 478.174 618.075 487.864 617.659 cv
507.017 616.836 526.183 616.111 545.295 614.569 cv
563.471 613.103 581.684 610.952 599.477 606.877 cv
615.575 603.19 631.504 597.817 645.846 589.52 cv
659.852 581.419 671.987 570.426 681.01 556.967 cv
691.264 541.671 697.073 523.721 699.828 505.62 cv
701.598 493.986 702.197 482.29 702.179 470.533 cv
702.156 455.609 701.945 440.685 701.446 425.77 cv
cp
true sop
/0 
[/DeviceRGB] /CSA add_res
.172549 .172549 .239216 rgb
f
325.835 252.197 mo
312.398 253.479 298.937 255.116 285.731 257.96 cv
274.858 260.302 264.1 263.543 254.124 268.527 cv
245.519 272.827 237.522 278.662 231.316 286.054 cv
224.579 294.077 219.931 303.513 217.06 313.564 cv
213.499 326.031 212.468 339.205 212.543 352.122 cv
212.557 354.551 212.615 356.978 212.705 359.406 cv
212.787 361.622 214.598 363.755 216.948 363.649 cv
219.177 363.55 221.281 361.782 221.193 359.406 cv
220.91 351.798 220.96 344.171 221.59 336.582 cv
221.718 335.044 221.869 333.508 222.047 331.974 cv
222.091 331.589 222.138 331.204 222.186 330.82 cv
222.227 330.498 222.438 329.17 222.216 330.552 cv
222.336 329.807 222.427 329.055 222.543 328.309 cv
222.986 325.453 223.532 322.612 224.203 319.801 cv
224.812 317.246 225.525 314.715 226.356 312.224 cv
226.765 311 227.202 309.786 227.67 308.583 cv
227.87 308.07 228.081 307.562 228.287 307.052 cv
228.312 306.995 228.336 306.938 228.361 306.881 cv
228.499 306.565 228.639 306.249 228.781 305.936 cv
230.716 301.661 233.083 297.58 235.897 293.823 cv
235.928 293.782 235.993 293.696 236.065 293.602 cv
236.168 293.47 236.305 293.294 236.349 293.239 cv
236.727 292.766 237.111 292.298 237.503 291.836 cv
238.242 290.965 239.005 290.114 239.792 289.286 cv
241.324 287.675 242.943 286.149 244.638 284.714 cv
245.076 284.342 245.518 283.977 245.967 283.618 cv
246.141 283.477 246.318 283.339 246.492 283.2 cv
246.536 283.167 246.58 283.133 246.624 283.1 cv
247.552 282.399 248.497 281.722 249.459 281.069 cv
251.395 279.756 253.397 278.539 255.446 277.409 cv
257.57 276.241 259.745 275.168 261.957 274.178 cv
262.469 273.95 262.988 273.736 263.499 273.507 cv
263.551 273.485 263.603 273.464 263.654 273.442 cv
263.983 273.307 264.312 273.174 264.642 273.041 cv
265.847 272.559 267.061 272.099 268.283 271.659 cv
273.402 269.813 278.644 268.321 283.936 267.062 cv
289.783 265.671 295.695 264.564 301.632 263.632 cv
303.233 263.38 304.836 263.142 306.441 262.915 cv
306.802 262.863 307.165 262.812 307.527 262.762 cv
307.754 262.731 307.981 262.7 308.208 262.669 cv
308.253 262.664 308.329 262.652 308.404 262.643 cv
308.491 262.631 308.565 262.622 308.59 262.618 cv
308.774 262.594 308.957 262.569 309.142 262.545 cv
309.604 262.485 310.066 262.426 310.528 262.367 cv
313.9 261.939 317.278 261.553 320.658 261.2 cv
322.383 261.02 324.109 260.85 325.835 260.685 cv
328.039 260.475 330.188 258.883 330.08 256.441 cv
329.984 254.323 328.202 251.971 325.835 252.197 cv
cp
f
222.931 409.704 mo
222.848 409.172 222.768 408.639 222.69 408.106 cv
222.648 407.818 222.607 407.529 222.567 407.241 cv
222.561 407.184 222.552 407.114 222.541 407.033 cv
222.393 405.828 222.254 404.623 222.143 403.414 cv
221.918 400.979 221.789 398.538 221.76 396.092 cv
221.734 393.874 219.826 391.745 217.516 391.848 cv
215.239 391.951 213.244 393.714 213.272 396.092 cv
213.392 406.237 215.369 416.232 217.483 426.117 cv
217.949 428.291 220.61 429.759 222.704 429.082 cv
224.996 428.34 226.166 426.19 225.667 423.861 cv
224.663 419.161 223.678 414.453 222.931 409.704 cv
cp
f
624.823 273.267 mo
624.888 273.323 624.953 273.379 625.01 273.425 cv
625.309 273.662 625.606 273.901 625.901 274.142 cv
626.565 274.685 627.221 275.237 627.866 275.801 cv
629.082 276.862 630.265 277.962 631.409 279.1 cv
632.55 280.235 633.654 281.407 634.717 282.616 cv
635.248 283.22 635.768 283.832 636.277 284.455 cv
636.517 284.747 636.754 285.042 636.989 285.338 cv
637.008 285.362 637.04 285.401 637.073 285.443 cv
636.698 284.989 637.196 285.602 637.28 285.714 cv
639.252 288.326 641.034 291.084 642.593 293.962 cv
643.484 295.608 644.294 297.294 645.044 299.008 cv
645.063 299.051 645.086 299.095 645.11 299.136 cv
645.17 299.293 645.226 299.455 645.284 299.601 cv
645.446 300.008 645.604 300.415 645.757 300.824 cv
646.084 301.694 646.392 302.57 646.679 303.453 cv
647.895 307.185 648.751 311.023 649.281 314.913 cv
649.582 317.121 652.522 318.518 654.501 317.877 cv
656.928 317.092 657.788 315.023 657.466 312.657 cv
655.533 298.484 648.949 285.342 639.192 274.933 cv
629.478 264.568 616.945 257.147 603.652 252.348 cv
596.019 249.591 588.116 247.846 580.073 246.826 cv
577.862 246.545 575.735 248.978 575.83 251.069 cv
575.943 253.608 577.704 255.013 580.073 255.313 cv
580.139 255.321 580.218 255.328 580.295 255.335 cv
580.33 255.343 580.367 255.35 580.403 255.355 cv
580.839 255.418 581.276 255.48 581.713 255.546 cv
582.538 255.673 583.361 255.808 584.183 255.953 cv
585.877 256.252 587.563 256.593 589.241 256.975 cv
592.546 257.727 595.816 258.64 599.033 259.712 cv
600.614 260.239 602.182 260.805 603.734 261.409 cv
604.449 261.687 605.234 261.927 605.911 262.288 cv
604.906 261.753 605.961 262.31 606.246 262.434 cv
606.693 262.628 607.139 262.827 607.583 263.028 cv
610.633 264.411 613.611 265.953 616.493 267.659 cv
619.347 269.349 622.096 271.204 624.738 273.208 cv
624.764 273.228 624.793 273.249 624.823 273.267 cv
cp
f
671.624 510.792 mo
669.423 510.29 666.982 511.453 666.404 513.756 cv
665.864 515.904 665.245 518.032 664.518 520.124 cv
664.187 521.074 663.834 522.016 663.459 522.949 cv
663.385 523.134 663.322 523.455 663.193 523.602 cv
663.263 523.436 663.333 523.27 663.403 523.105 cv
663.33 523.276 663.256 523.447 663.182 523.617 cv
662.96 524.124 662.732 524.627 662.496 525.126 cv
661.674 526.865 660.763 528.561 659.759 530.202 cv
659.282 530.981 658.785 531.748 658.266 532.501 cv
658.021 532.856 657.771 533.208 657.518 533.557 cv
657.367 533.763 657.212 533.967 657.061 534.173 cv
654.742 537.068 652.157 539.712 649.286 542.062 cv
648.921 542.361 648.513 542.632 648.168 542.954 cv
649.093 542.089 648.049 543.036 647.775 543.236 cv
646.993 543.81 646.196 544.366 645.388 544.903 cv
643.724 546.008 642.008 547.035 640.256 547.996 cv
638.25 549.095 636.196 550.105 634.112 551.046 cv
633.572 551.29 633.03 551.528 632.485 551.762 cv
632.462 551.772 632.428 551.788 632.391 551.806 cv
632.393 551.804 632.394 551.804 632.395 551.803 cv
632.124 551.933 631.836 552.035 631.556 552.15 cv
630.318 552.656 629.071 553.14 627.817 553.609 cv
625.745 554.384 624.104 556.513 624.854 558.829 cv
625.51 560.857 627.848 562.626 630.074 561.793 cv
638.584 558.61 646.76 554.704 653.964 549.115 cv
660.334 544.172 665.601 537.848 669.227 530.636 cv
671.564 525.987 673.322 521.055 674.588 516.013 cv
675.128 513.862 673.893 511.309 671.624 510.792 cv
cp
f
1235.94 473.82 mo
1222.07 505.851 1200.31 534.137 1170.85 553.227 cv
1155.37 563.256 1138.44 570.564 1120.71 575.544 cv
1119.41 575.91 1117.97 577.089 1117.75 578.507 cv
1112.56 611.174 1101.11 646.072 1074.33 667.43 cv
1069.1 671.594 1063.31 675.03 1057.2 677.747 cv
1062.38 657.141 1062.86 635.826 1059.41 614.752 cv
1057.77 604.718 1055.26 594.854 1052.15 585.177 cv
1051.56 583.335 1049.99 582.129 1048.06 582.061 cv
1007.77 580.648 966.604 575.583 929.016 560.255 cv
902.886 549.598 878.767 532.85 862.201 510.247 cv
846.358 488.631 837.625 463.553 833.041 437.238 cv
830.596 423.21 829.393 408.851 828.926 394.417 cv
828.254 373.647 828.971 352.787 831.596 332.164 cv
836.268 295.468 847.63 259.063 868.948 228.53 cv
886.388 203.552 910.302 183.873 937.66 170.623 cv
964.317 157.712 993.811 150.956 1023.18 148.58 cv
1056.5 145.883 1090.27 149.91 1122.07 160.211 cv
1154.35 170.665 1184.73 187.913 1208.62 212.189 cv
1234.02 238.009 1250.35 271.037 1256.19 306.737 cv
1257.76 316.337 1258.51 326.055 1258.69 335.778 cv
1259.4 382.362 1254.62 430.66 1235.94 473.82 cv
cp
1267.17 335.778 mo
1266.47 296.791 1255.27 258.311 1232.05 226.707 cv
1211.02 198.089 1181.99 176.208 1149.68 161.782 cv
1117.65 147.481 1082.66 139.893 1047.59 139.304 cv
1016.29 138.778 984.212 143.686 954.732 154.319 cv
925.387 164.903 898.36 181.703 877.199 204.769 cv
852.694 231.481 837.101 265.006 828.815 300.087 cv
819.811 338.206 818.104 378.574 821.905 417.515 cv
824.646 445.616 831.069 473.706 844.75 498.623 cv
858.471 523.607 879.313 543.716 904.104 557.63 cv
937.329 576.276 975.558 584.395 1013.13 588.224 cv
1023.69 589.3 1034.29 589.989 1044.9 590.415 cv
1052.69 615.91 1056.01 642.988 1050.5 669.302 cv
1049.49 674.15 1048.2 678.933 1046.71 683.655 cv
1045.76 686.648 1048.9 689.894 1051.93 688.875 cv
1068.95 683.162 1083.81 672.687 1095 658.652 cv
1106.23 644.58 1113.88 628.077 1119.11 610.922 cv
1121.9 601.767 1123.98 592.414 1125.56 582.977 cv
1157.74 573.48 1187.28 556.083 1209.78 530.997 cv
1236.77 500.91 1252.33 462.5 1260.09 423.206 cv
1265.77 394.455 1267.62 365.044 1267.17 335.778 cv
cp
f
1081.52 203.622 mo
1081.54 203.624 1081.57 203.629 1081.59 203.63 cv
1081.58 203.629 1081.55 203.626 1081.52 203.622 cv
cp
1081.28 203.589 mo
1081.35 203.599 1081.42 203.609 1081.5 203.619 cv
1081.25 203.585 1080.65 203.503 1081.28 203.589 cv
cp
1209.36 326.467 mo
1211.77 325.687 1212.67 323.608 1212.33 321.246 cv
1209.99 305.314 1206.52 289.433 1200.69 274.382 cv
1195.77 261.639 1189.23 249.638 1180.43 239.144 cv
1172.5 229.688 1162.73 221.809 1152 215.746 cv
1140.36 209.173 1127.63 204.606 1114.71 201.303 cv
1099.28 197.358 1083.43 195.109 1067.6 193.515 cv
1065.47 193.3 1063.33 193.1 1061.19 192.911 cv
1058.97 192.714 1056.85 195.003 1056.95 197.154 cv
1057.06 199.622 1058.82 201.187 1061.19 201.398 cv
1065.42 201.772 1069.64 202.193 1073.86 202.674 cv
1075.89 202.907 1077.92 203.154 1079.96 203.416 cv
1080.47 203.482 1080.99 203.565 1081.51 203.621 cv
1081.7 203.647 1081.9 203.673 1082.09 203.7 cv
1083.07 203.835 1084.06 203.976 1085.04 204.12 cv
1092.5 205.212 1099.92 206.542 1107.27 208.23 cv
1113.98 209.773 1120.63 211.614 1127.13 213.876 cv
1128.67 214.414 1130.21 214.974 1131.73 215.559 cv
1132.48 215.848 1133.23 216.143 1133.98 216.444 cv
1134.31 216.58 1134.65 216.718 1134.99 216.856 cv
1135.13 216.915 1135.28 216.976 1135.42 217.035 cv
1138.28 218.261 1141.1 219.569 1143.86 220.995 cv
1149.21 223.755 1154.35 226.927 1159.17 230.542 cv
1159.4 230.716 1159.63 230.892 1159.86 231.066 cv
1159.96 231.143 1160.05 231.218 1160.15 231.294 cv
1160.76 231.773 1161.36 232.258 1161.95 232.751 cv
1163.09 233.692 1164.21 234.659 1165.3 235.652 cv
1167.5 237.644 1169.6 239.737 1171.6 241.924 cv
1172.62 243.027 1173.6 244.154 1174.56 245.303 cv
1175 245.829 1175.43 246.36 1175.86 246.894 cv
1176.04 247.118 1176.22 247.343 1176.4 247.567 cv
1176.38 247.542 1176.37 247.525 1176.35 247.498 cv
1176.39 247.553 1176.43 247.606 1176.47 247.66 cv
1176.52 247.729 1176.58 247.797 1176.63 247.866 cv
1176.66 247.906 1176.69 247.949 1176.72 247.991 cv
1176.76 248.046 1176.81 248.101 1176.85 248.157 cv
1178.72 250.621 1180.47 253.169 1182.12 255.788 cv
1185.61 261.353 1188.43 267.206 1191.12 273.185 cv
1191.17 273.304 1191.22 273.423 1191.27 273.541 cv
1191.42 273.907 1191.57 274.272 1191.72 274.638 cv
1192.08 275.526 1192.43 276.418 1192.77 277.313 cv
1193.39 278.951 1193.99 280.6 1194.56 282.256 cv
1195.78 285.798 1196.88 289.381 1197.88 292.991 cv
1200.05 300.865 1201.75 308.868 1203.11 316.921 cv
1203.48 319.111 1203.82 321.305 1204.14 323.503 cv
1204.47 325.706 1207.37 327.113 1209.36 326.467 cv
cp
f
1176.4 247.567 mo
1176.88 248.29 1176.85 248.18 1176.72 247.991 cv
1176.63 247.882 1176.55 247.771 1176.47 247.66 cv
1176.44 247.629 1176.42 247.599 1176.4 247.567 cv
cp
f
1211.09 363.091 mo
1209.99 363.14 1208.85 363.5 1208.08 364.334 cv
1207.29 365.201 1206.94 366.159 1206.84 367.335 cv
1206.57 370.715 1206.38 374.101 1206.23 377.488 cv
1206.14 379.71 1208.25 381.832 1210.48 381.732 cv
1212.86 381.626 1214.62 379.868 1214.72 377.488 cv
1214.87 374.101 1215.06 370.715 1215.33 367.335 cv
1215.41 366.302 1214.8 365.044 1214.09 364.334 cv
1213.35 363.598 1212.14 363.043 1211.09 363.091 cv
cp
f
587.614 897.233 mo
587.613 897.223 587.611 897.213 587.61 897.204 cv
587.619 897.268 587.626 897.322 587.631 897.36 cv
587.625 897.317 587.62 897.275 587.614 897.233 cv
cp
f
609.347 802.836 mo
608.8 811.99 607.322 820.838 604.135 829.87 cv
603.823 830.756 603.495 831.635 603.152 832.509 cv
602.989 832.924 602.821 833.338 602.651 833.75 cv
602.529 834.033 602.407 834.313 602.283 834.593 cv
601.582 836.167 600.827 837.715 600.013 839.233 cv
598.592 841.882 596.995 844.437 595.208 846.855 cv
595.036 847.088 594.86 847.318 594.687 847.55 cv
594.647 847.597 594.608 847.644 594.551 847.715 cv
594.144 848.215 593.737 848.716 593.317 849.205 cv
592.569 850.075 591.792 850.922 590.989 851.74 cv
589.681 853.071 588.288 854.289 586.851 855.477 cv
586.752 855.553 586.652 855.627 586.552 855.701 cv
586.266 855.911 585.976 856.117 585.684 856.319 cv
585.207 856.647 584.721 856.965 584.226 857.265 cv
583.804 857.518 583.377 857.773 582.931 857.983 cv
581.168 858.813 580.627 861.045 580.981 862.776 cv
582.178 868.62 583.6 874.414 584.758 880.268 cv
585.613 884.587 586.38 888.922 587.042 893.274 cv
587.225 894.479 587.399 895.686 587.567 896.893 cv
587.584 897.014 587.599 897.116 587.61 897.204 cv
587.601 897.129 587.588 897.038 587.574 896.923 cv
587.586 897.026 587.601 897.13 587.614 897.233 cv
587.644 897.453 587.654 897.535 587.631 897.36 cv
587.653 897.527 587.675 897.693 587.697 897.86 cv
587.779 898.491 587.859 899.124 587.937 899.756 cv
588.259 902.381 588.54 905.012 588.779 907.646 cv
589.846 919.431 590.057 931.304 589.169 943.107 cv
588.928 946.301 588.607 949.49 588.202 952.666 cv
588.159 952.997 588.066 953.671 588.105 953.394 cv
588.065 953.683 588.026 953.971 587.984 954.259 cv
587.868 955.07 587.747 955.879 587.619 956.688 cv
587.361 958.319 587.081 959.947 586.776 961.57 cv
585.524 968.241 583.868 974.837 581.777 981.295 cv
580.68 984.683 579.463 988.032 578.127 991.333 cv
577.981 991.693 577.833 992.052 577.685 992.411 cv
577.633 992.538 577.58 992.664 577.527 992.791 cv
577.503 992.845 577.48 992.899 577.464 992.936 cv
577.087 993.81 576.708 994.681 576.316 995.548 cv
575.572 997.195 574.797 998.829 573.99 1000.45 cv
570.652 1007.15 566.779 1013.58 562.417 1019.67 cv
561.887 1020.41 561.352 1021.14 560.808 1021.87 cv
560.516 1022.26 560.221 1022.65 559.926 1023.04 cv
559.892 1023.08 559.817 1023.18 559.76 1023.25 cv
559.624 1023.43 559.488 1023.6 559.351 1023.78 cv
558.125 1025.34 556.865 1026.88 555.574 1028.39 cv
552.912 1031.5 550.119 1034.5 547.208 1037.38 cv
544.162 1040.39 540.989 1043.28 537.705 1046.03 cv
534.087 1049.06 531.447 1051.08 527.509 1053.86 cv
510.403 1065.92 491.44 1074.77 471.75 1081.38 cv
449.555 1088.83 426.382 1093.93 403.242 1095.73 cv
382.085 1097.38 360.93 1096.39 340.552 1091.8 cv
320.953 1087.38 302.98 1080.04 286.338 1068.74 cv
269.993 1057.65 255.813 1042.62 245.272 1025.69 cv
232.96 1005.91 225.358 983.825 220.836 961.022 cv
218.621 949.856 217.236 938.824 216.825 927.394 cv
216.634 922.081 216.661 916.76 216.929 911.451 cv
217.059 908.875 217.246 906.303 217.492 903.736 cv
217.728 901.271 218.021 898.81 218.306 896.86 cv
221.101 877.696 227.164 859.991 237.014 843.668 cv
246.532 827.893 259.728 813.711 274.303 802.677 cv
290.889 790.121 309.66 780.553 328.972 773.523 cv
347.472 766.79 366.64 762.081 386.132 759.369 cv
386.349 759.339 387.236 759.219 387.272 759.213 cv
387.717 759.155 388.162 759.096 388.606 759.039 cv
389.828 758.883 391.05 758.733 392.272 758.59 cv
394.622 758.314 396.975 758.063 399.33 757.835 cv
404.199 757.363 409.078 756.989 413.961 756.711 cv
424.136 756.132 434.335 755.964 444.522 756.249 cv
464.891 756.82 484.315 758.942 503.957 764.371 cv
508.519 765.632 513.032 767.073 517.465 768.735 cv
518.543 769.139 519.618 769.557 520.687 769.988 cv
522.042 770.535 522.026 770.529 523.215 771.051 cv
525.264 771.949 527.288 772.902 529.282 773.915 cv
533.133 775.872 536.873 778.053 540.433 780.499 cv
543.831 782.832 546.241 784.74 549.506 787.879 cv
550.915 789.234 552.267 790.647 553.553 792.119 cv
554.171 792.826 554.771 793.548 555.359 794.28 cv
555.485 794.436 555.608 794.594 555.731 794.752 cv
555.764 794.795 555.796 794.839 555.842 794.901 cv
556.139 795.303 556.437 795.703 556.726 796.109 cv
558.981 799.272 560.912 802.649 562.512 806.188 cv
562.92 807.09 563.717 807.695 564.638 808.007 cv
565.395 808.325 566.293 808.408 567.305 808.139 cv
572.132 806.855 576.845 804.732 581.27 802.459 cv
590.598 797.67 599.061 791.079 605.469 782.745 cv
606.652 781.206 607.743 779.605 608.755 777.959 cv
609.573 786.224 609.842 794.543 609.347 802.836 cv
cp
602.598 833.881 mo
602.445 834.254 602.519 834.073 602.598 833.881 cv
602.598 833.881 li
cp
614.996 761.357 mo
614.266 757.072 607.855 757.566 606.811 761.357 cv
603.87 772.026 597.562 780.603 588.92 787.551 cv
588.681 787.743 588.441 787.934 588.199 788.122 cv
588.14 788.166 588.066 788.221 587.956 788.304 cv
587.515 788.632 587.073 788.957 586.626 789.276 cv
585.65 789.974 584.657 790.646 583.648 791.295 cv
581.781 792.496 579.861 793.615 577.899 794.654 cv
576.245 795.531 574.561 796.35 572.851 797.111 cv
572.585 797.228 572.319 797.344 572.053 797.458 cv
571.959 797.498 571.688 797.615 571.462 797.706 cv
570.801 797.975 570.135 798.235 569.467 798.485 cv
569.103 798.622 568.738 798.757 568.371 798.89 cv
560.846 784.487 547.749 773.759 533.381 766.493 cv
515.453 757.425 495.621 752.832 475.814 750.205 cv
455.187 747.467 434.255 747.042 413.496 748.25 cv
395.163 749.316 376.746 751.557 358.855 755.777 cv
336.748 760.992 315.038 768.655 294.998 779.412 cv
277.125 789.005 260.478 801.286 246.847 816.368 cv
233.73 830.881 223.574 847.799 217.064 866.252 cv
210.145 885.865 207.573 906.915 208.347 927.65 cv
209.245 951.727 214.066 976.124 222.615 998.655 cv
230.547 1019.56 242.041 1039.07 257.495 1055.31 cv
271.625 1070.16 288.852 1081.97 307.681 1090.05 cv
327.226 1098.42 348.101 1102.99 369.29 1104.44 cv
391.97 1106 414.841 1103.96 437.093 1099.45 cv
460.601 1094.69 483.801 1087.34 505.358 1076.76 cv
522.631 1068.28 538.875 1057.42 552.649 1043.93 cv
564.136 1032.68 573.867 1019.56 581.09 1005.19 cv
587.554 992.329 592.139 978.567 594.845 964.438 cv
597.322 951.498 598.373 938.294 598.191 925.126 cv
598.035 913.812 596.963 902.535 595.277 891.352 cv
594.072 883.362 592.486 875.441 590.722 867.559 cv
590.443 866.316 590.16 865.075 589.882 863.832 cv
594.095 861.158 597.798 857.193 600.772 853.441 cv
611.2 840.28 615.921 823.798 617.491 807.285 cv
618.947 791.96 617.571 776.488 614.996 761.357 cv
cp
f
272.981 1023.26 mo
273.002 1023.29 273.024 1023.32 273.046 1023.35 cv
273.178 1023.52 273.505 1023.9 272.981 1023.26 cv
cp
f
287.549 1038.01 mo
287.525 1037.99 287.502 1037.97 287.478 1037.95 cv
287.673 1038.1 288.025 1038.39 287.549 1038.01 cv
cp
287.438 1037.92 mo
287.418 1037.91 287.4 1037.89 287.38 1037.88 cv
287.392 1037.89 287.412 1037.9 287.438 1037.92 cv
cp
308.709 1049.47 mo
307.788 1049.14 306.872 1048.8 305.961 1048.45 cv
305.561 1048.29 305.163 1048.13 304.766 1047.97 cv
304.748 1047.96 304.539 1047.87 304.373 1047.8 cv
304.186 1047.72 303.928 1047.61 303.874 1047.59 cv
302.113 1046.82 300.379 1045.99 298.678 1045.09 cv
295.494 1043.42 292.421 1041.54 289.495 1039.45 cv
288.81 1038.96 288.155 1038.4 287.453 1037.93 cv
287.333 1037.84 287.212 1037.74 287.093 1037.65 cv
286.715 1037.35 286.34 1037.04 285.968 1036.74 cv
284.6 1035.6 283.27 1034.43 281.98 1033.21 cv
279.457 1030.83 277.085 1028.28 274.867 1025.61 cv
274.321 1024.95 273.783 1024.29 273.255 1023.62 cv
273.138 1023.47 273.024 1023.31 272.904 1023.17 cv
272.936 1023.2 272.954 1023.23 272.981 1023.26 cv
272.715 1022.91 272.451 1022.56 272.189 1022.21 cv
271.14 1020.79 270.128 1019.34 269.152 1017.87 cv
267.207 1014.95 265.403 1011.93 263.717 1008.85 cv
262.004 1005.72 260.413 1002.53 258.916 999.297 cv
258.169 997.682 257.446 996.057 256.743 994.423 cv
256.567 994.013 256.396 993.6 256.217 993.191 cv
256.694 994.277 256.116 992.942 256.012 992.69 cv
255.648 991.815 255.291 990.937 254.938 990.057 cv
251.853 982.364 249.135 974.529 246.491 966.675 cv
245.784 964.575 243.537 962.977 241.271 963.711 cv
239.183 964.387 237.548 966.679 238.307 968.932 cv
243.135 983.277 248.218 997.66 255.286 1011.08 cv
262.204 1024.22 271.253 1036.15 283.096 1045.21 cv
290.154 1050.61 298.092 1054.68 306.454 1057.65 cv
308.548 1058.4 311.19 1056.81 311.674 1054.69 cv
312.215 1052.31 310.952 1050.27 308.709 1049.47 cv
cp
f
240.084 940.611 mo
239.157 930.218 238.353 919.801 238.542 909.359 cv
238.583 907.138 236.562 905.014 234.298 905.114 cv
231.965 905.219 230.098 906.979 230.055 909.359 cv
229.865 919.801 230.669 930.218 231.596 940.611 cv
231.793 942.816 233.407 944.964 235.84 944.854 cv
237.97 944.759 240.295 942.979 240.084 940.611 cv
cp
f
575.836 891.483 mo
574.465 885.597 572.827 879.775 571.031 874.005 cv
570.372 871.888 568.041 870.319 565.811 871.041 cv
563.681 871.73 562.14 873.992 562.846 876.261 cv
565.927 886.157 568.538 896.215 570.147 906.46 cv
570.239 907.047 570.328 907.632 570.414 908.219 cv
570.461 908.544 570.504 908.871 570.553 909.196 cv
570.558 909.234 570.562 909.26 570.566 909.286 cv
570.572 909.331 570.577 909.377 570.584 909.435 cv
570.741 910.671 570.89 911.908 571.018 913.148 cv
571.282 915.69 571.479 918.238 571.6 920.789 cv
571.839 925.8 571.792 930.824 571.434 935.828 cv
571.333 937.233 571.209 938.635 571.061 940.036 cv
570.982 940.775 570.897 941.514 570.805 942.252 cv
570.784 942.421 570.762 942.59 570.741 942.758 cv
570.737 942.778 570.648 943.425 570.63 943.552 cv
570.193 946.571 569.64 949.571 568.989 952.552 cv
568.516 954.716 569.636 957.245 571.953 957.773 cv
574.095 958.261 576.667 957.128 577.172 954.809 cv
579.469 944.296 580.518 933.512 580.167 922.755 cv
579.824 912.227 578.225 901.734 575.836 891.483 cv
cp
f
959.03 1103.47 mo
926.029 1105.51 893.165 1108.41 860.079 1108.89 cv
849.6 1109.04 838.907 1109.61 828.499 1108.12 cv
819.349 1106.81 810.333 1104.14 802.011 1100.11 cv
787.818 1093.23 775.611 1082.88 765.683 1070.69 cv
748.972 1050.18 737.444 1024.41 728.838 999.248 cv
719.018 970.528 712.497 940.526 709.538 910.319 cv
706.869 883.065 706.607 854.769 712.855 828.143 cv
715.406 817.275 718.724 807.511 724.407 798.15 cv
727.081 793.746 729.134 790.996 732.771 787.345 cv
736.451 783.65 739.958 780.781 743.873 778.052 cv
765.402 763.041 791.878 756.56 817.585 752.39 cv
856.162 746.131 895.38 745.861 934.359 745.814 cv
965.731 745.777 997.106 745.574 1028.48 745.835 cv
1052.56 746.036 1076.67 746.445 1100.69 748.227 cv
1105.71 748.598 1110.71 749.037 1115.71 749.565 cv
1118.04 749.812 1120.37 750.078 1122.69 750.368 cv
1123.26 750.438 1123.83 750.51 1124.39 750.583 cv
1124.59 750.609 1126.31 750.839 1125.32 750.705 cv
1126.43 750.855 1127.53 751.011 1128.64 751.173 cv
1136.85 752.38 1145.04 753.917 1153.08 756.031 cv
1156.62 756.964 1160.14 758.011 1163.61 759.202 cv
1165.31 759.783 1166.99 760.398 1168.66 761.051 cv
1169.41 761.345 1170.15 761.649 1170.9 761.954 cv
1171.78 762.315 1170.22 761.662 1170.79 761.907 cv
1170.96 761.981 1171.13 762.053 1171.3 762.127 cv
1171.77 762.333 1172.24 762.535 1172.7 762.744 cv
1178.52 765.359 1184.11 768.509 1189.26 772.297 cv
1189.56 772.523 1189.87 772.754 1190.17 772.982 cv
1191.02 773.612 1189.81 772.687 1190.32 773.093 cv
1190.97 773.619 1191.63 774.143 1192.28 774.685 cv
1193.43 775.654 1194.56 776.658 1195.65 777.695 cv
1197.84 779.77 1199.91 781.977 1201.84 784.298 cv
1202.33 784.883 1202.8 785.478 1203.27 786.074 cv
1203.62 786.516 1202.77 785.386 1203.39 786.225 cv
1203.67 786.601 1203.95 786.975 1204.22 787.353 cv
1205.14 788.605 1206.02 789.884 1206.86 791.185 cv
1208.62 793.909 1210.23 796.732 1211.69 799.626 cv
1212.44 801.11 1213.15 802.613 1213.83 804.131 cv
1214 804.517 1214.17 804.906 1214.34 805.294 cv
1214.44 805.51 1214.53 805.728 1214.62 805.946 cv
1214.58 805.852 1214.24 805.032 1214.53 805.72 cv
1214.88 806.565 1215.22 807.411 1215.55 808.262 cv
1216.89 811.675 1218.07 815.147 1219.13 818.655 cv
1221.48 826.447 1223.23 834.412 1224.63 842.427 cv
1225.02 844.678 1225.39 846.935 1225.73 849.194 cv
1226.1 851.69 1226.37 853.633 1226.58 855.327 cv
1227.21 860.198 1227.74 865.082 1228.2 869.972 cv
1229.24 881.093 1229.92 892.246 1230.41 903.404 cv
1231.63 931.024 1231.8 958.686 1231.87 986.329 cv
1231.93 1012.74 1233.87 1043.76 1217.86 1066.27 cv
1210.65 1076.42 1199.32 1082.87 1186.99 1085.88 cv
1173.18 1089.26 1158.71 1088.46 1144.59 1088.82 cv
1113.83 1089.6 1082.99 1090.69 1052.34 1093.46 cv
1046.53 1093.98 1040.73 1094.59 1034.96 1095.44 cv
1032.98 1095.73 1030.96 1096 1029.01 1096.48 cv
1026.8 1097.04 1025.75 1098.34 1025.01 1100.34 cv
1021.69 1109.31 1018.52 1118.35 1015.28 1127.35 cv
1012.75 1134.38 1010.22 1141.41 1007.68 1148.44 cv
1010.05 1147.82 1012.41 1147.2 1014.78 1146.57 cv
999.373 1134.35 983.969 1122.12 968.566 1109.9 cv
966.387 1108.17 964.209 1106.44 962.031 1104.72 cv
960.237 1103.29 957.78 1102.97 956.029 1104.72 cv
954.552 1106.19 954.224 1109.29 956.029 1110.72 cv
971.432 1122.94 986.835 1135.16 1002.24 1147.39 cv
1004.42 1149.12 1006.6 1150.84 1008.77 1152.57 cv
1011.35 1154.62 1014.71 1153.91 1015.87 1150.7 cv
1021 1136.46 1026.13 1122.21 1031.26 1107.97 cv
1031.99 1105.94 1032.72 1103.91 1033.45 1101.88 cv
1032.47 1102.87 1031.48 1103.86 1030.49 1104.85 cv
1032.29 1104.42 1034.12 1104.1 1035.94 1103.81 cv
1036.94 1103.66 1037.95 1103.51 1038.95 1103.38 cv
1038.19 1103.48 1039.6 1103.29 1039.87 1103.26 cv
1040.59 1103.17 1041.31 1103.08 1042.04 1103 cv
1048.05 1102.29 1054.09 1101.76 1060.12 1101.29 cv
1075.17 1100.12 1090.25 1099.33 1105.33 1098.67 cv
1119.99 1098.03 1134.66 1097.52 1149.34 1097.19 cv
1163.53 1096.87 1177.85 1097.29 1191.65 1093.44 cv
1204.06 1089.97 1215.38 1083.24 1223.35 1073.01 cv
1231.14 1063.01 1235.4 1050.82 1237.64 1038.46 cv
1240.2 1024.27 1240.38 1009.91 1240.37 995.539 cv
1240.36 980.928 1240.31 966.317 1240.13 951.707 cv
1239.85 927.706 1239.32 903.674 1237.51 879.731 cv
1236.13 861.564 1234.1 843.288 1229.79 825.556 cv
1226.53 812.143 1221.83 798.788 1214.33 787.121 cv
1207.58 776.613 1198.62 767.797 1188 761.227 cv
1176.22 753.94 1162.82 749.447 1149.38 746.389 cv
1131.78 742.387 1113.69 740.574 1095.71 739.392 cv
1072.2 737.845 1048.61 737.488 1025.05 737.321 cv
994.698 737.106 964.345 737.291 933.994 737.327 cv
895.918 737.372 857.782 737.843 820.045 743.471 cv
794.3 747.311 767.691 753.469 745.185 767.088 cv
736.744 772.197 728.589 778.475 722.424 786.239 cv
715.913 794.438 711.383 803.929 708.071 813.824 cv
700.006 837.922 698.635 864.267 699.613 889.477 cv
700.759 918.97 705.524 948.425 713.173 976.915 cv
720.409 1003.86 730.276 1030.57 744.466 1054.67 cv
759.286 1079.85 780.071 1101.81 808.157 1111.82 cv
827.169 1118.59 847.172 1117.67 867.035 1117.26 cv
883.725 1116.91 900.396 1116.11 917.049 1114.95 cv
931.044 1113.98 945.027 1112.82 959.03 1111.96 cv
964.456 1111.63 964.494 1103.14 959.03 1103.47 cv
cp
f
731.475 868.465 mo
731.721 865.75 732 863.038 732.333 860.331 cv
732.412 859.686 732.479 859.036 732.58 858.393 cv
732.401 859.538 732.574 858.439 732.603 858.234 cv
732.647 857.912 732.693 857.59 732.739 857.269 cv
732.923 855.988 733.121 854.708 733.333 853.431 cv
734.188 848.281 735.281 843.166 736.719 838.146 cv
737.444 835.621 738.255 833.12 739.167 830.655 cv
739.567 829.575 739.994 828.506 740.425 827.438 cv
740.827 826.439 740.054 828.283 740.483 827.294 cv
740.608 827.007 740.731 826.719 740.858 826.432 cv
741.154 825.762 741.458 825.096 741.77 824.435 cv
743.972 819.765 746.605 815.299 749.68 811.15 cv
749.871 810.892 750.065 810.637 750.258 810.38 cv
750.543 810.008 750.519 810.039 750.185 810.475 cv
750.317 810.305 750.451 810.136 750.584 809.968 cv
750.988 809.461 751.399 808.959 751.816 808.463 cv
752.801 807.291 753.824 806.149 754.88 805.04 cv
757.065 802.746 759.399 800.601 761.849 798.592 cv
763.572 797.178 763.424 794.037 761.849 792.59 cv
760.018 790.909 757.686 791.081 755.847 792.59 cv
747.26 799.634 740.224 808.522 735.263 818.457 cv
730.395 828.206 727.344 838.723 725.448 849.426 cv
724.333 855.728 723.565 862.093 722.987 868.465 cv
722.786 870.682 725.083 872.806 727.231 872.709 cv
729.702 872.599 731.26 870.84 731.475 868.465 cv
731.475 868.465 li
cp
f
1158.27 1080.16 mo
1168.7 1079.24 1179.14 1077.65 1188.82 1073.5 cv
1197.6 1069.73 1205.16 1063.27 1209.43 1054.64 cv
1212.39 1048.66 1213.82 1042.23 1214.43 1035.62 cv
1214.63 1033.4 1212.33 1031.28 1210.19 1031.37 cv
1207.71 1031.49 1206.16 1033.24 1205.94 1035.62 cv
1205.88 1036.3 1205.81 1036.98 1205.73 1037.66 cv
1205.59 1038.77 1205.81 1037.13 1205.69 1037.91 cv
1205.63 1038.31 1205.57 1038.71 1205.51 1039.1 cv
1205.29 1040.39 1205.03 1041.67 1204.71 1042.94 cv
1204.41 1044.18 1204.05 1045.41 1203.64 1046.62 cv
1203.45 1047.16 1203.26 1047.7 1203.05 1048.23 cv
1202.96 1048.47 1202.86 1048.71 1202.77 1048.95 cv
1202.64 1049.28 1202.41 1049.37 1202.9 1048.64 cv
1202.81 1048.78 1202.76 1048.96 1202.69 1049.11 cv
1201.78 1051.15 1200.68 1053.1 1199.4 1054.93 cv
1199.24 1055.16 1199.08 1055.38 1198.92 1055.6 cv
1198.85 1055.69 1198.77 1055.79 1198.7 1055.88 cv
1198.45 1056.25 1199.04 1055.45 1199.01 1055.49 cv
1198.65 1055.89 1198.33 1056.33 1197.98 1056.74 cv
1197.28 1057.55 1196.54 1058.33 1195.77 1059.07 cv
1195 1059.8 1194.19 1060.49 1193.36 1061.16 cv
1192.79 1061.63 1194.09 1060.62 1193.5 1061.06 cv
1193.28 1061.22 1193.07 1061.38 1192.85 1061.53 cv
1192.42 1061.85 1191.98 1062.15 1191.54 1062.44 cv
1189.75 1063.62 1187.88 1064.64 1185.95 1065.54 cv
1185.48 1065.76 1185.01 1065.96 1184.54 1066.17 cv
1184.12 1066.36 1185.05 1065.96 1185 1065.97 cv
1184.85 1066.02 1184.7 1066.1 1184.56 1066.15 cv
1184.3 1066.26 1184.04 1066.36 1183.78 1066.46 cv
1182.71 1066.87 1181.64 1067.25 1180.56 1067.6 cv
1178.36 1068.31 1176.13 1068.89 1173.88 1069.4 cv
1171.27 1069.98 1168.63 1070.44 1165.99 1070.82 cv
1165.83 1070.84 1164.62 1071.01 1165.35 1070.91 cv
1166.05 1070.82 1164.93 1070.96 1164.7 1070.99 cv
1164.03 1071.08 1163.35 1071.16 1162.67 1071.23 cv
1161.21 1071.4 1159.74 1071.54 1158.27 1071.67 cv
1156.07 1071.86 1153.92 1073.48 1154.03 1075.91 cv
1154.12 1078.05 1155.9 1080.36 1158.27 1080.16 cv
1158.27 1080.16 li
cp
f
1215.56 1015.49 mo
1216.01 1010.36 1216.06 1005.2 1216.13 1000.05 cv
1216.16 997.829 1214.16 995.704 1211.89 995.806 cv
1209.56 995.91 1207.68 997.67 1207.65 1000.05 cv
1207.57 1005.2 1207.52 1010.36 1207.07 1015.49 cv
1206.87 1017.71 1209.16 1019.83 1211.31 1019.74 cv
1213.78 1019.62 1215.35 1017.87 1215.56 1015.49 cv
1215.56 1015.49 li
cp
f
1809.86 1036.53 mo
1809.85 1036.72 1809.82 1036.9 1809.8 1037.09 cv
1809.72 1037.55 1809.64 1038 1809.53 1038.45 cv
1809.36 1039.17 1809.12 1039.87 1808.88 1040.57 cv
1808.87 1040.62 1808.86 1040.64 1808.85 1040.67 cv
1808.79 1040.79 1808.75 1040.9 1808.69 1041.02 cv
1808.47 1041.44 1808.26 1041.87 1808.03 1042.28 cv
1807.67 1042.92 1807.26 1043.52 1806.84 1044.12 cv
1806.74 1044.25 1806.55 1044.49 1806.45 1044.61 cv
1806.12 1044.99 1805.78 1045.37 1805.43 1045.74 cv
1804.83 1046.36 1804.2 1046.96 1803.54 1047.53 cv
1803.29 1047.74 1803.02 1047.96 1802.76 1048.17 cv
1802.7 1048.21 1801.99 1048.74 1801.8 1048.87 cv
1798.24 1051.37 1794.31 1053.22 1790.76 1054.54 cv
1780.41 1058.4 1769.33 1060.38 1758.39 1061.69 cv
1729.98 1065.1 1701.1 1064.66 1672.55 1063.57 cv
1665.46 1063.3 1658.36 1062.96 1651.27 1062.58 cv
1649.94 1062.51 1648.16 1063.41 1647.61 1064.68 cv
1644.8 1071.15 1640.85 1077.26 1636.79 1083 cv
1627.88 1095.57 1615.85 1107.6 1602.31 1116.28 cv
1594.68 1121.17 1586.54 1125.07 1578 1127.97 cv
1578.11 1127.48 1578.22 1127 1578.32 1126.52 cv
1580.3 1117.53 1581.26 1108.29 1581.67 1099.11 cv
1582.03 1091.2 1581.92 1083.27 1581.5 1075.37 cv
1581.38 1073.04 1579.65 1071.18 1577.26 1071.12 cv
1566.79 1070.89 1556.29 1071.9 1545.87 1072.77 cv
1531.32 1073.99 1516.77 1075.37 1502.2 1076.46 cv
1485.99 1077.67 1469.74 1078.57 1453.47 1078.68 cv
1445.63 1078.73 1437.78 1078.6 1429.94 1078.18 cv
1426.09 1077.97 1422.25 1077.69 1418.41 1077.33 cv
1414.71 1076.97 1411.07 1076.54 1408.05 1076.09 cv
1401.24 1075.08 1394.46 1073.71 1387.85 1071.76 cv
1381.47 1069.87 1377.22 1068.27 1371.63 1065.13 cv
1370.45 1064.47 1369.29 1063.78 1368.16 1063.04 cv
1367.61 1062.68 1367.07 1062.3 1366.53 1061.92 cv
1366.26 1061.73 1366 1061.54 1365.74 1061.35 cv
1365.6 1061.25 1365.51 1061.19 1365.44 1061.14 cv
1365.42 1061.12 1365.38 1061.09 1365.31 1061.03 cv
1363.25 1059.39 1361.32 1057.6 1359.59 1055.62 cv
1359.18 1055.15 1358.79 1054.68 1358.4 1054.2 cv
1358.4 1054.19 1358.4 1054.19 1358.39 1054.18 cv
1358.37 1054.15 1358.35 1054.12 1358.32 1054.08 cv
1358.14 1053.83 1357.96 1053.58 1357.78 1053.33 cv
1357.01 1052.24 1356.31 1051.11 1355.66 1049.94 cv
1355.37 1049.4 1355.08 1048.85 1354.81 1048.29 cv
1354.72 1048.09 1354.3 1047.13 1354.23 1046.99 cv
1353.77 1045.82 1353.35 1044.63 1353.01 1043.42 cv
1352.65 1042.16 1352.36 1040.88 1352.13 1039.59 cv
1352.07 1039.26 1352.02 1038.92 1351.96 1038.59 cv
1351.95 1038.54 1351.95 1038.49 1351.94 1038.45 cv
1351.94 1038.43 1351.93 1038.41 1351.93 1038.37 cv
1351.84 1037.57 1351.76 1036.76 1351.71 1035.95 cv
1351.53 1033.26 1351.63 1030.56 1351.79 1027.86 cv
1351.96 1024.98 1352.23 1022.1 1352.54 1019.22 cv
1352.69 1017.78 1352.86 1016.33 1353.04 1014.89 cv
1353.28 1012.9 1353.46 1011.5 1353.66 1010.08 cv
1356.06 992.806 1359.35 975.644 1363.08 958.609 cv
1367.05 940.429 1371.55 922.329 1377.08 904.554 cv
1379.4 897.091 1381.91 889.67 1384.84 882.422 cv
1385.8 880.043 1387.01 877.246 1388.46 874.305 cv
1389.63 871.96 1390.87 869.648 1392.31 867.461 cv
1392.61 867.012 1392.92 866.575 1393.22 866.134 cv
1393.34 865.96 1393.42 865.849 1393.46 865.775 cv
1393.5 865.737 1393.54 865.686 1393.61 865.61 cv
1394.19 864.946 1394.75 864.281 1395.39 863.671 cv
1396.02 863.093 1396.66 862.539 1397.32 862.004 cv
1397.34 861.988 1397.35 861.985 1397.36 861.973 cv
1397.54 861.838 1397.72 861.705 1397.9 861.575 cv
1398.36 861.247 1398.82 860.92 1399.29 860.604 cv
1401.05 859.42 1402.89 858.351 1404.77 857.358 cv
1409.28 854.97 1413.43 853.281 1418.21 851.569 cv
1430.68 847.103 1443.63 844.012 1456.61 841.435 cv
1489.75 834.852 1523.6 831.692 1557.33 830.219 cv
1575.08 829.445 1592.86 829.19 1610.63 829.102 cv
1624.99 829.031 1639.36 829.155 1653.71 829.927 cv
1665.08 830.539 1676.18 831.499 1687.18 833.563 cv
1691.75 834.421 1696.29 835.467 1700.74 836.793 cv
1702.79 837.401 1704.82 838.068 1706.82 838.805 cv
1707.75 839.148 1708.67 839.507 1709.6 839.879 cv
1709.79 839.959 1709.99 840.041 1710.19 840.124 cv
1710.24 840.147 1710.3 840.172 1710.38 840.206 cv
1710.84 840.412 1711.31 840.619 1711.78 840.832 cv
1715.29 842.439 1718.68 844.31 1721.87 846.485 cv
1722.6 846.985 1723.32 847.504 1724.03 848.03 cv
1724.17 848.13 1724.3 848.234 1724.44 848.336 cv
1724.47 848.367 1724.51 848.396 1724.56 848.44 cv
1724.93 848.733 1725.29 849.025 1725.65 849.325 cv
1727.01 850.456 1728.34 851.639 1729.57 852.911 cv
1730.59 853.968 1731.48 855.143 1732.39 856.293 cv
1732.4 856.301 1732.4 856.306 1732.41 856.314 cv
1732.57 856.525 1732.73 856.734 1732.89 856.945 cv
1733.29 857.47 1733.68 857.996 1734.07 858.524 cv
1734.95 859.71 1735.82 860.904 1736.68 862.104 cv
1748 877.928 1758.25 894.562 1767.74 911.537 cv
1780.19 933.795 1791.4 956.926 1799.54 981.13 cv
1803.49 992.855 1806.72 1004.87 1808.55 1017.12 cv
1809.36 1022.46 1809.82 1027.98 1809.9 1033.43 cv
1809.92 1034.47 1809.91 1035.49 1809.86 1036.53 cv
cp
1813.72 999.524 mo
1807.52 973.72 1796.83 949.002 1784.8 925.429 cv
1774.56 905.376 1763.09 885.91 1750.52 867.23 cv
1746.69 861.542 1742.77 855.908 1738.56 850.495 cv
1735.18 846.153 1731.12 842.604 1726.59 839.459 cv
1711.1 828.695 1691.63 825.08 1673.25 823.012 cv
1643.79 819.697 1613.87 820.389 1584.29 820.954 cv
1548.21 821.644 1512.17 823.959 1476.48 829.394 cv
1461.52 831.673 1446.6 834.481 1431.98 838.422 cv
1420.88 841.414 1409.65 844.997 1399.53 850.542 cv
1396.06 852.447 1392.72 854.678 1389.78 857.339 cv
1389.65 857.44 1389.52 857.55 1389.39 857.67 cv
1389.26 857.789 1389.15 857.909 1389.04 858.032 cv
1385.65 861.393 1383.23 865.791 1381.14 870.02 cv
1377.96 876.442 1375.36 883.164 1372.98 889.915 cv
1366.94 907.051 1362.27 924.679 1358.08 942.348 cv
1353.8 960.41 1350.07 978.625 1347.11 996.954 cv
1345.89 1004.54 1344.79 1012.15 1343.99 1019.79 cv
1343.4 1025.36 1342.82 1031.05 1343.27 1036.65 cv
1344.21 1048.39 1349.54 1059.04 1358.68 1066.53 cv
1368.6 1074.65 1380.96 1079.14 1393.34 1081.96 cv
1408.34 1085.38 1423.84 1086.62 1439.19 1087.04 cv
1455.72 1087.48 1472.26 1086.88 1488.76 1085.87 cv
1504.26 1084.91 1519.73 1083.54 1535.2 1082.18 cv
1547.09 1081.14 1559.02 1079.96 1570.96 1079.64 cv
1571.71 1079.62 1572.46 1079.61 1573.21 1079.6 cv
1573.93 1096.65 1573.48 1114.19 1568.55 1130.43 cv
1568.27 1131.35 1567.98 1132.28 1567.62 1133.17 cv
1566.34 1136.3 1570.01 1139.14 1572.84 1138.4 cv
1606.38 1129.56 1634.57 1105.7 1651.47 1075.71 cv
1652.31 1074.23 1653.13 1072.73 1653.88 1071.21 cv
1682.84 1072.73 1711.96 1073.65 1740.91 1071.76 cv
1753.89 1070.92 1766.95 1069.54 1779.65 1066.64 cv
1789.06 1064.48 1798.98 1061.46 1806.84 1055.66 cv
1813.53 1050.72 1818.21 1043.88 1818.4 1035.36 cv
1818.65 1023.37 1816.51 1011.14 1813.72 999.524 cv
cp
f
1391.92 937.13 mo
1391.4 936.25 1390.39 935.411 1389.38 935.181 cv
1388.3 934.933 1387.08 934.986 1386.11 935.608 cv
1385.25 936.164 1384.32 937.081 1384.16 938.144 cv
1383.8 940.577 1383.3 942.984 1382.87 945.406 cv
1382.69 945.97 1382.67 946.534 1382.8 947.098 cv
1382.82 947.663 1382.99 948.188 1383.3 948.675 cv
1383.81 949.556 1384.82 950.395 1385.84 950.626 cv
1386.92 950.873 1388.14 950.82 1389.11 950.198 cv
1389.98 949.632 1390.87 948.734 1391.06 947.662 cv
1391.48 945.241 1391.99 942.833 1392.35 940.401 cv
1392.52 939.837 1392.55 939.273 1392.42 938.708 cv
1392.4 938.144 1392.23 937.618 1391.92 937.13 cv
cp
f
1447.85 855.035 mo
1436.54 855.718 1424.79 858.015 1415.39 864.714 cv
1406.92 870.749 1401.14 879.395 1397.04 888.836 cv
1394.24 895.291 1392.02 901.955 1390.03 908.702 cv
1389.41 910.831 1390.79 913.419 1393 913.922 cv
1395.27 914.441 1397.55 913.239 1398.22 910.958 cv
1399.87 905.341 1401.66 899.753 1403.87 894.327 cv
1404 894.013 1404.15 893.702 1404.26 893.383 cv
1404.21 893.531 1404.17 893.644 1404.14 893.73 cv
1404.2 893.561 1404.28 893.34 1404.32 893.235 cv
1404.59 892.628 1404.85 892.022 1405.13 891.421 cv
1405.67 890.251 1406.23 889.094 1406.82 887.952 cv
1407.92 885.818 1409.13 883.737 1410.47 881.744 cv
1410.78 881.287 1411.09 880.835 1411.41 880.388 cv
1411.58 880.151 1411.76 879.916 1411.93 879.683 cv
1411.95 879.653 1411.97 879.625 1412 879.595 cv
1412.72 878.756 1413.39 877.88 1414.14 877.061 cv
1415.63 875.429 1417.26 873.984 1418.95 872.57 cv
1418.96 872.561 1418.97 872.552 1418.99 872.543 cv
1419.19 872.395 1419.39 872.248 1419.59 872.104 cv
1420.08 871.751 1420.58 871.41 1421.09 871.081 cv
1422.03 870.469 1422.99 869.897 1423.98 869.366 cv
1425.03 868.801 1426.1 868.281 1427.19 867.803 cv
1427.21 867.798 1427.22 867.792 1427.23 867.787 cv
1427.23 867.787 1427.23 867.787 1427.23 867.786 cv
1427.48 867.687 1427.74 867.584 1427.99 867.487 cv
1428.61 867.246 1429.23 867.017 1429.87 866.801 cv
1432.65 865.849 1435.51 865.136 1438.41 864.604 cv
1439.21 864.456 1440.02 864.323 1440.82 864.201 cv
1441.01 864.174 1441.19 864.149 1441.38 864.121 cv
1441.38 864.121 1441.38 864.12 1441.38 864.12 cv
1441.75 864.073 1442.13 864.025 1442.5 863.983 cv
1444.28 863.778 1446.06 863.63 1447.85 863.522 cv
1450.06 863.389 1452.2 861.666 1452.09 859.279 cv
1452 857.094 1450.22 854.892 1447.85 855.035 cv
cp
f
1404.14 893.73 mo
1404.05 893.954 1404.01 894.085 1404.14 893.73 cv
1404.14 893.73 li
cp
f
1789.12 1001.19 mo
1786.92 995.287 1784.61 989.424 1782.37 983.537 cv
1781.73 981.869 1781.1 980.199 1780.47 978.528 cv
1779.69 976.456 1777.57 974.814 1775.25 975.564 cv
1773.22 976.22 1771.45 978.56 1772.29 980.785 cv
1776.35 991.604 1780.95 1002.3 1784.36 1013.35 cv
1784.95 1015.29 1785.5 1017.24 1785.93 1019.23 cv
1786.11 1020.05 1786.27 1020.87 1786.4 1021.71 cv
1786.39 1021.64 1786.39 1021.57 1786.38 1021.49 cv
1786.4 1021.68 1786.43 1021.87 1786.45 1022.05 cv
1786.49 1022.45 1786.53 1022.84 1786.55 1023.24 cv
1786.63 1024.35 1786.59 1025.43 1786.5 1026.53 cv
1786.47 1026.7 1786.45 1026.86 1786.41 1027.03 cv
1786.31 1027.47 1786.19 1027.9 1786.05 1028.32 cv
1786.02 1028.41 1785.99 1028.5 1785.95 1028.59 cv
1785.95 1028.6 1785.94 1028.6 1785.94 1028.61 cv
1785.75 1029 1785.53 1029.38 1785.29 1029.74 cv
1785.24 1029.83 1785.18 1029.91 1785.12 1029.99 cv
1784.83 1030.33 1784.52 1030.65 1784.19 1030.95 cv
1784.05 1031.08 1783.91 1031.2 1783.76 1031.33 cv
1783.38 1031.59 1783 1031.85 1782.6 1032.09 cv
1782.15 1032.36 1781.69 1032.6 1781.23 1032.83 cv
1780.99 1032.95 1780.75 1033.06 1780.51 1033.17 cv
1777.89 1034.17 1775.17 1034.86 1772.42 1035.38 cv
1771.58 1035.54 1770.75 1035.68 1769.91 1035.81 cv
1769.5 1035.88 1769.09 1035.94 1768.69 1036 cv
1768.53 1036.02 1768.38 1036.04 1768.23 1036.06 cv
1768.19 1036.07 1768.15 1036.07 1768.12 1036.08 cv
1766.14 1036.33 1764.17 1036.53 1762.19 1036.7 cv
1751.37 1037.65 1740.48 1037.82 1729.62 1037.96 cv
1727.9 1037.98 1726.18 1038 1724.46 1038.01 cv
1722.24 1038.04 1720.11 1039.95 1720.21 1042.26 cv
1720.31 1044.54 1722.08 1046.52 1724.46 1046.5 cv
1736.18 1046.39 1747.94 1046.27 1759.64 1045.4 cv
1766.93 1044.85 1774.55 1044.23 1781.5 1041.82 cv
1786.2 1040.19 1791.02 1037.52 1793.29 1032.85 cv
1796.05 1027.17 1795.13 1020.72 1793.6 1014.81 cv
1792.41 1010.18 1790.78 1005.67 1789.12 1001.19 cv
cp
f
1786.41 1021.75 mo
1786.41 1021.74 1786.4 1021.72 1786.4 1021.71 cv
1786.5 1022.87 1786.46 1022.09 1786.41 1021.75 cv
cp
f
1722.81 634.727 mo
1721.53 643.171 1720.06 651.637 1717.78 659.875 cv
1716.94 662.94 1715.98 665.978 1714.83 668.945 cv
1714.39 670.095 1713.91 671.235 1713.4 672.358 cv
1713.16 672.878 1712.92 673.394 1712.66 673.907 cv
1712.58 674.068 1712 675.157 1711.98 675.229 cv
1710.99 676.966 1709.85 678.59 1708.59 680.135 cv
1708.49 680.253 1707.99 680.782 1707.9 680.893 cv
1707.71 681.081 1707.53 681.272 1707.33 681.448 cv
1706.69 682.015 1706.04 682.569 1705.35 683.071 cv
1705.05 683.286 1704.75 683.488 1704.44 683.69 cv
1704.42 683.701 1704.42 683.702 1704.41 683.711 cv
1704.36 683.738 1704.3 683.767 1704.21 683.814 cv
1703.5 684.183 1702.8 684.549 1702.06 684.861 cv
1701.37 685.155 1700.67 685.397 1699.96 685.643 cv
1699.91 685.658 1699.88 685.67 1699.85 685.682 cv
1699.79 685.697 1699.71 685.714 1699.61 685.74 cv
1699.22 685.839 1698.83 685.943 1698.44 686.036 cv
1691.47 687.684 1684.24 687.82 1677.27 689.543 cv
1673.49 690.479 1668.34 691.346 1665.69 694.468 cv
1663.83 696.659 1662.63 699.467 1661.33 702.006 cv
1656.94 710.573 1652.36 718.81 1645.53 726.495 cv
1636.95 736.133 1625.37 742.959 1612.5 745.285 cv
1606.84 746.309 1601.14 746.504 1595.45 746.143 cv
1601.15 740.404 1606.58 734.335 1610.72 727.41 cv
1616.16 718.305 1618.95 708.262 1621 697.928 cv
1621.42 695.824 1619.37 693.283 1617.22 693.264 cv
1587.41 693.001 1557.68 691.528 1528.02 688.403 cv
1515.63 687.096 1503.25 685.615 1490.85 684.259 cv
1486.76 683.81 1482.64 683.472 1478.57 682.835 cv
1477.48 682.664 1476.39 682.473 1475.3 682.255 cv
1474.73 682.14 1474.15 682.012 1473.58 681.888 cv
1473.23 681.813 1473.07 681.782 1473 681.769 cv
1472.93 681.747 1472.78 681.701 1472.44 681.608 cv
1470.3 681.012 1468.18 680.36 1466.11 679.534 cv
1465.2 679.169 1464.3 678.776 1463.41 678.354 cv
1462.93 678.126 1462.45 677.883 1461.98 677.646 cv
1461.73 677.521 1461.59 677.456 1461.52 677.426 cv
1461.45 677.381 1461.32 677.299 1461.09 677.161 cv
1459.28 676.069 1457.53 674.909 1455.88 673.581 cv
1455.12 672.967 1454.38 672.32 1453.66 671.661 cv
1453.64 671.644 1453.63 671.634 1453.61 671.621 cv
1453.44 671.445 1453.26 671.272 1453.08 671.093 cv
1452.64 670.632 1452.19 670.173 1451.76 669.698 cv
1448.14 665.718 1446.23 662.648 1444.1 658.549 cv
1441.41 653.383 1439.33 647.92 1437.56 642.376 cv
1436.78 639.914 1435.79 636.355 1434.97 633.104 cv
1434.04 629.38 1433.21 625.631 1432.45 621.866 cv
1430.67 613.033 1429.26 604.123 1428.04 595.196 cv
1424.76 571.234 1422.67 547.113 1420.74 523.011 cv
1415.19 453.826 1409.92 384.421 1408.75 315.004 cv
1408.22 283.681 1408.41 252.235 1411.09 221.002 cv
1412.14 208.77 1413.58 196.538 1415.97 184.488 cv
1417.72 175.654 1419.98 166.76 1423.8 158.57 cv
1425.16 155.652 1426.51 153.262 1428.76 150.484 cv
1429.06 150.118 1429.38 149.764 1429.69 149.401 cv
1430.23 148.765 1430.13 148.91 1430.03 149.019 cv
1430.71 148.323 1431.42 147.653 1432.15 147.013 cv
1433.65 145.706 1435.25 144.537 1436.91 143.45 cv
1437.21 143.253 1437.3 143.193 1437.31 143.181 cv
1437.3 143.192 1437.25 143.232 1437.5 143.085 cv
1437.92 142.84 1438.33 142.598 1438.76 142.363 cv
1439.74 141.817 1440.75 141.305 1441.77 140.821 cv
1443.89 139.812 1446.08 138.934 1448.3 138.157 cv
1458.82 134.474 1471.7 132.852 1483.45 132.042 cv
1525.22 129.164 1567.48 134.128 1608.98 138.273 cv
1631.33 140.505 1654.04 141.193 1676.04 146.081 cv
1695.07 150.311 1712.93 158.866 1725.09 174.538 cv
1727.98 178.255 1729.95 181.343 1731.97 184.982 cv
1734.39 189.355 1736.47 193.91 1738.28 198.564 cv
1742.6 209.633 1745.32 221.127 1747.33 233.032 cv
1753.32 268.636 1752.69 305.275 1750.71 341.196 cv
1749.27 367.113 1746.37 392.865 1744.11 418.711 cv
1741.69 446.452 1740.2 474.265 1737.28 501.964 cv
1735.01 523.582 1732.73 545.201 1730.46 566.819 cv
1728.08 589.455 1726.21 612.217 1722.81 634.727 cv
cp
1735.6 599.036 mo
1737.79 578.288 1739.97 557.539 1742.15 536.792 cv
1744.93 510.373 1747.68 483.981 1749.63 457.484 cv
1751.69 429.457 1754.59 401.532 1756.94 373.533 cv
1760.39 332.413 1762.46 290.6 1758.11 249.461 cv
1755.57 225.411 1750.79 200.145 1738.32 179.063 cv
1730.41 165.711 1719.47 154.925 1705.69 147.632 cv
1686.45 137.45 1664.01 134.743 1642.65 132.735 cv
1617.53 130.375 1592.4 127.832 1567.25 125.791 cv
1546.3 124.09 1525.26 122.8 1504.23 122.911 cv
1489.38 122.99 1474.36 123.593 1459.76 126.434 cv
1449.61 128.408 1439.48 131.515 1430.84 137.335 cv
1427.48 139.592 1424.5 142.344 1421.92 145.457 cv
1416.96 151.587 1413.96 159.248 1411.67 166.718 cv
1408.43 177.307 1406.44 188.281 1404.94 199.236 cv
1400.88 228.816 1400.13 258.862 1400.1 288.681 cv
1400.01 360.219 1405.38 431.672 1410.71 502.969 cv
1412.7 529.688 1414.8 556.423 1417.94 583.036 cv
1420.05 600.879 1422.51 618.823 1427.04 636.237 cv
1432.47 657.118 1441.61 678.885 1463.01 687.437 cv
1467.61 689.275 1472.5 690.446 1477.38 691.228 cv
1487.57 692.862 1497.96 693.586 1508.22 694.751 cv
1535.23 697.819 1562.24 700.298 1589.42 701.176 cv
1596.8 701.414 1604.19 701.561 1611.58 701.651 cv
1609.87 709.103 1607.52 716.458 1603.5 723 cv
1598.15 731.734 1590.76 739.013 1583.44 746.083 cv
1580.78 748.65 1581.87 753.008 1585.66 753.602 cv
1602.35 756.214 1619.99 754.722 1634.81 746.065 cv
1645.82 739.631 1654.57 730.227 1661.3 719.469 cv
1663.92 715.287 1666.25 710.932 1668.5 706.545 cv
1669.28 705.018 1670.06 703.488 1670.87 701.975 cv
1670.88 701.955 1670.89 701.943 1670.89 701.927 cv
1670.92 701.888 1670.94 701.849 1670.97 701.798 cv
1671.14 701.528 1671.29 701.251 1671.46 700.984 cv
1671.66 700.663 1671.91 700.351 1672.13 700.033 cv
1672.99 699.716 1673.83 699.361 1674.7 699.066 cv
1676.24 698.542 1675.59 698.737 1676.9 698.381 cv
1678 698.083 1679.1 697.802 1680.21 697.555 cv
1683.96 696.723 1687.76 696.239 1691.56 695.755 cv
1698.57 694.861 1705.64 693.648 1711.36 689.163 cv
1719.41 682.843 1723.16 672.195 1725.77 662.684 cv
1731.46 641.956 1733.36 620.336 1735.6 599.036 cv
cp
f
1721.43 250.792 mo
1721.71 240.305 1721.55 229.722 1720.11 219.315 cv
1718.96 211.054 1716.95 202.723 1713.3 195.189 cv
1710 188.384 1705.34 182.324 1699.37 177.647 cv
1693.22 172.823 1685.85 169.641 1678.3 167.751 cv
1666.98 164.916 1655.37 164.409 1643.74 164.77 cv
1641.95 164.826 1640.16 164.906 1638.37 165.005 cv
1636.14 165.128 1634.44 167.813 1634.87 169.887 cv
1635.39 172.338 1637.37 173.513 1639.76 173.381 cv
1641.5 173.285 1643.25 173.208 1645 173.152 cv
1645.17 173.147 1645.47 173.139 1645.59 173.136 cv
1645.99 173.127 1646.38 173.12 1646.78 173.113 cv
1647.63 173.1 1648.47 173.092 1649.32 173.09 cv
1652.52 173.085 1655.72 173.169 1658.91 173.37 cv
1663.72 173.674 1668.52 174.242 1673.24 175.221 cv
1673.75 175.329 1674.27 175.442 1674.79 175.56 cv
1674.95 175.597 1675.11 175.635 1675.27 175.673 cv
1675.33 175.686 1675.38 175.7 1675.43 175.713 cv
1676.42 175.962 1677.4 176.232 1678.37 176.525 cv
1680.19 177.072 1681.98 177.697 1683.74 178.412 cv
1685.41 179.09 1687.05 179.849 1688.64 180.695 cv
1688.67 180.71 1688.72 180.736 1688.77 180.763 cv
1688.87 180.821 1688.97 180.88 1689.03 180.911 cv
1689.41 181.131 1689.79 181.355 1690.17 181.586 cv
1690.91 182.041 1691.64 182.518 1692.35 183.015 cv
1693.73 183.973 1695.05 185.01 1696.31 186.123 cv
1696.57 186.355 1696.83 186.593 1697.08 186.829 cv
1697.23 186.969 1697.37 187.108 1697.51 187.251 cv
1698.08 187.828 1698.64 188.422 1699.17 189.031 cv
1700.3 190.308 1701.35 191.652 1702.32 193.051 cv
1702.55 193.378 1702.77 193.707 1702.99 194.04 cv
1703.09 194.198 1703.19 194.358 1703.29 194.517 cv
1703.69 195.241 1704.14 195.939 1704.53 196.666 cv
1706.25 199.855 1707.62 203.223 1708.73 206.671 cv
1708.79 206.865 1708.85 207.06 1708.91 207.254 cv
1709.05 207.722 1709.18 208.19 1709.31 208.66 cv
1709.58 209.635 1709.83 210.616 1710.06 211.599 cv
1710.53 213.615 1710.93 215.646 1711.27 217.688 cv
1712.02 222.193 1712.49 226.745 1712.77 231.303 cv
1712.84 232.493 1712.91 233.685 1712.95 234.876 cv
1712.98 235.509 1713 236.143 1713.02 236.776 cv
1713.02 236.776 1713.02 236.776 1713.02 236.776 cv
1713.02 236.792 1713.02 236.803 1713.02 236.821 cv
1713.03 237.169 1713.04 237.518 1713.05 237.866 cv
1713.1 240.485 1713.11 243.106 1713.07 245.726 cv
1713.06 247.119 1713.03 248.512 1712.99 249.904 cv
1712.93 252.118 1714.35 254.424 1716.77 254.569 cv
1718.92 254.698 1721.37 253.169 1721.43 250.792 cv
cp
f
1725.47 278.202 mo
1725.48 277.042 1725.31 276.019 1724.55 275.088 cv
1723.9 274.278 1722.75 273.601 1721.7 273.537 cv
1720.6 273.472 1719.43 273.711 1718.58 274.46 cv
1717.79 275.162 1717.04 276.207 1717.03 277.314 cv
1717.02 279.492 1717.12 281.668 1717.19 283.845 cv
1717.22 285.278 1717.24 286.711 1717.18 288.144 cv
1717.14 289.278 1717.37 290.357 1718.1 291.259 cv
1718.76 292.068 1719.9 292.746 1720.96 292.81 cv
1722.06 292.875 1723.22 292.636 1724.07 291.887 cv
1724.88 291.17 1725.58 290.154 1725.62 289.032 cv
1725.73 286.303 1725.6 283.572 1725.51 280.843 cv
1725.49 279.963 1725.47 279.082 1725.47 278.202 cv
cp
f
1459.1 631.747 mo
1458.03 628.995 1457.04 626.211 1456.12 623.407 cv
1455.88 622.666 1455.64 621.925 1455.4 621.181 cv
1455.29 620.831 1455.18 620.48 1455.08 620.129 cv
1455.01 619.928 1454.95 619.727 1454.89 619.525 cv
1454.77 619.15 1454.78 619.273 1454.84 619.459 cv
1454.58 618.878 1454.47 618.113 1454.3 617.521 cv
1454.06 616.695 1453.83 615.867 1453.6 615.038 cv
1450.13 602.491 1447.68 589.589 1446.69 576.603 cv
1446.55 574.888 1446.45 573.173 1446.38 571.455 cv
1446.36 571.021 1446.37 570.576 1446.33 570.143 cv
1446.33 569.993 1446.32 569.843 1446.32 569.692 cv
1446.3 568.893 1446.29 568.093 1446.29 567.293 cv
1446.29 564.065 1446.42 560.836 1446.73 557.622 cv
1446.94 555.413 1445.26 553.096 1442.96 552.956 cv
1440.67 552.82 1438.52 554.366 1438.29 556.734 cv
1437.08 569.328 1438.28 582.202 1440.38 594.638 cv
1442.58 607.643 1445.91 620.537 1450.48 632.912 cv
1452.57 638.572 1454.96 644.155 1457.93 649.414 cv
1459.01 651.343 1461.37 652.635 1463.54 651.537 cv
1465.44 650.577 1466.83 647.989 1465.66 645.921 cv
1463.1 641.384 1460.98 636.603 1459.1 631.747 cv
cp
f
1495.13 656.048 mo
1492.21 655.579 1489.29 655.11 1486.4 654.5 cv
1485.74 654.361 1485.05 654.252 1484.41 654.056 cv
1485.47 654.38 1484.25 654.016 1484.02 653.957 cv
1483.64 653.857 1483.26 653.755 1482.87 653.648 cv
1481.45 653.248 1480.04 652.793 1478.65 652.28 cv
1476.57 651.514 1473.89 652.483 1473.14 654.682 cv
1472.41 656.822 1473.32 659.362 1475.55 660.184 cv
1481.57 662.403 1487.93 663.474 1494.24 664.489 cv
1496.44 664.842 1498.78 662.916 1498.91 660.713 cv
1499.05 658.311 1497.48 656.427 1495.13 656.048 cv
cp
f
2264.16 413.245 mo
2264.16 413.243 2264.16 413.242 2264.15 413.24 cv
2264.15 413.241 2264.16 413.242 2264.16 413.242 cv
2264.16 413.243 2264.16 413.244 2264.16 413.245 cv
cp
f
2297.11 452.07 mo
2292.64 454.555 2287.97 456.685 2283.21 458.542 cv
2278.95 460.203 2276.27 461.101 2271.99 462.33 cv
2269.6 463.015 2267.19 463.646 2264.77 464.179 cv
2264.41 464.257 2264.04 464.312 2263.69 464.405 cv
2260.26 465.322 2259.49 469.694 2258.6 472.709 cv
2255.1 484.671 2253.79 497.159 2249.07 508.777 cv
2244.74 519.431 2237.46 528.487 2227.9 534.889 cv
2227.85 534.921 2227.83 534.934 2227.81 534.953 cv
2227.76 534.984 2227.71 535.014 2227.62 535.065 cv
2227.3 535.261 2226.99 535.462 2226.67 535.657 cv
2225.93 536.109 2225.18 536.549 2224.42 536.977 cv
2222.84 537.867 2221.23 538.703 2219.6 539.492 cv
2216.19 541.145 2212.67 542.596 2209.11 543.901 cv
2205.26 545.31 2202.42 546.206 2198.08 547.414 cv
2193.75 548.622 2189.38 549.676 2184.98 550.61 cv
2175.34 552.656 2165.59 554.14 2155.8 555.245 cv
2134.17 557.689 2112.64 558.292 2090.77 557.667 cv
2068.53 557.032 2046.29 555.088 2024.31 551.552 cv
2005.3 548.493 1986.8 544.427 1968.53 537.639 cv
1964.68 536.208 1960.88 534.654 1957.14 532.934 cv
1956.29 532.541 1955.44 532.139 1954.6 531.727 cv
1954.21 531.539 1953.83 531.348 1953.44 531.155 cv
1953.18 531.026 1951.99 530.416 1952.31 530.581 cv
1951.45 530.136 1949.25 528.918 1947.88 528.11 cv
1940.71 523.867 1935.34 519.244 1930 513.19 cv
1913.53 494.528 1904.49 470.33 1898.91 446.395 cv
1893.06 421.287 1890.75 395.41 1890.23 369.675 cv
1890.11 364.013 1890.09 358.35 1890.14 352.686 cv
1890.42 322.085 1890.51 291.483 1891.11 260.885 cv
1891.44 243.67 1891.85 226.446 1892.8 209.253 cv
1893.36 199.04 1894.15 188.81 1896.1 178.753 cv
1896.2 178.215 1896.31 177.678 1896.42 177.141 cv
1896.46 176.947 1896.5 176.754 1896.54 176.561 cv
1896.56 176.495 1896.57 176.435 1896.58 176.393 cv
1896.82 175.345 1897.06 174.298 1897.33 173.255 cv
1897.84 171.212 1898.42 169.185 1899.06 167.178 cv
1900.31 163.293 1901.81 159.488 1903.62 155.832 cv
1903.73 155.612 1903.84 155.394 1903.95 155.174 cv
1904.18 154.756 1904.4 154.339 1904.63 153.925 cv
1905.11 153.05 1905.62 152.186 1906.14 151.334 cv
1907.18 149.627 1908.31 147.967 1909.51 146.363 cv
1910.11 145.556 1910.73 144.762 1911.37 143.984 cv
1911.64 143.657 1911.91 143.333 1912.19 143.013 cv
1912.33 142.849 1912.86 142.251 1913.06 142.027 cv
1914.38 140.596 1915.76 139.213 1917.21 137.9 cv
1918.8 136.458 1920.46 135.092 1922.17 133.802 cv
1923.06 133.136 1923.96 132.49 1924.87 131.863 cv
1925.16 131.669 1925.44 131.479 1925.73 131.289 cv
1925.63 131.362 1926.81 130.592 1927.06 130.44 cv
1931.23 127.86 1935.63 125.658 1940.14 123.755 cv
1942.63 122.707 1945.15 121.749 1947.71 120.87 cv
1948.04 120.755 1948.37 120.643 1948.7 120.531 cv
1948.75 120.516 1948.78 120.506 1948.81 120.495 cv
1948.86 120.478 1948.92 120.458 1949 120.432 cv
1949.69 120.212 1950.38 119.994 1951.06 119.781 cv
1952.48 119.346 1953.9 118.933 1955.32 118.539 cv
1961.57 116.811 1967.92 115.456 1974.31 114.356 cv
2011.01 108.041 2048.82 108.958 2085.92 110.859 cv
2111.14 112.153 2136.5 113.771 2161.47 117.667 cv
2179.18 120.428 2197.11 124.328 2213.41 132.012 cv
2218.83 134.57 2224.67 138.048 2229.78 142.218 cv
2232.14 144.143 2233.44 145.335 2235.77 147.885 cv
2236.51 148.689 2237.23 149.507 2237.91 150.364 cv
2238.18 150.718 2238.45 151.078 2238.72 151.444 cv
2238.85 151.631 2238.98 151.823 2239.11 152.009 cv
2239.13 152.039 2239.15 152.059 2239.16 152.083 cv
2241.42 155.764 2243.09 159.667 2244.53 163.727 cv
2244.56 163.807 2244.63 164.009 2244.68 164.158 cv
2244.74 164.337 2244.8 164.517 2244.85 164.697 cv
2245.01 165.191 2245.16 165.686 2245.31 166.182 cv
2245.71 167.52 2246.09 168.866 2246.44 170.218 cv
2247.13 172.89 2247.74 175.585 2248.27 178.291 cv
2250.83 191.107 2252.07 204.177 2252.89 217.206 cv
2253.33 224.063 2253.63 231.43 2253.82 238.865 cv
2254.03 246.661 2254.12 254.46 2254.13 262.259 cv
2254.19 292.722 2253.07 323.165 2252.39 353.617 cv
2252.13 365.381 2251.89 377.161 2252.16 388.927 cv
2252.34 396.454 2252.29 404.483 2254.23 411.82 cv
2254.81 414.007 2255.55 415.936 2256.91 417.6 cv
2259.06 421.283 2262.37 424.4 2265.69 426.982 cv
2274.16 433.575 2284.82 436.954 2295.36 438.201 cv
2301.72 438.952 2308.15 438.907 2314.53 438.36 cv
2309.81 443.991 2303.44 448.551 2297.11 452.07 cv
cp
1896.54 176.578 mo
1896.38 177.303 1896.47 176.89 1896.54 176.578 cv
1896.54 176.578 li
cp
2263.13 412.04 mo
2263.13 412.046 2263.14 412.052 2263.14 412.058 cv
2263.06 411.983 2262.98 411.908 2262.89 411.829 cv
2262.82 411.766 2262.96 411.887 2263.13 412.04 cv
cp
2322.24 428.895 mo
2311.41 430.589 2299.56 431.073 2289.14 428.566 cv
2285.27 427.632 2281.47 426.343 2277.87 424.615 cv
2276.73 424.068 2275.87 423.611 2274.26 422.608 cv
2273.02 421.835 2271.81 421.003 2270.66 420.11 cv
2270.2 419.754 2269.75 419.39 2269.3 419.016 cv
2269.06 418.811 2268.82 418.598 2268.58 418.39 cv
2268.57 418.386 2268.57 418.386 2268.57 418.382 cv
2268.55 418.363 2268.54 418.358 2268.52 418.335 cv
2267.83 417.64 2267.12 416.966 2266.47 416.235 cv
2266.27 416.016 2264.54 413.59 2264.16 413.245 cv
2264.35 413.45 2264.78 414.259 2264.3 413.489 cv
2264.21 413.34 2264.36 413.533 2264.16 413.242 cv
2264.15 413.242 2264.15 413.24 2264.15 413.24 cv
2264.15 413.24 2264.15 413.24 2264.15 413.24 cv
2264.11 413.184 2264.06 413.115 2263.99 413.014 cv
2263.8 412.746 2263.6 412.524 2263.4 412.31 cv
2263.39 412.29 2263.38 412.27 2263.37 412.251 cv
2263.41 412.291 2263.45 412.325 2263.49 412.357 cv
2263.44 412.311 2263.39 412.268 2263.35 412.217 cv
2263.27 412.04 2263.16 411.864 2263.08 411.691 cv
2262.98 411.47 2262.89 411.241 2262.8 411.017 cv
2262.1 407.832 2261.51 404.724 2261.22 401.461 cv
2261.12 400.413 2261.04 399.364 2260.97 398.312 cv
2260.94 397.779 2260.91 397.245 2260.88 396.71 cv
2260.88 396.706 2260.88 396.704 2260.88 396.7 cv
2260.86 396.38 2260.84 396.061 2260.83 395.742 cv
2260.71 393.124 2260.63 390.505 2260.59 387.885 cv
2260.34 374.47 2260.67 361.046 2261 347.635 cv
2261.41 331.126 2261.91 314.619 2262.24 298.108 cv
2262.58 280.836 2262.75 263.556 2262.43 246.283 cv
2262.14 230.057 2261.46 213.797 2259.72 197.655 cv
2258.34 184.846 2256.33 171.963 2252.08 159.757 cv
2250.46 155.109 2248.41 150.675 2245.63 146.6 cv
2242.26 141.642 2237.55 137.425 2232.81 133.813 cv
2219.18 123.433 2202.34 117.734 2185.85 113.814 cv
2160.22 107.722 2133.88 105.459 2107.66 103.665 cv
2082.96 101.977 2058.18 100.891 2033.41 101.215 cv
2014.66 101.459 1995.84 102.439 1977.3 105.274 cv
1963.69 107.354 1950.12 110.486 1937.36 115.731 cv
1927.76 119.679 1918.54 125.029 1910.93 132.152 cv
1903.98 138.658 1898.56 146.446 1894.61 155.091 cv
1890.62 163.832 1888.33 173.277 1886.81 182.735 cv
1884.8 195.361 1884.27 208.201 1883.75 220.957 cv
1882.94 241.085 1882.57 261.231 1882.29 281.372 cv
1882.04 299.647 1881.9 317.925 1881.78 336.202 cv
1881.75 341.472 1881.73 346.742 1881.68 352.012 cv
1881.48 374.151 1882.4 396.364 1885.27 418.329 cv
1888.27 441.204 1893.38 464.129 1902.72 485.306 cv
1910.4 502.705 1921.51 520.126 1937.22 531.318 cv
1948.63 539.443 1962.06 544.74 1975.33 548.943 cv
1992.23 554.3 2009.71 557.903 2027.22 560.575 cv
2046.59 563.529 2066.15 565.266 2085.72 565.985 cv
2105.4 566.707 2125.13 566.383 2144.75 564.803 cv
2161.98 563.414 2179.24 561.064 2196 556.741 cv
2209.39 553.286 2222.84 548.647 2234.31 540.739 cv
2243.18 534.622 2250.12 526.062 2254.9 516.454 cv
2259.96 506.264 2262.01 495.095 2264.46 484.083 cv
2265.35 480.088 2266.33 476.107 2267.67 472.241 cv
2272.77 471.09 2277.79 469.475 2282.71 467.743 cv
2293.73 463.857 2304.56 458.6 2313.6 451.098 cv
2319.17 446.478 2323.76 440.971 2327.03 434.515 cv
2328.58 431.451 2325.1 428.448 2322.24 428.895 cv
cp
f
2263.49 412.357 mo
2263.51 412.38 2263.53 412.408 2263.55 412.428 cv
2263.65 412.507 2263.59 412.454 2263.49 412.357 cv
cp
f
1942.75 167.23 mo
1942.92 166.893 1943.07 166.624 1942.75 167.23 cv
1942.75 167.23 li
cp
2013.26 135.233 mo
2005.25 135.328 1997.23 135.552 1989.24 136.134 cv
1983.08 136.582 1976.93 137.256 1970.89 138.509 cv
1965.71 139.582 1960.54 141.095 1955.75 143.349 cv
1951.54 145.328 1947.54 147.951 1944.19 151.191 cv
1940.73 154.543 1937.86 158.418 1935.61 162.678 cv
1932.99 167.657 1931.02 172.883 1929.52 178.302 cv
1927.66 184.988 1926.35 191.834 1925.28 198.687 cv
1924 206.907 1923.07 215.179 1922.24 223.455 cv
1921.22 233.693 1920.38 243.949 1919.57 254.205 cv
1918.56 266.861 1917.44 279.52 1916.6 292.189 cv
1916.35 295.978 1916.17 299.771 1916.08 303.567 cv
1916.02 305.782 1917.59 308.052 1919.97 308.134 cv
1922.17 308.211 1924.48 306.619 1924.54 304.242 cv
1924.88 290.707 1926.27 277.189 1927.33 263.696 cv
1928.17 252.99 1929.01 242.283 1929.99 231.588 cv
1930.79 222.919 1931.66 214.254 1932.83 205.627 cv
1933.33 201.943 1933.88 198.268 1934.53 194.607 cv
1934.82 192.958 1935.13 191.313 1935.46 189.672 cv
1935.54 189.269 1935.63 188.867 1935.71 188.464 cv
1935.73 188.355 1935.76 188.247 1935.78 188.139 cv
1935.95 187.394 1936.11 186.649 1936.29 185.907 cv
1937.56 180.51 1939.15 175.156 1941.39 170.077 cv
1941.64 169.513 1941.9 168.952 1942.16 168.396 cv
1942.28 168.142 1942.41 167.89 1942.53 167.638 cv
1942.57 167.566 1942.62 167.466 1942.67 167.363 cv
1943.17 166.453 1943.67 165.546 1944.21 164.663 cv
1945.37 162.779 1946.66 160.98 1948.11 159.306 cv
1948.21 159.18 1948.32 159.057 1948.43 158.934 cv
1948.45 158.913 1948.47 158.892 1948.49 158.871 cv
1948.86 158.482 1949.23 158.102 1949.61 157.731 cv
1950.37 156.989 1951.17 156.281 1951.99 155.609 cv
1952.82 154.934 1953.67 154.294 1954.55 153.691 cv
1954.6 153.661 1954.67 153.61 1954.76 153.556 cv
1954.89 153.471 1955.03 153.381 1955.1 153.338 cv
1955.55 153.061 1956 152.792 1956.46 152.532 cv
1958.44 151.411 1960.5 150.453 1962.63 149.631 cv
1963.16 149.424 1963.7 149.225 1964.24 149.034 cv
1964.44 148.965 1964.63 148.899 1964.83 148.833 cv
1964.91 148.808 1964.98 148.783 1965.06 148.758 cv
1966.27 148.376 1967.49 148.031 1968.72 147.716 cv
1974.33 146.279 1980.09 145.458 1985.85 144.895 cv
1987.48 144.736 1989.11 144.599 1990.74 144.479 cv
1991.61 144.415 1992.48 144.357 1993.34 144.303 cv
1993.79 144.276 1994.23 144.249 1994.67 144.224 cv
1994.81 144.216 1994.94 144.208 1995.07 144.201 cv
1995.07 144.201 1995.08 144.201 1995.08 144.201 cv
1998.91 144.006 2002.75 143.876 2006.58 143.792 cv
2008.58 143.749 2010.59 143.718 2012.59 143.694 cv
2014.8 143.667 2017.07 142.239 2017.16 139.801 cv
2017.23 137.674 2015.64 135.205 2013.26 135.233 cv
cp
f
2088.22 132.549 mo
2079.06 131.832 2069.92 130.905 2060.72 131.015 cv
2058.51 131.042 2056.24 132.47 2056.16 134.908 cv
2056.08 137.034 2057.67 139.504 2060.05 139.476 cv
2069.24 139.365 2078.39 140.293 2087.54 141.009 cv
2089.75 141.182 2092.03 139.411 2092.11 137.116 cv
2092.19 134.819 2090.59 132.734 2088.22 132.549 cv
cp
f
2220.16 471.073 mo
2217.86 470.992 2215.79 472.594 2215.6 474.966 cv
2215.33 478.319 2214.94 481.664 2214.33 484.974 cv
2214.26 485.343 2214.19 485.711 2214.12 486.081 cv
2214.09 486.218 2214.06 486.356 2214.03 486.494 cv
2213.86 487.223 2213.7 487.951 2213.51 488.674 cv
2213.12 490.193 2212.66 491.699 2212.14 493.181 cv
2211.62 494.668 2211.03 496.132 2210.37 497.562 cv
2210.21 497.91 2210.05 498.255 2209.88 498.6 cv
2209.83 498.694 2209.78 498.788 2209.73 498.883 cv
2209.37 499.557 2209 500.226 2208.6 500.882 cv
2207.77 502.256 2206.87 503.584 2205.89 504.857 cv
2205.4 505.491 2204.89 506.11 2204.37 506.715 cv
2204.26 506.84 2204.15 506.964 2204.04 507.089 cv
2203.8 507.349 2203.56 507.611 2203.31 507.866 cv
2200.82 510.426 2198.03 512.618 2195.08 514.627 cv
2194.92 514.73 2194.76 514.832 2194.6 514.934 cv
2194.16 515.204 2193.73 515.47 2193.29 515.73 cv
2192.4 516.252 2191.5 516.753 2190.59 517.235 cv
2188.68 518.247 2186.72 519.172 2184.73 520.022 cv
2182.52 520.967 2180.28 521.819 2178 522.598 cv
2177.8 522.667 2177.59 522.735 2177.39 522.804 cv
2177.32 522.827 2177.25 522.849 2177.19 522.871 cv
2176.51 523.088 2175.84 523.298 2175.17 523.504 cv
2173.9 523.887 2172.64 524.249 2171.37 524.595 cv
2165.47 526.193 2159.48 527.413 2153.46 528.398 cv
2146.32 529.567 2139.12 530.403 2131.9 531.032 cv
2127.73 531.394 2123.55 531.686 2119.37 531.922 cv
2119.17 531.933 2118.96 531.945 2118.75 531.956 cv
2118.67 531.96 2118.6 531.964 2118.55 531.966 cv
2118.01 531.995 2117.47 532.021 2116.93 532.048 cv
2115.77 532.104 2114.61 532.157 2113.45 532.205 cv
2111.12 532.303 2108.78 532.384 2106.45 532.452 cv
2104.08 532.521 2101.72 532.574 2099.35 532.617 cv
2097.14 532.655 2094.87 534.062 2094.79 536.509 cv
2094.71 538.624 2096.3 541.119 2098.68 541.077 cv
2115.95 540.771 2133.29 539.908 2150.4 537.451 cv
2162.27 535.747 2174.12 533.24 2185.34 528.919 cv
2193.24 525.878 2200.94 521.724 2207.17 515.932 cv
2212.46 511.014 2216.55 505.047 2219.27 498.355 cv
2221.86 491.962 2223.14 485.043 2223.83 478.204 cv
2223.91 477.35 2223.99 476.496 2224.06 475.641 cv
2224.24 473.427 2222.46 471.153 2220.16 471.073 cv
cp
f
2357.77 1017.21 mo
2355.57 1026.78 2351.91 1035.58 2346.56 1043.82 cv
2336.72 1058.97 2322.03 1070.13 2305.83 1078.27 cv
2290.92 1085.77 2274.36 1090.79 2257.65 1094.18 cv
2245.22 1096.71 2235.26 1097.99 2222.61 1098.92 cv
2219.99 1099.11 2217.36 1099.2 2214.76 1099.56 cv
2212.97 1099.81 2211.6 1101.98 2211.64 1103.66 cv
2211.69 1105.8 2211.48 1107.96 2211.24 1110.08 cv
2211.22 1110.28 2211.15 1110.84 2211.11 1111.14 cv
2211.06 1111.46 2210.94 1112.3 2210.9 1112.53 cv
2210.7 1113.83 2210.46 1115.13 2210.19 1116.42 cv
2209.57 1119.42 2208.8 1122.39 2207.87 1125.32 cv
2205.51 1132.81 2202.51 1139.22 2198.06 1146.09 cv
2192.83 1154.15 2186.12 1161.35 2178.43 1167.26 cv
2170.45 1173.4 2161.54 1178.12 2152.2 1181.76 cv
2162.51 1164.32 2165.11 1142.55 2163.4 1122.6 cv
2163.2 1120.22 2162.95 1117.82 2162.55 1115.46 cv
2162.14 1113.05 2159.39 1112.15 2157.33 1112.5 cv
2141.08 1115.22 2124.99 1118.68 2108.94 1122.35 cv
2096.05 1125.3 2083.17 1128.36 2070.1 1130.43 cv
2057.8 1132.37 2045.33 1133.15 2032.89 1132.35 cv
2027.93 1132.02 2022.81 1131.68 2017.95 1130.56 cv
2016.84 1130.3 2015.75 1129.98 2014.67 1129.62 cv
2014.12 1129.43 2013.58 1129.21 2013.03 1129.01 cv
2012.96 1128.99 2012.91 1128.97 2012.86 1128.95 cv
2012.58 1128.83 2012.3 1128.71 2012.03 1128.58 cv
2009.7 1127.52 2007.47 1126.24 2005.34 1124.82 cv
2004.26 1124.1 2003.2 1123.34 2002.16 1122.56 cv
2002.07 1122.48 2001.14 1121.74 2000.92 1121.56 cv
2000.37 1121.11 1999.82 1120.65 1999.28 1120.19 cv
1994.39 1115.95 1990 1111.16 1985.92 1106.14 cv
1983.63 1103.33 1982.09 1101.29 1979.79 1098.05 cv
1977.5 1094.85 1975.31 1091.57 1973.18 1088.25 cv
1968.65 1081.15 1964.44 1073.84 1960.46 1066.41 cv
1951.53 1049.77 1943.66 1032.55 1936.41 1015.12 cv
1928.5 996.12 1921.3 976.838 1914.55 957.404 cv
1907.89 938.228 1901.68 918.896 1895.85 899.455 cv
1890.61 882.019 1885.68 864.492 1881.07 846.879 cv
1877.47 833.078 1874.04 819.223 1871 805.284 cv
1869.93 800.343 1868.9 795.39 1867.98 790.415 cv
1867.63 788.496 1867.29 786.572 1866.99 784.643 cv
1866.94 784.275 1866.88 783.907 1866.83 783.539 cv
1866.81 783.405 1866.75 782.982 1866.71 782.721 cv
1866.69 782.543 1866.66 782.36 1866.65 782.275 cv
1866.62 781.939 1866.58 781.603 1866.54 781.266 cv
1866.44 780.305 1866.35 779.338 1866.35 778.37 cv
1866.35 773.627 1866.55 768.883 1867.02 764.163 cv
1867.13 763.079 1867.26 761.997 1867.4 760.917 cv
1867.44 760.639 1867.51 760.111 1867.55 759.866 cv
1867.64 759.254 1867.74 758.642 1867.84 758.031 cv
1868.22 755.759 1868.68 753.498 1869.22 751.259 cv
1869.77 748.98 1870.41 746.723 1871.14 744.495 cv
1871.52 743.358 1871.92 742.228 1872.34 741.108 cv
1872.53 740.604 1872.73 740.102 1872.93 739.603 cv
1873.03 739.333 1873.15 739.064 1873.25 738.795 cv
1873.26 738.771 1873.27 738.756 1873.28 738.739 cv
1873.29 738.713 1873.3 738.69 1873.31 738.659 cv
1875.27 734.256 1877.52 730.022 1880.21 726.021 cv
1880.9 724.996 1881.62 723.988 1882.35 722.996 cv
1882.54 722.745 1882.73 722.497 1882.92 722.247 cv
1882.93 722.226 1882.93 722.223 1882.94 722.206 cv
1882.96 722.183 1882.97 722.175 1882.99 722.146 cv
1883.42 721.615 1883.84 721.082 1884.27 720.559 cv
1885.94 718.543 1887.7 716.607 1889.54 714.751 cv
1891.51 712.757 1893.58 710.856 1895.73 709.045 cv
1896.24 708.617 1896.75 708.193 1897.26 707.774 cv
1897.54 707.546 1897.83 707.319 1898.11 707.095 cv
1898.23 706.997 1898.65 706.668 1898.82 706.537 cv
1899.04 706.372 1899.97 705.668 1900.26 705.454 cv
1900.87 705.006 1901.48 704.564 1902.09 704.129 cv
1907.47 700.315 1913.16 696.958 1919.03 693.959 cv
1926.26 690.265 1932.24 687.747 1939.72 685.001 cv
1958.04 678.284 1977.1 673.717 1996.26 670.177 cv
2022.1 665.403 2048.28 662.572 2074.48 660.649 cv
2108.89 658.125 2143.41 657.225 2177.91 657.162 cv
2187.82 657.144 2197.74 656.971 2207.65 657.09 cv
2216.78 657.2 2225.9 657.638 2234.96 658.793 cv
2235.25 658.832 2235.73 658.897 2235.96 658.93 cv
2236.56 659.018 2237.17 659.109 2237.78 659.204 cv
2238.91 659.381 2240.04 659.573 2241.17 659.778 cv
2243.47 660.196 2245.76 660.674 2248.04 661.217 cv
2252.6 662.303 2257.1 663.654 2261.49 665.305 cv
2262.59 665.719 2263.68 666.158 2264.76 666.602 cv
2264.78 666.609 2264.79 666.615 2264.81 666.622 cv
2265.08 666.742 2265.35 666.858 2265.63 666.977 cv
2266.21 667.234 2266.79 667.497 2267.37 667.766 cv
2269.56 668.779 2271.71 669.875 2273.82 671.049 cv
2276.02 672.274 2278.17 673.587 2280.27 674.981 cv
2281.32 675.682 2282.36 676.403 2283.39 677.145 cv
2283.91 677.521 2284.42 677.903 2284.94 678.287 cv
2284.99 678.331 2285.21 678.492 2285.37 678.614 cv
2285.55 678.758 2285.88 679.011 2285.94 679.065 cv
2290.25 682.489 2294.28 686.238 2298.01 690.276 cv
2300 692.431 2301.91 694.662 2303.74 696.956 cv
2303.98 697.252 2304.21 697.55 2304.45 697.847 cv
2304.51 697.931 2304.55 697.982 2304.59 698.03 cv
2304.61 698.06 2304.64 698.092 2304.68 698.152 cv
2305.18 698.811 2305.68 699.472 2306.17 700.139 cv
2307.11 701.413 2308.02 702.704 2308.92 704.009 cv
2312.82 709.716 2316.31 715.701 2319.47 721.854 cv
2323.23 729.2 2326.08 735.769 2328.9 743.17 cv
2335.89 761.537 2340.88 780.633 2344.8 799.872 cv
2349.93 825.054 2353.19 850.586 2355.46 876.172 cv
2358.42 909.523 2359.69 943.015 2360.04 976.488 cv
2360.18 990.099 2360.84 1003.84 2357.77 1017.21 cv
cp
2368.53 976.985 mo
2368.35 958.991 2367.89 940.998 2367.05 923.023 cv
2365.67 893.121 2363.27 863.249 2359.1 833.6 cv
2355.92 810.897 2351.67 788.276 2345.41 766.209 cv
2340.63 749.385 2334.64 732.79 2326.62 717.221 cv
2320.46 705.275 2312.97 693.91 2303.81 684.05 cv
2296.32 676 2287.6 668.998 2277.99 663.656 cv
2269.32 658.844 2259.93 655.328 2250.29 653.032 cv
2240.86 650.784 2231.17 649.626 2221.5 649.06 cv
2212.25 648.517 2202.97 648.536 2193.7 648.603 cv
2169.17 648.781 2144.65 648.829 2120.13 649.711 cv
2089.65 650.808 2059.16 652.807 2028.89 656.643 cv
2006.05 659.539 1983.26 663.375 1961.01 669.395 cv
1944.65 673.822 1928.46 679.451 1913.42 687.318 cv
1902.26 693.153 1891.63 700.395 1882.83 709.464 cv
1875.49 717.04 1869.57 725.848 1865.47 735.571 cv
1861.6 744.773 1859.49 754.494 1858.51 764.411 cv
1858.05 769.049 1857.87 773.71 1857.86 778.37 cv
1857.88 785.407 1859.74 792.693 1861.13 799.549 cv
1863.76 812.501 1866.84 825.364 1870.08 838.178 cv
1874.39 855.268 1879.04 872.272 1883.96 889.195 cv
1889.63 908.664 1895.66 928.028 1902.12 947.248 cv
1908.8 967.108 1915.92 986.823 1923.7 1006.28 cv
1931.08 1024.74 1939 1043.01 1947.96 1060.76 cv
1955.58 1075.86 1963.93 1090.72 1973.94 1104.38 cv
1981.76 1115.07 1990.67 1125.54 2001.94 1132.73 cv
2006.33 1135.52 2011.22 1137.81 2016.33 1138.88 cv
2028.15 1141.37 2040.86 1141.59 2052.88 1140.84 cv
2080.39 1139.12 2107.12 1131.11 2133.98 1125.51 cv
2140.91 1124.07 2147.85 1122.73 2154.82 1121.51 cv
2155.2 1125.48 2155.37 1129.47 2155.36 1133.46 cv
2155.34 1145.18 2153.71 1156.97 2149.53 1167.97 cv
2146.86 1174.98 2142.92 1181.53 2137.82 1187.04 cv
2135 1190.07 2137.74 1195.32 2141.95 1194.13 cv
2165.91 1187.33 2188.04 1174.52 2202.82 1154.11 cv
2211.52 1142.1 2217.28 1127.78 2219.34 1113.1 cv
2219.59 1111.28 2219.83 1109.43 2219.98 1107.59 cv
2221.17 1107.51 2222.35 1107.43 2223.54 1107.34 cv
2228.85 1106.93 2234.16 1106.4 2239.44 1105.71 cv
2255.34 1103.66 2271.12 1100.46 2286.35 1095.39 cv
2304.05 1089.49 2321.1 1081.15 2335.39 1069.03 cv
2350.62 1056.11 2361.59 1038.72 2366.02 1019.19 cv
2369.17 1005.3 2368.67 991.133 2368.53 976.985 cv
cp
f
1902.55 733.392 mo
1898.16 738.386 1894.75 743.945 1892.29 750.116 cv
1890.04 755.752 1888.86 761.731 1888.28 767.759 cv
1887 781.228 1889.28 794.866 1892.02 808.02 cv
1893.54 815.346 1895.29 822.623 1896.81 829.951 cv
1897.26 832.127 1899.95 833.589 1902.03 832.915 cv
1904.33 832.169 1905.48 830.027 1904.99 827.694 cv
1903.69 821.397 1902.21 815.138 1900.86 808.851 cv
1900.16 805.626 1899.5 802.393 1898.9 799.148 cv
1898.6 797.519 1898.32 795.888 1898.05 794.252 cv
1897.93 793.468 1897.8 792.683 1897.69 791.897 cv
1897.63 791.505 1897.58 791.112 1897.52 790.72 cv
1897.52 790.705 1897.51 790.63 1897.5 790.551 cv
1897.48 790.404 1897.44 790.127 1897.43 790.081 cv
1896.62 783.756 1896.2 777.359 1896.53 770.983 cv
1896.61 769.569 1896.72 768.156 1896.87 766.747 cv
1896.91 766.41 1896.96 766.075 1896.99 765.738 cv
1896.99 765.723 1896.99 765.719 1896.99 765.706 cv
1897 765.646 1897.01 765.586 1897.02 765.527 cv
1897.13 764.804 1897.24 764.082 1897.37 763.363 cv
1897.87 760.605 1898.54 757.88 1899.43 755.223 cv
1899.68 754.477 1899.95 753.736 1900.23 753.001 cv
1900.36 752.653 1900.51 752.309 1900.64 751.961 cv
1900.73 751.76 1900.82 751.558 1900.91 751.357 cv
1901.57 749.898 1902.29 748.471 1903.08 747.081 cv
1903.89 745.658 1904.77 744.276 1905.72 742.94 cv
1905.96 742.6 1906.21 742.265 1906.45 741.928 cv
1906.46 741.917 1906.49 741.883 1906.52 741.843 cv
1906.6 741.735 1906.75 741.537 1906.78 741.501 cv
1907.35 740.783 1907.95 740.082 1908.55 739.393 cv
1910.02 737.727 1910.32 735.01 1908.55 733.392 cv
1906.95 731.919 1904.12 731.611 1902.55 733.392 cv
cp
f
1926.31 714.391 mo
1922.48 716.534 1918.74 718.912 1915.58 721.978 cv
1914.81 722.728 1914.34 723.908 1914.34 724.979 cv
1914.34 726.019 1914.8 727.263 1915.58 727.98 cv
1917.3 729.555 1919.88 729.631 1921.58 727.98 cv
1922.32 727.266 1923.1 726.599 1923.9 725.958 cv
1926.02 724.376 1928.29 723.012 1930.59 721.72 cv
1931.52 721.205 1932.27 720.193 1932.54 719.184 cv
1932.83 718.168 1932.7 716.815 1932.12 715.914 cv
1930.85 713.952 1928.38 713.23 1926.31 714.391 cv
cp
f
2279.15 1063.53 mo
2279.19 1063.51 2279.18 1063.52 2279.15 1063.53 cv
2279.15 1063.53 li
cp
2338.85 995.883 mo
2336.66 995.981 2334.48 997.753 2334.61 1000.13 cv
2334.68 1001.49 2334.69 1002.85 2334.6 1004.21 cv
2334.58 1004.68 2334.54 1005.14 2334.49 1005.6 cv
2334.47 1005.81 2334.45 1006.01 2334.42 1006.22 cv
2334.09 1008.29 2333.67 1010.34 2333.09 1012.35 cv
2332.76 1013.5 2332.4 1014.64 2331.99 1015.77 cv
2331.78 1016.36 2331.55 1016.94 2331.32 1017.53 cv
2331.24 1017.73 2331.16 1017.93 2331.08 1018.13 cv
2331.03 1018.24 2330.98 1018.35 2330.94 1018.46 cv
2329.81 1021.02 2328.5 1023.5 2327.05 1025.89 cv
2326.26 1027.2 2325.43 1028.48 2324.55 1029.73 cv
2324.14 1030.33 2323.71 1030.92 2323.28 1031.5 cv
2323.04 1031.82 2322.76 1032.13 2322.55 1032.47 cv
2323.34 1031.2 2322.45 1032.59 2322.19 1032.91 cv
2319.99 1035.65 2317.6 1038.25 2315.08 1040.7 cv
2313.73 1042 2312.34 1043.26 2310.92 1044.48 cv
2310.2 1045.1 2309.47 1045.71 2308.72 1046.31 cv
2308.33 1046.63 2307.93 1046.95 2307.53 1047.27 cv
2307.53 1047.27 2307.53 1047.27 2307.52 1047.27 cv
2307.54 1047.26 2307.55 1047.25 2307.58 1047.23 cv
2307.36 1047.38 2307.16 1047.55 2306.96 1047.71 cv
2303.44 1050.38 2299.75 1052.83 2295.95 1055.08 cv
2291.1 1057.94 2286.07 1060.49 2280.92 1062.76 cv
2280.24 1063.06 2279.57 1063.35 2278.89 1063.64 cv
2278.86 1063.65 2278.84 1063.66 2278.82 1063.67 cv
2278.4 1063.84 2277.97 1064.02 2277.55 1064.19 cv
2276.03 1064.81 2274.5 1065.41 2272.96 1065.98 cv
2269.83 1067.15 2266.68 1068.23 2263.5 1069.24 cv
2261.39 1069.91 2259.81 1072.22 2260.53 1074.46 cv
2261.22 1076.58 2263.49 1078.14 2265.75 1077.42 cv
2285.13 1071.29 2304.08 1062.3 2319.19 1048.47 cv
2328.78 1039.7 2336.74 1028.75 2340.76 1016.3 cv
2342.44 1011.12 2343.4 1005.57 2343.1 1000.13 cv
2342.98 997.914 2341.23 995.776 2338.85 995.883 cv
cp
f
2307.52 1047.27 mo
2306.63 1047.89 2307.31 1047.44 2307.52 1047.27 cv
2307.52 1047.27 li
cp
f
1089.03 2034.22 mo
1064.01 2082.24 1011.22 2109.61 962.563 2127.81 cv
894.13 2153.41 820.939 2165.75 748.691 2174.65 cv
729.324 2177.03 709.918 2179.1 690.491 2180.94 cv
688.374 2181.14 686.998 2182.44 686.358 2184.39 cv
686.284 2184.62 686.241 2184.75 686.214 2184.84 cv
686.175 2184.93 686.12 2185.07 686.04 2185.26 cv
685.375 2186.88 684.702 2188.49 683.961 2190.08 cv
681.397 2195.59 678.348 2200.87 674.947 2205.89 cv
664.012 2222.05 648.888 2235.23 631.553 2244.13 cv
619.945 2250.08 607.317 2253.93 594.458 2256.08 cv
601.941 2234.43 608.877 2212.62 611.419 2189.73 cv
611.481 2189.17 611.448 2188.64 611.341 2188.16 cv
611.139 2186.04 609.629 2184.1 606.886 2184.31 cv
556.9 2188.11 505.505 2184.43 456.294 2175.22 cv
429.605 2170.23 402.92 2163.36 378.077 2152.23 cv
357.828 2143.17 337.42 2130.89 324.54 2112.33 cv
318.982 2104.32 315.025 2095.24 313.405 2085.59 cv
310.964 2071.07 310.426 2055.98 311.706 2041.31 cv
314.102 2013.86 323.659 1987.58 338.669 1964.53 cv
372.382 1912.77 429.57 1879.68 485.925 1857.9 cv
555.132 1831.16 629.559 1818.93 703.451 1815.65 cv
777.063 1812.37 851.818 1817.73 923.53 1835.17 cv
954.077 1842.6 984.25 1852.32 1012.59 1866.04 cv
1035.53 1877.14 1057.73 1890.96 1075.27 1909.66 cv
1089.37 1924.68 1099.95 1943.48 1102.06 1964.23 cv
1104.49 1988.2 1100.18 2012.82 1089.03 2034.22 cv
cp
1101.35 1931.29 mo
1090.66 1909.78 1072.58 1892.8 1053.1 1879.23 cv
1029.04 1862.45 1001.92 1850.41 974.309 1840.79 cv
905.568 1816.84 831.598 1807.51 759.079 1806.08 cv
681.904 1804.56 603.655 1812.54 529.349 1833.97 cv
466.159 1852.2 402.032 1880.89 355.815 1929 cv
335.983 1949.65 320.158 1974.05 311.022 2001.27 cv
301.726 2028.96 299.585 2059.79 304.972 2088.52 cv
314.155 2137.49 368.576 2161.07 411.117 2173.64 cv
464.385 2189.37 521.382 2194.89 576.789 2194.4 cv
585.201 2194.32 593.611 2194.05 602.007 2193.53 cv
598.705 2216.56 591.228 2238.57 583.568 2260.51 cv
582.649 2263.14 585.443 2266.25 588.101 2265.93 cv
614.818 2262.69 640.123 2252.82 660.612 2235.16 cv
673.223 2224.29 683.801 2210.74 691.095 2195.76 cv
692.084 2193.72 693.026 2191.64 693.863 2189.53 cv
770.771 2182.17 848.234 2171.78 922.604 2150.3 cv
953.806 2141.28 984.584 2130.13 1013.34 2114.92 cv
1037.3 2102.26 1060.2 2086.41 1078.04 2065.82 cv
1108.99 2030.11 1123.18 1975.2 1101.35 1931.29 cv
cp
f
1054.11 1921.53 mo
1045.35 1913.01 1035.15 1905.94 1024.52 1899.96 cv
1013.42 1893.71 1001.68 1888.67 989.661 1884.47 cv
988.215 1883.96 986.763 1883.48 985.309 1883 cv
983.096 1882.27 980.388 1884.13 979.988 1886.34 cv
979.526 1888.9 980.965 1890.89 983.334 1891.66 cv
984.736 1892.12 986.133 1892.59 987.525 1893.08 cv
988.226 1893.32 988.925 1893.57 989.624 1893.82 cv
989.947 1893.94 990.269 1894.05 990.591 1894.17 cv
990.752 1894.23 990.915 1894.29 991.076 1894.35 cv
991.095 1894.36 991.107 1894.36 991.125 1894.37 cv
993.93 1895.42 996.72 1896.51 999.485 1897.67 cv
1005.09 1900.02 1010.6 1902.59 1015.98 1905.43 cv
1021.34 1908.25 1026.56 1911.33 1031.58 1914.72 cv
1032.14 1915.1 1032.7 1915.48 1033.26 1915.86 cv
1033.34 1915.92 1033.43 1915.98 1033.51 1916.03 cv
1033.48 1916.01 1033.46 1916 1033.43 1915.98 cv
1033.81 1916.19 1034.17 1916.5 1034.52 1916.76 cv
1035.69 1917.61 1036.85 1918.47 1038 1919.35 cv
1040.29 1921.12 1042.53 1922.97 1044.69 1924.9 cv
1046.77 1926.75 1048.77 1928.68 1050.7 1930.69 cv
1051.68 1931.72 1052.64 1932.76 1053.57 1933.83 cv
1053.76 1934.05 1053.94 1934.32 1054.16 1934.51 cv
1054.19 1934.55 1054.22 1934.59 1054.25 1934.63 cv
1054.72 1935.19 1055.17 1935.75 1055.62 1936.32 cv
1058.91 1940.49 1061.74 1944.96 1064.11 1949.71 cv
1064.12 1949.74 1064.13 1949.76 1064.14 1949.79 cv
1064.29 1950.11 1064.43 1950.42 1064.57 1950.74 cv
1064.84 1951.33 1065.09 1951.92 1065.33 1952.52 cv
1065.83 1953.76 1066.3 1955.02 1066.72 1956.29 cv
1067.53 1958.72 1068.16 1961.21 1068.65 1963.73 cv
1068.66 1963.79 1068.67 1963.85 1068.69 1963.94 cv
1068.73 1964.24 1068.78 1964.53 1068.82 1964.83 cv
1068.92 1965.51 1069.01 1966.19 1069.09 1966.87 cv
1069.23 1968.14 1069.33 1969.42 1069.39 1970.71 cv
1069.44 1972.01 1069.46 1973.32 1069.43 1974.62 cv
1069.41 1975.29 1069.38 1975.95 1069.35 1976.61 cv
1069.33 1976.92 1069.31 1977.23 1069.29 1977.53 cv
1069.28 1977.63 1069.27 1977.73 1069.26 1977.83 cv
1068.97 1980.62 1068.53 1983.39 1067.9 1986.12 cv
1067.57 1987.54 1067.2 1988.95 1066.79 1990.34 cv
1066.57 1991.06 1066.35 1991.77 1066.12 1992.48 cv
1066.01 1992.82 1065.9 1993.15 1065.78 1993.48 cv
1065.72 1993.65 1065.67 1993.81 1065.61 1993.98 cv
1065.59 1994.02 1065.54 1994.17 1065.49 1994.31 cv
1065.45 1994.41 1065.25 1994.96 1065.21 1995.07 cv
1065.08 1995.41 1064.94 1995.74 1064.81 1996.08 cv
1064.49 1996.87 1064.16 1997.66 1063.82 1998.44 cv
1063.17 1999.95 1062.47 2001.43 1061.74 2002.9 cv
1060.14 2006.09 1058.37 2009.19 1056.46 2012.21 cv
1055.46 2013.79 1054.41 2015.35 1053.35 2016.88 cv
1052.01 2018.8 1053.22 2021.95 1055.21 2022.88 cv
1057.61 2024.02 1059.79 2023.06 1061.21 2021.02 cv
1068.98 2009.84 1075.28 1997.18 1077.44 1983.63 cv
1079.25 1972.28 1078.15 1960.59 1073.84 1949.91 cv
1069.47 1939.09 1062.44 1929.63 1054.11 1921.53 cv
cp
f
1041.53 2033.83 mo
1036.62 2037.64 1031.92 2041.72 1027.35 2045.94 cv
1026.55 2046.67 1026.14 2048.09 1026.19 2049.13 cv
1026.24 2050.22 1026.78 2051.5 1027.63 2052.21 cv
1028.51 2052.95 1029.65 2053.48 1030.83 2053.37 cv
1032.06 2053.26 1033 2052.77 1033.91 2051.93 cv
1036.25 2049.77 1038.63 2047.65 1041.06 2045.58 cv
1042.8 2044.12 1044.56 2042.68 1046.35 2041.29 cv
1047.29 2040.57 1048 2039.73 1048.27 2038.55 cv
1048.52 2037.47 1048.32 2036.06 1047.67 2035.15 cv
1046.38 2033.32 1043.49 2032.3 1041.53 2033.83 cv
cp
f
471.208 1893.73 mo
461.339 1898 451.586 1902.56 442.03 1907.49 cv
432.241 1912.54 422.659 1918.01 413.434 1924.04 cv
404.005 1930.2 394.983 1936.96 386.539 1944.42 cv
378.462 1951.55 370.975 1959.39 364.54 1968.04 cv
358.094 1976.71 352.609 1986.07 348.752 1996.17 cv
348.172 1997.69 347.614 1999.22 347.088 2000.76 cv
346.334 2002.96 348.245 2005.68 350.434 2006.08 cv
353.013 2006.54 354.948 2005.09 355.754 2002.73 cv
355.955 2002.14 356.16 2001.56 356.37 2000.97 cv
356.386 2000.93 356.401 2000.89 356.417 2000.85 cv
356.41 2000.86 356.406 2000.87 356.399 2000.89 cv
356.556 2000.57 356.657 2000.21 356.785 1999.87 cv
357.25 1998.67 357.738 1997.48 358.248 1996.29 cv
359.285 1993.88 360.413 1991.51 361.625 1989.19 cv
362.813 1986.91 364.08 1984.67 365.419 1982.47 cv
366.09 1981.37 366.78 1980.28 367.486 1979.21 cv
367.826 1978.69 368.169 1978.17 368.517 1977.66 cv
368.69 1977.4 368.865 1977.15 369.041 1976.89 cv
369.106 1976.8 369.366 1976.43 369.477 1976.27 cv
369.577 1976.13 369.688 1975.97 369.725 1975.92 cv
369.906 1975.67 370.087 1975.41 370.271 1975.16 cv
370.697 1974.58 371.129 1973.99 371.565 1973.41 cv
372.346 1972.38 373.143 1971.35 373.954 1970.33 cv
375.584 1968.3 377.272 1966.3 379.011 1964.36 cv
382.563 1960.38 386.327 1956.59 390.25 1952.98 cv
391.229 1952.08 392.219 1951.19 393.217 1950.31 cv
393.698 1949.88 394.181 1949.46 394.667 1949.04 cv
394.909 1948.83 395.152 1948.63 395.396 1948.42 cv
395.478 1948.35 395.561 1948.28 395.643 1948.21 cv
397.7 1946.49 399.774 1944.8 401.89 1943.15 cv
406.194 1939.8 410.623 1936.62 415.147 1933.57 cv
424.129 1927.52 433.479 1922.03 443.043 1916.95 cv
447.741 1914.46 452.492 1912.06 457.284 1909.76 cv
457.564 1909.62 457.845 1909.49 458.126 1909.35 cv
458.167 1909.34 458.204 1909.32 458.242 1909.3 cv
458.229 1909.31 458.221 1909.31 458.208 1909.32 cv
458.819 1909.04 459.42 1908.74 460.026 1908.46 cv
461.185 1907.91 462.347 1907.37 463.51 1906.84 cv
465.848 1905.76 468.193 1904.71 470.547 1903.67 cv
471.681 1903.17 472.816 1902.68 473.953 1902.18 cv
476.079 1901.26 477.704 1898.98 476.806 1896.58 cv
476.029 1894.5 473.491 1892.74 471.208 1893.73 cv
cp
f
458.242 1909.3 mo
458.805 1909.05 458.612 1909.13 458.242 1909.3 cv
458.242 1909.3 li
cp
f
356.417 2000.85 mo
356.679 2000.31 356.566 2000.46 356.417 2000.85 cv
356.417 2000.85 li
cp
f
701.029 1525.95 mo
693.352 1554.53 678.463 1580.73 658.925 1602.6 cv
650.619 1611.9 641.527 1620.48 631.864 1628.35 cv
627.55 1631.87 624.143 1634.46 619.399 1637.85 cv
615.456 1640.66 611.438 1643.37 607.352 1645.97 cv
601.382 1649.78 595.266 1653.34 589.053 1656.73 cv
585.553 1658.64 585.76 1661.46 585.206 1664.95 cv
584.234 1671.08 583.184 1677.19 582.055 1683.29 cv
579.549 1696.83 576.862 1710.5 572.792 1723.7 cv
563.922 1718.25 555.859 1711.34 548.073 1704.52 cv
539.541 1697.06 531.289 1689.27 523.243 1681.28 cv
521.63 1679.68 520.021 1678.07 518.437 1676.44 cv
517.213 1675.18 515.766 1674.95 514.487 1675.34 cv
514.427 1675.34 514.368 1675.34 514.308 1675.35 cv
484.729 1679.4 454.691 1680.98 424.879 1678.99 cv
411.698 1678.11 399.675 1676.66 386.852 1674.25 cv
375.143 1672.06 363.559 1669.17 352.224 1665.5 cv
346.827 1663.75 341.486 1661.82 336.222 1659.7 cv
331.804 1657.92 327.015 1655.81 322.077 1653.4 cv
312.853 1648.9 303.937 1643.76 295.466 1637.96 cv
287.354 1632.41 280.846 1627.23 273.375 1620.23 cv
266.602 1613.87 260.343 1607.01 254.601 1599.71 cv
254.435 1599.5 254.354 1599.4 254.315 1599.35 cv
254.279 1599.3 254.201 1599.2 254.042 1598.99 cv
253.707 1598.54 253.372 1598.1 253.039 1597.66 cv
252.376 1596.78 251.722 1595.88 251.075 1594.99 cv
249.725 1593.11 248.413 1591.21 247.137 1589.29 cv
244.67 1585.56 242.345 1581.74 240.169 1577.83 cv
238.015 1573.97 236.006 1570.02 234.15 1566 cv
233.7 1565.02 233.259 1564.04 232.827 1563.06 cv
232.61 1562.57 232.398 1562.07 232.185 1561.58 cv
232.087 1561.35 232.041 1561.25 232.018 1561.2 cv
231.999 1561.15 231.954 1561.04 231.862 1560.81 cv
231.005 1558.74 230.176 1556.65 229.393 1554.54 cv
226.35 1546.34 223.917 1537.92 222.106 1529.37 cv
221.204 1525.1 220.468 1520.81 219.863 1516.49 cv
219.83 1516.23 219.795 1515.97 219.762 1515.71 cv
219.695 1515.18 219.631 1514.65 219.568 1514.12 cv
219.437 1513.01 219.316 1511.9 219.206 1510.79 cv
218.989 1508.62 218.812 1506.44 218.672 1504.26 cv
218.113 1495.51 218.173 1486.72 218.834 1477.98 cv
219.004 1475.73 219.215 1473.48 219.463 1471.24 cv
219.577 1470.22 219.698 1469.2 219.827 1468.19 cv
219.854 1467.97 219.928 1467.42 219.953 1467.23 cv
220.027 1466.7 220.101 1466.17 220.18 1465.63 cv
220.823 1461.24 221.618 1456.88 222.558 1452.54 cv
224.457 1443.78 226.955 1435.15 230.014 1426.73 cv
230.804 1424.55 231.633 1422.39 232.498 1420.24 cv
232.705 1419.72 232.914 1419.21 233.124 1418.7 cv
233.197 1418.52 233.453 1417.91 233.548 1417.68 cv
233.648 1417.44 233.971 1416.69 234.054 1416.5 cv
234.296 1415.94 234.541 1415.38 234.788 1414.82 cv
236.641 1410.63 238.636 1406.51 240.764 1402.46 cv
245.09 1394.22 249.973 1386.28 255.357 1378.7 cv
256.758 1376.73 258.191 1374.78 259.658 1372.86 cv
259.798 1372.68 259.938 1372.49 260.08 1372.31 cv
260.106 1372.27 260.124 1372.25 260.146 1372.22 cv
260.178 1372.18 260.216 1372.13 260.265 1372.07 cv
260.621 1371.61 260.978 1371.16 261.338 1370.7 cv
262.059 1369.79 262.787 1368.89 263.523 1367.99 cv
266.566 1364.27 269.735 1360.66 273.02 1357.15 cv
287.123 1342.11 301.87 1330.27 319.214 1319.68 cv
338.378 1307.97 357.621 1299.67 378.996 1293.35 cv
403.085 1286.22 427.011 1282.53 451.846 1281.35 cv
468.959 1280.54 486.161 1280.9 503.254 1281.99 cv
520.642 1283.1 537.974 1285.15 555.058 1288.61 cv
582.943 1294.25 609.985 1303.42 633.91 1318.88 cv
653.536 1331.57 670.208 1348.55 682.091 1368.7 cv
694.167 1389.17 701.127 1411.94 704.663 1435.82 cv
705.493 1441.44 706.2 1448.12 706.647 1454.38 cv
707.124 1461.04 707.365 1467.72 707.405 1474.41 cv
707.509 1491.82 705.552 1509.13 701.029 1525.95 cv
cp
714.876 1451.04 mo
713.834 1438.55 711.991 1426.1 709.06 1413.91 cv
703.696 1391.62 694.542 1370.06 680.919 1351.53 cv
666.727 1332.24 648.267 1316.6 627.312 1305.06 cv
601.986 1291.11 573.791 1282.93 545.375 1278.23 cv
512.584 1272.81 478.714 1271.05 445.54 1273.22 cv
421.435 1274.8 397.416 1278.83 374.299 1285.9 cv
353.73 1292.19 333.811 1300.87 315.42 1312.05 cv
298.567 1322.29 282.918 1334.64 269.218 1348.84 cv
256.363 1362.16 245.138 1377.13 236.09 1393.28 cv
227.401 1408.79 220.637 1425.45 216.184 1442.67 cv
211.83 1459.5 209.627 1476.96 209.815 1494.34 cv
210 1511.53 212.501 1528.76 217.367 1545.25 cv
222.283 1561.91 229.604 1577.92 239.086 1592.47 cv
249.025 1607.73 261.255 1621.48 275.208 1633.17 cv
290.472 1645.97 307.572 1656.41 325.785 1664.44 cv
346.715 1673.67 368.809 1679.92 391.365 1683.63 cv
417.917 1688 444.916 1689.11 471.772 1687.81 cv
485.855 1687.12 499.886 1685.75 513.86 1683.89 cv
527.104 1697.45 541.102 1710.52 556.069 1722.13 cv
561.478 1726.32 567.028 1730.42 573.07 1733.67 cv
575.591 1735.02 578.402 1733.77 579.305 1731.13 cv
586.241 1710.8 589.878 1689.18 593.262 1668.01 cv
593.491 1666.58 593.709 1665.15 593.926 1663.72 cv
607.649 1656.17 620.797 1647.71 633.174 1638.09 cv
653.097 1622.6 670.786 1604.16 684.613 1583 cv
701.895 1556.55 712.263 1526.2 715.085 1494.75 cv
716.387 1480.24 716.088 1465.55 714.876 1451.04 cv
cp
f
247.007 1522.07 mo
246.753 1520.75 246.521 1519.43 246.309 1518.1 cv
246.189 1517.35 246.081 1516.6 245.97 1515.84 cv
245.961 1515.78 245.953 1515.73 245.946 1515.69 cv
245.945 1515.68 245.944 1515.67 245.943 1515.66 cv
245.888 1515.22 245.832 1514.79 245.779 1514.35 cv
245.437 1511.51 245.192 1508.67 245.042 1505.81 cv
244.748 1500.23 244.818 1494.64 245.193 1489.06 cv
245.38 1486.29 245.642 1483.52 245.967 1480.76 cv
246.057 1480 246.153 1479.24 246.25 1478.49 cv
246.257 1478.43 246.262 1478.39 246.268 1478.35 cv
246.271 1478.33 246.273 1478.31 246.278 1478.28 cv
246.323 1477.96 246.366 1477.64 246.411 1477.33 cv
246.631 1475.79 246.868 1474.25 247.122 1472.72 cv
248.244 1465.92 249.68 1459.18 251.261 1452.47 cv
251.77 1450.31 250.589 1447.77 248.297 1447.25 cv
246.124 1446.76 243.622 1447.9 243.077 1450.21 cv
240.236 1462.26 237.884 1474.46 236.874 1486.81 cv
235.915 1498.52 236.384 1510.27 238.374 1521.86 cv
239.55 1528.71 241.291 1535.44 243.467 1542.03 cv
244.162 1544.13 246.431 1545.72 248.687 1544.99 cv
250.786 1544.31 252.396 1542.03 251.652 1539.77 cv
249.737 1533.97 248.156 1528.07 247.007 1522.07 cv
cp
f
319.326 1348.82 mo
319.725 1348.52 319.675 1348.55 319.547 1348.65 cv
319.475 1348.71 319.402 1348.76 319.33 1348.82 cv
319.329 1348.82 319.328 1348.82 319.326 1348.82 cv
cp
f
335.746 1328.2 mo
321.407 1335.85 308.301 1345.78 297.061 1357.53 cv
293.867 1360.87 290.824 1364.35 287.915 1367.94 cv
286.52 1369.66 286.106 1372.28 287.915 1373.94 cv
289.464 1375.36 292.424 1375.78 293.917 1373.94 cv
298.956 1367.72 304.406 1361.85 310.307 1356.44 cv
313.212 1353.78 316.224 1351.24 319.326 1348.82 cv
319.315 1348.83 319.311 1348.83 319.3 1348.84 cv
319.31 1348.83 319.319 1348.82 319.33 1348.82 cv
319.331 1348.82 319.332 1348.81 319.333 1348.81 cv
319.381 1348.78 319.476 1348.7 319.547 1348.65 cv
319.649 1348.57 319.75 1348.5 319.852 1348.42 cv
320.222 1348.14 320.592 1347.86 320.965 1347.58 cv
321.757 1346.99 322.555 1346.41 323.359 1345.83 cv
324.973 1344.68 326.611 1343.56 328.27 1342.48 cv
332.083 1339.98 336.012 1337.67 340.03 1335.52 cv
341.991 1334.48 342.762 1331.59 341.553 1329.72 cv
340.268 1327.73 337.844 1327.08 335.746 1328.2 cv
cp
f
681.997 1465.55 mo
679.669 1465.65 677.789 1467.41 677.753 1469.79 cv
677.64 1477.34 677.387 1484.89 676.814 1492.41 cv
676.543 1495.97 676.201 1499.53 675.765 1503.07 cv
675.713 1503.49 675.66 1503.91 675.605 1504.33 cv
675.586 1504.47 675.568 1504.62 675.549 1504.76 cv
675.548 1504.77 675.547 1504.77 675.547 1504.78 cv
675.415 1505.72 675.281 1506.66 675.136 1507.59 cv
674.883 1509.25 674.607 1510.89 674.305 1512.54 cv
673.069 1519.27 671.406 1525.93 669.22 1532.41 cv
668.677 1534.02 668.101 1535.62 667.494 1537.21 cv
667.199 1537.98 666.896 1538.76 666.584 1539.52 cv
666.43 1539.91 666.272 1540.29 666.114 1540.67 cv
666.034 1540.86 665.949 1541.05 665.867 1541.25 cv
664.479 1544.45 662.957 1547.6 661.309 1550.68 cv
659.384 1554.28 657.289 1557.79 655.045 1561.19 cv
653.875 1562.97 652.665 1564.72 651.418 1566.45 cv
650.797 1567.31 650.167 1568.16 649.527 1569.01 cv
649.384 1569.2 649.241 1569.39 649.096 1569.58 cv
649.058 1569.63 648.76 1570.01 648.681 1570.12 cv
648.376 1570.51 648.071 1570.9 647.765 1571.28 cv
646.389 1573.02 645.943 1575.61 647.765 1577.29 cv
649.298 1578.69 652.294 1579.14 653.767 1577.29 cv
663.348 1565.19 671.163 1551.97 676.436 1537.44 cv
681.305 1524.01 683.769 1509.87 685.032 1495.68 cv
685.799 1487.08 686.111 1478.43 686.241 1469.79 cv
686.274 1467.57 684.265 1465.45 681.997 1465.55 cv
cp
f
854.743 1644.7 mo
854.748 1644.73 854.752 1644.76 854.756 1644.79 cv
854.727 1644.51 854.706 1644.34 854.695 1644.29 cv
854.712 1644.43 854.727 1644.57 854.743 1644.7 cv
cp
f
1212.68 1582.38 mo
1212.41 1585.81 1212.09 1589.22 1211.71 1592.63 cv
1211.52 1594.3 1211.32 1595.98 1211.09 1597.64 cv
1211.05 1597.92 1210.92 1598.92 1210.89 1599.13 cv
1210.75 1600.11 1210.6 1601.08 1210.45 1602.06 cv
1209.47 1608.34 1208.23 1614.58 1206.63 1620.73 cv
1205.11 1626.6 1203.27 1632.39 1201.02 1638.03 cv
1200.79 1638.59 1200.56 1639.16 1200.33 1639.73 cv
1200.31 1639.76 1200.3 1639.79 1200.29 1639.81 cv
1200.27 1639.86 1200.25 1639.91 1200.22 1639.97 cv
1200.08 1640.3 1199.93 1640.64 1199.79 1640.97 cv
1199.2 1642.3 1198.6 1643.61 1197.96 1644.91 cv
1196.72 1647.48 1195.38 1650 1193.93 1652.46 cv
1192.51 1654.9 1190.98 1657.28 1189.36 1659.59 cv
1188.62 1660.65 1187.86 1661.69 1187.08 1662.72 cv
1187.04 1662.77 1187.01 1662.81 1186.99 1662.84 cv
1186.97 1662.86 1186.96 1662.88 1186.94 1662.9 cv
1186.72 1663.18 1186.5 1663.46 1186.28 1663.73 cv
1185.84 1664.28 1185.4 1664.83 1184.95 1665.37 cv
1181.28 1669.76 1177.23 1673.83 1172.87 1677.55 cv
1171.85 1678.42 1170.8 1679.27 1169.75 1680.11 cv
1169.68 1680.17 1169.37 1680.41 1169.23 1680.52 cv
1169.03 1680.67 1168.83 1680.83 1168.63 1680.98 cv
1168.03 1681.43 1167.42 1681.87 1166.82 1682.31 cv
1164.33 1684.11 1161.77 1685.8 1159.16 1687.4 cv
1153.69 1690.74 1147.97 1693.66 1142.11 1696.24 cv
1140.22 1697.06 1140.05 1697.14 1137.99 1697.96 cv
1136.33 1698.62 1134.66 1699.26 1132.98 1699.88 cv
1129.48 1701.16 1125.94 1702.35 1122.37 1703.44 cv
1114.76 1705.78 1107.03 1707.72 1099.24 1709.36 cv
1080.61 1713.31 1061.78 1715.6 1042.8 1717.12 cv
1019.38 1718.99 995.568 1720.32 972.068 1719.43 cv
952.149 1718.67 932.142 1715.71 913.398 1708.72 cv
906.688 1706.22 900.019 1703.05 893.545 1699.1 cv
890.611 1697.31 887.774 1695.37 885.027 1693.3 cv
884.932 1693.23 884.865 1693.18 884.809 1693.14 cv
884.767 1693.11 884.719 1693.07 884.659 1693.02 cv
884.34 1692.77 884.021 1692.52 883.706 1692.26 cv
883.184 1691.84 882.667 1691.42 882.156 1690.99 cv
880.86 1689.9 879.594 1688.78 878.359 1687.63 cv
876.291 1685.69 874.31 1683.65 872.434 1681.53 cv
871.505 1680.47 870.601 1679.4 869.724 1678.3 cv
869.546 1678.08 869.371 1677.85 869.195 1677.63 cv
869.19 1677.62 869.188 1677.62 869.182 1677.61 cv
868.712 1676.99 868.244 1676.36 867.787 1675.72 cv
864.963 1671.78 862.48 1667.59 860.403 1663.21 cv
860.16 1662.69 859.922 1662.18 859.69 1661.66 cv
859.61 1661.48 859.352 1660.87 859.23 1660.58 cv
858.877 1659.72 858.529 1658.86 858.207 1657.98 cv
857.517 1656.11 856.901 1654.21 856.368 1652.28 cv
855.91 1650.63 855.513 1648.96 855.186 1647.28 cv
855.031 1646.48 854.898 1645.68 854.771 1644.88 cv
854.765 1644.84 854.761 1644.82 854.756 1644.79 cv
854.762 1644.84 854.768 1644.9 854.774 1644.96 cv
854.766 1644.88 854.753 1644.79 854.743 1644.7 cv
854.693 1644.36 854.682 1644.23 854.695 1644.29 cv
854.67 1644.09 854.645 1643.89 854.625 1643.69 cv
854.393 1641.47 854.285 1639.21 854.505 1636.99 cv
854.763 1634.36 852.174 1632.57 849.896 1632.38 cv
837.275 1631.32 824.677 1629.64 812.381 1626.54 cv
807.912 1625.41 803.486 1624.1 799.159 1622.5 cv
798.272 1622.18 797.39 1621.84 796.513 1621.49 cv
795.216 1620.97 795.675 1621.17 794.541 1620.66 cv
792.935 1619.95 791.35 1619.19 789.797 1618.37 cv
787.244 1617.03 784.789 1615.52 782.454 1613.83 cv
782.383 1613.77 782.125 1613.58 781.951 1613.44 cv
781.839 1613.35 781.721 1613.26 781.675 1613.22 cv
781.227 1612.85 780.777 1612.48 780.341 1612.09 cv
779.55 1611.39 778.787 1610.65 778.062 1609.88 cv
777.525 1609.31 777.039 1608.7 776.531 1608.11 cv
776.694 1608.31 776.646 1608.28 776.438 1608 cv
776.397 1607.96 776.358 1607.91 776.317 1607.86 cv
776.36 1607.91 776.394 1607.95 776.428 1607.99 cv
776.359 1607.89 776.279 1607.78 776.179 1607.64 cv
775.962 1607.32 775.745 1607 775.54 1606.68 cv
775.269 1606.25 775.027 1605.8 774.786 1605.35 cv
794.577 1600.13 813.173 1589.73 825.988 1573.51 cv
829.938 1568.51 833.425 1563.15 836.029 1557.33 cv
836.816 1555.57 837.573 1553.78 838.19 1551.95 cv
838.954 1549.69 838.708 1547.3 838.706 1544.93 cv
838.682 1518.76 838.436 1492.6 838.281 1466.43 cv
838.156 1445.41 838.064 1424.38 838.574 1403.37 cv
838.977 1386.8 839.716 1370.2 841.728 1353.74 cv
841.829 1352.91 841.935 1352.08 842.042 1351.25 cv
842.057 1351.14 842.065 1351.07 842.07 1351.03 cv
842.079 1350.97 842.09 1350.89 842.104 1350.78 cv
842.174 1350.28 842.243 1349.79 842.315 1349.29 cv
842.559 1347.58 842.82 1345.88 843.102 1344.18 cv
843.637 1340.93 844.243 1337.7 844.937 1334.48 cv
846.206 1328.6 847.771 1322.78 849.774 1317.11 cv
850.242 1315.78 850.733 1314.47 851.25 1313.16 cv
851.437 1312.69 851.631 1312.22 851.823 1311.75 cv
851.753 1311.94 852.337 1310.56 852.496 1310.21 cv
853.581 1307.78 854.765 1305.4 856.058 1303.08 cv
857.312 1300.83 858.668 1298.64 860.131 1296.53 cv
860.466 1296.04 860.807 1295.56 861.154 1295.08 cv
861.339 1294.83 861.529 1294.57 861.716 1294.32 cv
861.775 1294.24 861.928 1294.03 862.055 1293.87 cv
862.22 1293.66 862.742 1292.99 862.906 1292.79 cv
863.332 1292.27 863.765 1291.75 864.204 1291.23 cv
867.51 1287.38 871.216 1283.91 875.203 1280.77 cv
875.24 1280.74 875.264 1280.72 875.311 1280.69 cv
875.537 1280.52 875.759 1280.35 875.984 1280.19 cv
876.551 1279.77 877.123 1279.36 877.7 1278.95 cv
878.793 1278.19 879.904 1277.45 881.031 1276.74 cv
883.362 1275.26 885.76 1273.89 888.207 1272.61 cv
890.788 1271.27 893.427 1270.05 896.094 1268.88 cv
896.147 1268.86 896.191 1268.84 896.23 1268.82 cv
896.259 1268.81 896.289 1268.8 896.329 1268.78 cv
896.629 1268.66 896.929 1268.53 897.231 1268.41 cv
897.992 1268.1 898.755 1267.8 899.522 1267.5 cv
900.989 1266.94 902.464 1266.39 903.948 1265.87 cv
910.399 1263.6 916.991 1261.75 923.638 1260.15 cv
931.266 1258.32 938.974 1256.83 946.711 1255.54 cv
955.909 1254.02 963.652 1252.99 972.719 1251.94 cv
977.571 1251.37 982.43 1250.86 987.291 1250.38 cv
1012.09 1247.93 1037.01 1245.83 1061.95 1246.01 cv
1081.31 1246.15 1100.8 1247.63 1119.42 1253.21 cv
1135.03 1257.9 1149.42 1265.79 1160.99 1277.3 cv
1162.87 1279.17 1164.68 1281.12 1166.41 1283.13 cv
1167.26 1284.12 1168.09 1285.13 1168.91 1286.15 cv
1169.09 1286.38 1169.26 1286.6 1169.44 1286.83 cv
1169.48 1286.87 1169.5 1286.91 1169.53 1286.94 cv
1169.54 1286.96 1169.55 1286.97 1169.57 1286.99 cv
1170.06 1287.64 1170.55 1288.29 1171.03 1288.95 cv
1174.4 1293.56 1177.42 1298.43 1180.14 1303.46 cv
1181.63 1306.2 1183.03 1309 1184.34 1311.83 cv
1184.97 1313.17 1185.57 1314.53 1186.16 1315.89 cv
1186.29 1316.17 1186.41 1316.45 1186.53 1316.74 cv
1186.6 1316.9 1186.8 1317.39 1186.83 1317.45 cv
1187.17 1318.29 1187.51 1319.13 1187.85 1319.97 cv
1190.46 1326.53 1192.71 1333.23 1194.68 1340 cv
1199.37 1356.04 1202.59 1372.48 1205.07 1388.99 cv
1211.84 1434.24 1213.32 1480.47 1213.78 1526.23 cv
1213.96 1544.95 1214.14 1563.7 1212.68 1582.38 cv
cp
1222.13 1485.72 mo
1221.34 1462.26 1220.01 1438.79 1217.59 1415.44 cv
1214.11 1381.91 1208.96 1347.57 1196.19 1316.16 cv
1185.94 1290.94 1170.17 1268.15 1146.04 1254.49 cv
1129.85 1245.33 1111.64 1240.86 1093.3 1238.63 cv
1071.13 1235.94 1048.63 1236.53 1026.38 1237.91 cv
1013.33 1238.72 1000.3 1239.88 987.291 1241.16 cv
969.015 1242.97 950.724 1245.18 932.698 1248.75 cv
919.072 1251.45 905.553 1254.97 892.732 1260.38 cv
882.19 1264.83 872.246 1270.61 863.797 1278.39 cv
856.035 1285.54 849.812 1294.32 845.32 1303.85 cv
840.087 1314.95 836.854 1326.83 834.701 1338.89 cv
831.986 1354.08 830.743 1369.52 830.006 1384.93 cv
829.074 1404.4 828.961 1423.9 828.977 1443.39 cv
828.997 1467.75 829.266 1492.1 829.396 1516.45 cv
829.433 1523.39 829.46 1530.32 829.477 1537.25 cv
829.485 1540.79 829.153 1544.52 829.49 1548.04 cv
829.502 1548.17 829.492 1548.7 829.524 1548.82 cv
829.209 1550.05 828.65 1551.22 828.199 1552.4 cv
828.815 1550.79 828.165 1552.47 827.976 1552.88 cv
827.74 1553.41 827.497 1553.93 827.247 1554.44 cv
826.645 1555.68 826.003 1556.91 825.327 1558.11 cv
823.695 1561.02 821.848 1563.79 819.866 1566.47 cv
819.737 1566.65 819.676 1566.73 819.64 1566.78 cv
819.622 1566.8 819.578 1566.85 819.471 1566.99 cv
819.211 1567.32 818.951 1567.64 818.687 1567.97 cv
818.004 1568.81 817.303 1569.63 816.586 1570.44 cv
815.155 1572.06 813.658 1573.62 812.1 1575.12 cv
804.737 1582.2 795.992 1587.78 786.355 1591.83 cv
780.358 1594.34 774.079 1596.18 767.737 1597.59 cv
765.781 1598.02 764.346 1600.09 764.354 1602.03 cv
764.371 1606.87 767.41 1611.55 770.38 1615.09 cv
779.091 1625.47 793.338 1630.82 805.969 1634.37 cv
818.742 1637.96 831.96 1639.91 845.165 1641.17 cv
845.304 1645.91 846.342 1650.74 847.609 1655.19 cv
850.197 1664.29 854.485 1672.98 860.023 1680.64 cv
877.998 1705.52 906.958 1718.94 936.441 1724.67 cv
960.182 1729.29 984.242 1729.15 1008.31 1728.29 cv
1030.3 1727.5 1052.27 1725.95 1074.08 1722.98 cv
1104.94 1718.77 1136.92 1711.79 1163.81 1695.36 cv
1184.78 1682.54 1200.41 1663.9 1209.63 1641.16 cv
1219.98 1615.66 1222.37 1587.33 1222.97 1560.08 cv
1223.52 1535.32 1222.97 1510.48 1222.13 1485.72 cv
cp
f
776.438 1608 mo
776.47 1608.04 776.5 1608.08 776.531 1608.11 cv
776.503 1608.08 776.47 1608.04 776.428 1607.99 cv
776.432 1607.99 776.436 1608 776.438 1608 cv
cp
f
932.411 1272.83 mo
922.172 1273.82 912.094 1276.08 902.88 1280.77 cv
895.251 1284.66 888.753 1290.27 883.579 1297.06 cv
873.299 1310.56 869.659 1327.9 867.793 1344.41 cv
866.64 1354.61 866.247 1364.88 865.982 1375.13 cv
865.92 1377.55 868.146 1379.85 870.591 1379.74 cv
873.141 1379.63 875.133 1377.72 875.2 1375.13 cv
875.433 1366.1 875.771 1357.05 876.631 1348.05 cv
876.836 1345.91 877.071 1343.77 877.344 1341.63 cv
877.365 1341.47 877.386 1341.31 877.407 1341.15 cv
877.481 1340.62 877.554 1340.1 877.632 1339.57 cv
877.792 1338.49 877.962 1337.41 878.146 1336.33 cv
878.826 1332.31 879.674 1328.32 880.761 1324.4 cv
881.284 1322.51 881.865 1320.63 882.51 1318.77 cv
882.813 1317.9 883.13 1317.04 883.463 1316.17 cv
883.628 1315.75 883.797 1315.32 883.97 1314.9 cv
884.048 1314.71 884.133 1314.52 884.207 1314.32 cv
884.17 1314.42 884.139 1314.5 884.11 1314.58 cv
884.156 1314.46 884.2 1314.35 884.23 1314.28 cv
885.727 1310.86 887.495 1307.55 889.577 1304.45 cv
890.069 1303.72 890.577 1303 891.104 1302.29 cv
891.247 1302.1 891.398 1301.91 891.538 1301.72 cv
891.5 1301.77 891.479 1301.8 891.446 1301.84 cv
891.733 1301.48 892.024 1301.13 892.321 1300.77 cv
893.512 1299.35 894.78 1298 896.119 1296.72 cv
896.767 1296.1 897.431 1295.5 898.11 1294.91 cv
898.484 1294.59 898.863 1294.28 899.247 1293.97 cv
899.391 1293.85 899.535 1293.74 899.68 1293.62 cv
899.681 1293.62 899.682 1293.62 899.684 1293.62 cv
901.254 1292.46 902.859 1291.37 904.54 1290.38 cv
906.515 1289.21 908.566 1288.17 910.668 1287.25 cv
910.652 1287.26 910.645 1287.26 910.628 1287.26 cv
910.653 1287.26 910.679 1287.24 910.704 1287.24 cv
910.707 1287.24 910.709 1287.23 910.712 1287.23 cv
910.759 1287.21 910.817 1287.19 910.877 1287.17 cv
911.099 1287.08 911.318 1286.98 911.533 1286.9 cv
912.103 1286.67 912.675 1286.46 913.251 1286.25 cv
914.435 1285.82 915.631 1285.42 916.837 1285.06 cv
919.398 1284.29 922.002 1283.66 924.628 1283.15 cv
926.029 1282.89 927.435 1282.65 928.846 1282.45 cv
929.068 1282.42 929.294 1282.39 929.514 1282.35 cv
928.185 1282.6 929.717 1282.33 929.983 1282.3 cv
930.792 1282.21 931.601 1282.12 932.411 1282.04 cv
934.803 1281.81 937.139 1280.09 937.02 1277.43 cv
936.917 1275.14 934.981 1272.58 932.411 1272.83 cv
cp
f
910.668 1287.25 mo
911.658 1286.97 911.226 1287.05 910.877 1287.17 cv
910.82 1287.19 910.762 1287.22 910.704 1287.24 cv
910.692 1287.24 910.68 1287.25 910.668 1287.25 cv
cp
f
891.446 1301.84 mo
891.433 1301.86 891.42 1301.87 891.409 1301.89 cv
891.219 1302.13 890.767 1302.79 891.446 1301.84 cv
cp
f
884.11 1314.58 mo
883.965 1314.94 883.813 1315.35 884.11 1314.58 cv
884.11 1314.58 li
cp
f
1178.19 1618.49 mo
1177.96 1619.16 1178.01 1619.15 1178.08 1618.94 cv
1178.11 1618.79 1178.14 1618.64 1178.19 1618.5 cv
1178.19 1618.5 1178.19 1618.49 1178.19 1618.49 cv
cp
f
1183.86 1598.73 mo
1181.33 1598.84 1179.3 1600.75 1179.25 1603.34 cv
1179.19 1606.93 1179 1610.52 1178.67 1614.1 cv
1178.59 1614.96 1178.5 1615.83 1178.41 1616.69 cv
1178.36 1617.09 1178.31 1617.5 1178.27 1617.9 cv
1178.24 1618.1 1178.22 1618.29 1178.19 1618.49 cv
1178.19 1618.49 1178.19 1618.48 1178.2 1618.48 cv
1178.19 1618.48 1178.19 1618.49 1178.19 1618.5 cv
1178.19 1618.5 1178.19 1618.5 1178.19 1618.5 cv
1178.17 1618.66 1178.12 1618.83 1178.08 1618.94 cv
1177.96 1619.56 1177.94 1620.27 1177.84 1620.86 cv
1177.7 1621.75 1177.55 1622.63 1177.39 1623.51 cv
1176.79 1626.81 1176.03 1630.09 1175.09 1633.31 cv
1174.64 1634.86 1174.15 1636.4 1173.62 1637.92 cv
1173.35 1638.67 1173.08 1639.42 1172.79 1640.16 cv
1172.66 1640.51 1172.52 1640.86 1172.38 1641.2 cv
1172.23 1641.57 1171.53 1642.88 1172.2 1641.64 cv
1171.46 1643 1170.92 1644.51 1170.22 1645.89 cv
1169.52 1647.27 1168.78 1648.63 1167.98 1649.95 cv
1167.17 1651.31 1166.31 1652.63 1165.4 1653.92 cv
1164.99 1654.5 1164.52 1655.06 1164.12 1655.66 cv
1164.06 1655.74 1164 1655.81 1163.94 1655.89 cv
1163.69 1656.2 1163.43 1656.51 1163.17 1656.83 cv
1161.18 1659.21 1158.99 1661.43 1156.63 1663.46 cv
1156.08 1663.93 1155.51 1664.39 1154.95 1664.85 cv
1154.94 1664.86 1154.93 1664.86 1154.92 1664.87 cv
1154.84 1664.93 1154.76 1664.99 1154.68 1665.05 cv
1154.35 1665.3 1154.01 1665.54 1153.68 1665.79 cv
1152.35 1666.74 1150.97 1667.63 1149.57 1668.47 cv
1147.95 1669.42 1146.29 1670.3 1144.6 1671.1 cv
1144.2 1671.29 1143.8 1671.47 1143.39 1671.66 cv
1143.21 1671.74 1143.03 1671.82 1142.85 1671.9 cv
1141.95 1672.29 1142.99 1671.92 1142.99 1671.84 cv
1142.99 1672.05 1140.46 1672.83 1140.16 1672.94 cv
1136.22 1674.37 1132.16 1675.42 1128.04 1676.18 cv
1125.67 1676.62 1124.1 1679.62 1124.82 1681.85 cv
1125.65 1684.39 1127.95 1685.54 1130.49 1685.07 cv
1144.75 1682.43 1158.36 1675.91 1168.19 1665.07 cv
1177.42 1654.88 1182.97 1641.93 1185.77 1628.57 cv
1187.5 1620.28 1188.31 1611.8 1188.47 1603.34 cv
1188.52 1600.93 1186.32 1598.62 1183.86 1598.73 cv
cp
f
1183.95 1560.82 mo
1181.45 1560.93 1179.34 1562.84 1179.34 1565.43 cv
1179.34 1569.8 1179.34 1574.18 1179.34 1578.55 cv
1179.34 1580.96 1181.46 1583.27 1183.95 1583.16 cv
1186.45 1583.05 1188.56 1581.13 1188.56 1578.55 cv
1188.56 1574.18 1188.56 1569.8 1188.56 1565.43 cv
1188.56 1563.02 1186.44 1560.71 1183.95 1560.82 cv
cp
f
2148.47 1733.57 mo
2147.74 1733.2 2148.01 1733.41 2148.47 1733.57 cv
2148.47 1733.57 li
cp
f
2334.39 1509.6 mo
2333.86 1540.38 2331.9 1571.14 2328.91 1601.78 cv
2326.36 1627.91 2323.11 1653.58 2319.08 1679.42 cv
2317.26 1691.02 2315.66 1702.35 2309.5 1712.29 cv
2303.85 1721.41 2295.51 1728.13 2285.67 1732.99 cv
2264.59 1743.4 2239.07 1744.68 2215.48 1743.65 cv
2195.5 1742.77 2176.93 1740.12 2157.36 1735.74 cv
2155.11 1735.24 2152.87 1734.71 2150.63 1734.15 cv
2150 1733.99 2149.38 1733.8 2148.74 1733.65 cv
2148.65 1733.63 2148.55 1733.6 2148.47 1733.57 cv
2148.61 1733.65 2148.78 1733.74 2149 1733.86 cv
2149.16 1734.06 2149.31 1734.27 2149.47 1734.47 cv
2147.51 1732.9 2144.42 1732.58 2143.19 1735.38 cv
2139.6 1743.56 2134.52 1751.26 2129.21 1758.4 cv
2118.13 1773.3 2103.41 1786.65 2086.35 1794.97 cv
2076.37 1799.84 2065.58 1802.81 2054.56 1803.91 cv
2059.53 1791.62 2064.78 1779.38 2068.21 1766.56 cv
2072.07 1752.12 2072.82 1737.4 2069.88 1722.74 cv
2069.86 1722.62 2069.84 1722.51 2069.81 1722.39 cv
2069.8 1722.36 2069.8 1722.33 2069.79 1722.3 cv
2069.34 1720.13 2067.73 1719.21 2066.04 1719.25 cv
2065.93 1719.23 2065.82 1719.2 2065.7 1719.19 cv
2054.02 1717.85 2042.26 1716.57 2030.68 1714.57 cv
2025.67 1713.71 2020.73 1712.43 2015.95 1710.72 cv
2007.99 1707.88 1998.6 1702.48 1992.14 1697.15 cv
1984.5 1690.86 1978 1683.41 1972.77 1675.8 cv
1966.88 1667.22 1961.61 1657.14 1957.8 1648.12 cv
1948.5 1626.12 1943.05 1602.55 1939.37 1579.02 cv
1935.44 1553.92 1933.67 1527.98 1933.11 1502.34 cv
1932.57 1477.62 1933.19 1452.87 1934.64 1428.19 cv
1935.81 1408.21 1937.53 1388.26 1939.76 1368.38 cv
1940.56 1361.26 1941.44 1354.14 1942.38 1347.04 cv
1942.39 1346.95 1942.4 1346.86 1942.41 1346.79 cv
1942.45 1346.5 1942.49 1346.22 1942.53 1345.93 cv
1942.62 1345.23 1942.72 1344.53 1942.82 1343.83 cv
1942.98 1342.62 1943.15 1341.42 1943.32 1340.22 cv
1943.59 1338.31 1943.87 1336.4 1944.16 1334.5 cv
1946.28 1320.5 1951.05 1307.87 1960.16 1297.2 cv
1977.49 1276.88 2003.57 1265.68 2028.75 1258.33 cv
2059.58 1249.34 2091.83 1245.52 2123.85 1244.25 cv
2154.27 1243.03 2184.92 1244.11 2215.13 1248.03 cv
2226.42 1249.49 2238.47 1251.53 2248.92 1255.91 cv
2258.68 1259.99 2267.93 1266.12 2275.62 1273.24 cv
2292.96 1289.28 2304.48 1310.82 2312.5 1332.97 cv
2322.17 1359.64 2327.44 1387.85 2330.57 1415.98 cv
2334.03 1447.04 2334.92 1478.36 2334.39 1509.6 cv
cp
1942.42 1346.75 mo
1942.46 1346.41 1942.48 1346.3 1942.42 1346.75 cv
1942.42 1346.75 li
cp
2342.45 1462.9 mo
2341.29 1431.85 2338.33 1400.69 2331.82 1370.27 cv
2326.22 1344.1 2317.89 1317.86 2303.86 1294.9 cv
2291.71 1275.02 2274.77 1257.82 2253.12 1248.54 cv
2241.44 1243.54 2229.28 1241.42 2216.75 1239.75 cv
2202.24 1237.82 2187.63 1236.6 2173 1235.92 cv
2139.89 1234.4 2106.59 1235.58 2073.76 1240.23 cv
2043.38 1244.53 2012.39 1251.84 1985.32 1266.74 cv
1962.89 1279.07 1943.23 1298.09 1937.45 1323.81 cv
1935.79 1331.2 1934.99 1338.83 1933.99 1346.32 cv
1931.79 1362.71 1930 1379.16 1928.55 1395.63 cv
1926.5 1418.82 1925.15 1442.07 1924.65 1465.34 cv
1924.08 1491.51 1924.57 1517.73 1926.75 1543.82 cv
1928.89 1569.5 1932.55 1595.23 1939.33 1620.13 cv
1945.29 1641.99 1953.7 1663.82 1967.01 1682.32 cv
1979.12 1699.15 1995.23 1712.67 2015.04 1719.38 cv
2019.74 1720.97 2024.58 1722.14 2029.48 1722.93 cv
2040.31 1724.67 2051.22 1726 2062.11 1727.26 cv
2064.33 1740.31 2063.13 1753.34 2059.53 1766.11 cv
2055.53 1780.29 2049.41 1793.78 2044.06 1807.47 cv
2043.06 1810.02 2045.6 1812.93 2048.15 1812.84 cv
2072.43 1811.99 2094.98 1802.71 2113.59 1787.26 cv
2126.55 1776.5 2137.45 1763.07 2145.88 1748.51 cv
2146.98 1746.61 2148.06 1744.68 2149.06 1742.71 cv
2151.05 1743.2 2153.1 1743.48 2154.62 1743.82 cv
2162.86 1745.68 2171.17 1747.22 2179.52 1748.49 cv
2203.59 1752.15 2228.34 1753.97 2252.57 1750.83 cv
2276.46 1747.73 2301.42 1739.31 2315.56 1718.52 cv
2322.63 1708.13 2324.94 1696.36 2326.86 1684.19 cv
2328.83 1671.75 2330.62 1659.28 2332.25 1646.79 cv
2336.06 1617.65 2338.99 1588.38 2340.85 1559.05 cv
2342.88 1527.06 2343.66 1494.95 2342.45 1462.9 cv
cp
f
2272.96 1375.9 mo
2272.97 1375.93 2272.97 1375.96 2272.97 1375.99 cv
2272.94 1375.73 2272.88 1375.32 2272.96 1375.9 cv
cp
2272.98 1376.06 mo
2272.99 1376.1 2272.99 1376.13 2273 1376.17 cv
2273 1376.15 2272.99 1376.11 2272.98 1376.06 cv
cp
2237.78 1296.45 mo
2237.83 1296.48 2237.88 1296.52 2237.93 1296.56 cv
2238.45 1296.97 2238.96 1297.38 2239.47 1297.8 cv
2240.46 1298.62 2241.43 1299.46 2242.38 1300.34 cv
2244.25 1302.07 2246.04 1303.9 2247.72 1305.82 cv
2248.56 1306.77 2249.37 1307.75 2250.16 1308.75 cv
2250.22 1308.82 2250.28 1308.89 2250.33 1308.96 cv
2250.49 1309.17 2250.64 1309.38 2250.8 1309.58 cv
2251.2 1310.13 2251.6 1310.67 2251.99 1311.23 cv
2253.49 1313.34 2254.88 1315.53 2256.17 1317.78 cv
2257.51 1320.11 2258.75 1322.51 2259.89 1324.95 cv
2260.16 1325.53 2260.42 1326.11 2260.68 1326.7 cv
2260.82 1327.01 2260.96 1327.32 2261.09 1327.63 cv
2261.23 1327.96 2261.72 1329.19 2261.2 1327.88 cv
2261.71 1329.17 2262.25 1330.45 2262.74 1331.75 cv
2264.8 1337.21 2266.48 1342.82 2267.88 1348.48 cv
2269.44 1354.76 2270.68 1361.11 2271.71 1367.49 cv
2271.98 1369.15 2272.24 1370.82 2272.48 1372.49 cv
2272.6 1373.29 2272.71 1374.09 2272.82 1374.89 cv
2272.87 1375.27 2272.92 1375.65 2272.98 1376.03 cv
2273.01 1376.27 2273.04 1376.52 2273.07 1376.77 cv
2273.54 1380.3 2273.95 1383.84 2274.33 1387.38 cv
2274.53 1389.21 2274.71 1391.04 2274.89 1392.87 cv
2275.11 1395.07 2276.69 1397.22 2279.14 1397.11 cv
2281.25 1397.02 2283.61 1395.23 2283.38 1392.87 cv
2282 1378.74 2280.23 1364.59 2277.13 1350.72 cv
2274.51 1339.02 2270.86 1327.43 2265.29 1316.77 cv
2260.3 1307.21 2253.58 1298.44 2245.22 1291.59 cv
2235.83 1283.88 2224.89 1278.54 2213.29 1275.03 cv
2197.75 1270.33 2181.31 1268.73 2165.13 1268.38 cv
2162.68 1268.33 2160.23 1268.31 2157.78 1268.32 cv
2155.56 1268.33 2153.43 1270.27 2153.54 1272.56 cv
2153.64 1274.86 2155.4 1276.82 2157.78 1276.81 cv
2167.05 1276.78 2176.32 1277.14 2185.54 1278.15 cv
2186.52 1278.26 2187.49 1278.37 2188.47 1278.5 cv
2188.76 1278.53 2189.04 1278.57 2189.33 1278.61 cv
2189.34 1278.61 2189.36 1278.61 2189.38 1278.61 cv
2189.38 1278.61 2189.38 1278.61 2189.38 1278.61 cv
2189.94 1278.67 2190.5 1278.77 2191.05 1278.85 cv
2192.91 1279.12 2194.76 1279.43 2196.6 1279.77 cv
2199.91 1280.37 2203.19 1281.08 2206.44 1281.93 cv
2209.47 1282.71 2212.47 1283.61 2215.42 1284.64 cv
2216.83 1285.13 2218.23 1285.66 2219.62 1286.21 cv
2219.99 1286.36 2220.37 1286.51 2220.75 1286.67 cv
2220.77 1286.68 2220.8 1286.69 2220.83 1286.7 cv
2220.83 1286.71 2220.84 1286.71 2220.84 1286.71 cv
2221.54 1287.01 2222.23 1287.32 2222.92 1287.63 cv
2227.9 1289.92 2232.67 1292.67 2237.08 1295.93 cv
2237.32 1296.1 2237.55 1296.27 2237.78 1296.45 cv
cp
f
2299.68 1638.85 mo
2297.2 1638.96 2295.67 1640.72 2295.44 1643.1 cv
2295.16 1645.99 2294.86 1648.88 2294.52 1651.76 cv
2294.36 1653.13 2294.19 1654.51 2294.01 1655.88 cv
2293.99 1656.05 2293.97 1656.22 2293.95 1656.4 cv
2293.94 1656.43 2293.84 1657.17 2293.83 1657.21 cv
2293.73 1657.96 2293.62 1658.71 2293.51 1659.46 cv
2292.93 1663.36 2292.25 1667.24 2291.41 1671.09 cv
2290.7 1674.38 2289.87 1677.64 2288.88 1680.86 cv
2288.38 1682.47 2287.85 1684.07 2287.27 1685.64 cv
2287.01 1686.35 2286.74 1687.05 2286.46 1687.75 cv
2286.33 1688.07 2286.2 1688.39 2286.07 1688.7 cv
2286 1688.88 2285.92 1689.06 2285.84 1689.23 cv
2284.56 1692.16 2283.08 1695 2281.37 1697.7 cv
2280.56 1698.99 2279.68 1700.24 2278.76 1701.47 cv
2278.69 1701.56 2278.62 1701.65 2278.55 1701.73 cv
2278.32 1702.03 2278.08 1702.32 2277.83 1702.61 cv
2277.3 1703.24 2276.75 1703.87 2276.19 1704.47 cv
2275.15 1705.58 2274.07 1706.64 2272.93 1707.65 cv
2272.36 1708.15 2271.77 1708.65 2271.17 1709.12 cv
2271.12 1709.17 2271.07 1709.21 2271.04 1709.24 cv
2271 1709.26 2270.98 1709.28 2270.94 1709.31 cv
2270.56 1709.59 2270.19 1709.86 2269.81 1710.13 cv
2268.48 1711.06 2267.11 1711.92 2265.69 1712.71 cv
2264.22 1713.53 2262.63 1714.13 2261.16 1714.93 cv
2262.36 1714.28 2260.86 1715.05 2260.53 1715.18 cv
2260.05 1715.37 2259.56 1715.55 2259.08 1715.72 cv
2258.17 1716.04 2257.25 1716.34 2256.32 1716.62 cv
2254.28 1717.23 2252.2 1717.72 2250.11 1718.12 cv
2249.14 1718.3 2248.13 1718.52 2247.14 1718.63 cv
2247.06 1718.63 2246.95 1718.64 2246.87 1718.65 cv
2246.46 1718.7 2246.06 1718.75 2245.65 1718.79 cv
2245.09 1718.85 2244.52 1718.91 2243.96 1718.96 cv
2241.4 1719.18 2238.84 1719.28 2236.28 1719.29 cv
2234.06 1719.3 2231.94 1721.23 2232.04 1723.53 cv
2232.14 1725.83 2233.9 1727.78 2236.28 1727.78 cv
2244.89 1727.75 2253.7 1726.71 2261.82 1723.73 cv
2268.75 1721.19 2275.12 1717.4 2280.44 1712.26 cv
2290.44 1702.59 2295.86 1689.21 2299.02 1675.9 cv
2301.58 1665.13 2302.84 1654.09 2303.93 1643.1 cv
2304.15 1640.88 2301.82 1638.76 2299.68 1638.85 cv
cp
f
2306.13 1574.17 mo
2306.06 1571.96 2304.22 1569.83 2301.88 1569.93 cv
2299.64 1570.03 2297.57 1571.8 2297.64 1574.17 cv
2297.94 1584.05 2297.97 1593.99 2297.44 1603.86 cv
2297.35 1605.58 2297.23 1607.31 2297.08 1609.03 cv
2297 1609.84 2296.92 1610.65 2296.82 1611.46 cv
2296.81 1611.54 2296.8 1611.62 2296.79 1611.7 cv
2296.74 1612.04 2296.69 1612.37 2296.64 1612.71 cv
2296.28 1614.89 2297.2 1617.39 2299.6 1617.93 cv
2301.64 1618.4 2304.44 1617.31 2304.82 1614.97 cv
2305.88 1608.49 2306.1 1601.88 2306.23 1595.32 cv
2306.34 1589.48 2306.32 1583.63 2306.21 1577.78 cv
2306.19 1576.58 2306.16 1575.38 2306.13 1574.17 cv
cp
f
2344.85 2070.18 mo
2340.79 2094.92 2334.04 2119.23 2324.8 2142.52 cv
2315.94 2164.84 2304.63 2186.31 2290.69 2205.88 cv
2278.08 2223.57 2262.98 2239.96 2245.18 2252.53 cv
2238.17 2257.49 2230.74 2261.84 2222.95 2265.45 cv
2216.24 2254.58 2209.52 2243.53 2200.24 2234.67 cv
2199.03 2233.51 2197.78 2232.4 2196.49 2231.34 cv
2194.34 2229.56 2192.93 2228.89 2190.12 2229.64 cv
2186.46 2230.63 2182.78 2231.53 2179.08 2232.36 cv
2171.42 2234.09 2163.68 2235.5 2155.9 2236.56 cv
2130.59 2239.98 2104.31 2239.98 2079.32 2234.62 cv
2060.28 2230.53 2042.54 2223.44 2026.62 2212.12 cv
2012.36 2201.98 2000.29 2188.32 1991.46 2172.96 cv
1981.83 2156.2 1975.95 2137.72 1972.64 2118.49 cv
1968.84 2096.38 1968.82 2073.37 1970.39 2050.89 cv
1971.89 2029.44 1975.35 2008.08 1981.55 1987.47 cv
1987.02 1969.24 1994.44 1952.21 2004.71 1936.06 cv
2014.04 1921.39 2025.35 1908.32 2038.87 1896.85 cv
2045.34 1891.37 2051.97 1886.57 2059.48 1881.91 cv
2067.1 1877.18 2075.07 1873.01 2083.27 1869.37 cv
2099.85 1862.02 2118.72 1856.66 2137.1 1853.37 cv
2157.4 1849.73 2178.5 1848.19 2199.38 1848.62 cv
2219.27 1849.02 2238.84 1852.28 2257.57 1859.51 cv
2274.07 1865.89 2289.77 1875.87 2302.5 1888.41 cv
2315.9 1901.61 2326.18 1917.45 2333.56 1934.98 cv
2341.77 1954.53 2346.34 1976.2 2348.07 1997.52 cv
2350.04 2021.74 2348.79 2046.22 2344.85 2070.18 cv
cp
2352.79 1969.84 mo
2348.87 1949.75 2342.07 1930.05 2331.69 1912.35 cv
2322.17 1896.11 2309.64 1881.87 2294.64 1870.49 cv
2279.77 1859.22 2262.53 1851.21 2244.56 1846.34 cv
2224.54 1840.93 2203.87 1839.63 2183.22 1840.26 cv
2162.67 1840.89 2142.08 1843.2 2122.03 1847.8 cv
2103.92 1851.95 2086.22 1858.08 2069.63 1866.48 cv
2053.91 1874.44 2039.26 1884.57 2026.4 1896.62 cv
2013.43 1908.77 2002.33 1922.94 1993.41 1938.31 cv
1983.78 1954.91 1976.62 1972.94 1971.58 1991.43 cv
1965.8 2012.68 1962.74 2034.64 1961.54 2056.61 cv
1960.32 2079.17 1960.86 2101.89 1965.07 2124.14 cv
1968.66 2143.13 1975.02 2161.77 1984.84 2178.46 cv
1994.18 2194.33 2006.65 2208.13 2021.58 2218.91 cv
2037.24 2230.21 2055.45 2237.81 2074.21 2242.17 cv
2098.53 2247.82 2123.99 2248.52 2148.76 2245.9 cv
2163.13 2244.38 2177.37 2241.76 2191.34 2238.09 cv
2202.5 2247.73 2209.88 2260.54 2217.62 2272.96 cv
2217.73 2273.14 2217.86 2273.31 2217.99 2273.46 cv
2219.32 2275.15 2221.49 2275.3 2223.42 2274.48 cv
2242.84 2266.22 2260.03 2253.27 2274.73 2238.24 cv
2290.94 2221.66 2304.42 2202.42 2315.54 2182.11 cv
2327.34 2160.57 2336.64 2137.61 2343.54 2114.05 cv
2350.5 2090.3 2355.02 2065.78 2356.74 2041.09 cv
2358.4 2017.33 2357.36 1993.24 2352.79 1969.84 cv
cp
f
2275.55 1895.84 mo
2259.55 1883.43 2240.73 1874.82 2220.87 1870.88 cv
2208.63 1868.46 2196.09 1867.69 2183.66 1868.7 cv
2181.45 1868.88 2179.31 1870.52 2179.42 1872.94 cv
2179.51 1875.09 2181.29 1877.38 2183.66 1877.19 cv
2189.61 1876.7 2195.58 1876.61 2201.54 1876.93 cv
2203.99 1877.07 2206.44 1877.27 2208.88 1877.54 cv
2209.49 1877.61 2210.1 1877.68 2210.7 1877.76 cv
2210.91 1877.78 2211.13 1877.81 2211.34 1877.84 cv
2211.36 1877.84 2211.37 1877.84 2211.39 1877.85 cv
2212.7 1878.04 2214.01 1878.24 2215.31 1878.46 cv
2224.88 1880.1 2234.21 1882.84 2243.18 1886.54 cv
2243.18 1886.54 2243.18 1886.54 2243.19 1886.55 cv
2243.22 1886.56 2243.24 1886.57 2243.28 1886.58 cv
2243.55 1886.7 2243.83 1886.82 2244.1 1886.94 cv
2244.66 1887.18 2245.21 1887.43 2245.75 1887.68 cv
2246.94 1888.22 2248.12 1888.77 2249.29 1889.35 cv
2251.45 1890.41 2253.57 1891.53 2255.67 1892.72 cv
2259.84 1895.08 2263.89 1897.69 2267.76 1900.52 cv
2268.25 1900.87 2268.73 1901.23 2269.21 1901.59 cv
2269.45 1901.77 2269.69 1901.96 2269.93 1902.14 cv
2269.94 1902.15 2269.95 1902.15 2269.96 1902.16 cv
2269.98 1902.18 2270 1902.19 2270.02 1902.21 cv
2270.96 1902.95 2271.9 1903.7 2272.82 1904.47 cv
2274.67 1906 2276.48 1907.59 2278.23 1909.24 cv
2281.76 1912.54 2285.08 1916.05 2288.18 1919.76 cv
2289.06 1920.82 2289.95 1921.88 2290.78 1922.99 cv
2290.84 1923.07 2290.89 1923.14 2290.92 1923.17 cv
2291.16 1923.5 2291.41 1923.82 2291.65 1924.15 cv
2292.01 1924.64 2292.37 1925.13 2292.73 1925.62 cv
2294.33 1927.86 2295.86 1930.16 2297.31 1932.5 cv
2300.3 1937.36 2302.93 1942.43 2305.18 1947.67 cv
2306.07 1949.72 2309.23 1950.33 2310.99 1949.19 cv
2313.12 1947.83 2313.46 1945.58 2312.51 1943.39 cv
2304.47 1924.74 2291.59 1908.28 2275.55 1895.84 cv
cp
f
2108.54 2211.49 mo
2104.99 2211.42 2101.44 2211.22 2097.9 2210.88 cv
2097.07 2210.8 2096.24 2210.71 2095.4 2210.62 cv
2094.91 2210.56 2094.42 2210.51 2093.93 2210.45 cv
2093.62 2210.41 2092.02 2210.27 2093.29 2210.37 cv
2091.52 2210.23 2089.72 2209.85 2087.97 2209.54 cv
2080.76 2208.28 2073.63 2206.45 2066.72 2204.03 cv
2065.01 2203.43 2063.32 2202.79 2061.65 2202.12 cv
2061.27 2201.97 2060.9 2201.82 2060.53 2201.67 cv
2060.5 2201.65 2060.22 2201.54 2060.07 2201.47 cv
2060.05 2201.47 2060.03 2201.46 2060.02 2201.45 cv
2059.15 2201.08 2058.28 2200.69 2057.42 2200.29 cv
2054.16 2198.8 2050.97 2197.15 2047.88 2195.33 cv
2044.73 2193.48 2041.67 2191.46 2038.75 2189.26 cv
2038.51 2189.08 2037.61 2188.29 2038.44 2189.03 cv
2038.11 2188.74 2037.74 2188.48 2037.4 2188.21 cv
2036.67 2187.62 2035.95 2187.03 2035.24 2186.42 cv
2033.9 2185.27 2032.59 2184.08 2031.33 2182.85 cv
2029.89 2181.45 2028.49 2179.99 2027.16 2178.49 cv
2026.51 2177.75 2025.87 2177 2025.25 2176.24 cv
2024.91 2175.82 2024.57 2175.4 2024.23 2174.98 cv
2024.21 2174.95 2024.19 2174.92 2024.16 2174.89 cv
2024.04 2174.74 2023.93 2174.58 2023.82 2174.43 cv
2021.37 2171.15 2019.2 2167.68 2017.31 2164.04 cv
2016.29 2162.07 2013.37 2161.32 2011.51 2162.52 cv
2009.5 2163.82 2008.89 2166.22 2009.99 2168.33 cv
2017.04 2181.93 2028.14 2193.01 2041.06 2201.12 cv
2053.81 2209.12 2068.33 2214.36 2083.06 2217.23 cv
2091.45 2218.87 2100 2219.8 2108.54 2219.98 cv
2110.76 2220.03 2112.89 2218 2112.79 2215.74 cv
2112.68 2213.4 2110.92 2211.54 2108.54 2211.49 cv
cp
f
2004.52 2128.69 mo
2004.36 2127.71 2003.38 2126.63 2002.57 2126.15 cv
2001.66 2125.62 2000.31 2125.39 1999.3 2125.72 cv
1998.27 2126.06 1997.28 2126.69 1996.76 2127.67 cv
1996.19 2128.75 1996.15 2129.75 1996.33 2130.94 cv
1997.11 2135.95 1997.99 2140.94 1998.93 2145.92 cv
1999.34 2148.11 2002.09 2149.55 2004.15 2148.89 cv
2006.49 2148.13 2007.56 2146.01 2007.12 2143.67 cv
2006.17 2138.69 2005.3 2133.7 2004.52 2128.69 cv
cp
f
1859.31 1615.16 mo
1857.77 1617.29 1856.2 1619.39 1854.61 1621.47 cv
1854.44 1621.7 1854.26 1621.93 1854.09 1622.15 cv
1854.08 1622.16 1854.08 1622.16 1854.08 1622.17 cv
1854.06 1622.19 1854.04 1622.22 1854.01 1622.25 cv
1853.58 1622.81 1853.14 1623.36 1852.71 1623.92 cv
1851.81 1625.06 1850.91 1626.19 1850 1627.31 cv
1846.13 1632.1 1842.12 1636.78 1838 1641.34 cv
1828.46 1651.89 1818.27 1661.85 1807.51 1671.16 cv
1780.87 1694.21 1750.53 1713.18 1718.02 1726.99 cv
1676.89 1744.48 1632.41 1753.38 1587.81 1754.71 cv
1565.92 1755.37 1543.69 1755.12 1521.89 1752.93 cv
1519.62 1752.7 1517.36 1752.45 1515.11 1752.17 cv
1514.67 1752.11 1514.24 1752.05 1513.8 1752 cv
1513.67 1751.98 1512.67 1751.84 1512.45 1751.81 cv
1511.29 1751.64 1510.14 1751.47 1508.98 1751.29 cv
1504.57 1750.59 1500.17 1749.76 1495.81 1748.76 cv
1491.53 1747.78 1487.28 1746.64 1483.09 1745.32 cv
1480.94 1744.64 1478.81 1743.91 1476.7 1743.14 cv
1475.73 1742.78 1474.77 1742.41 1473.81 1742.04 cv
1473.38 1741.86 1472.94 1741.69 1472.51 1741.51 cv
1472.25 1741.41 1471.99 1741.3 1471.73 1741.19 cv
1471.66 1741.16 1471.59 1741.14 1471.54 1741.12 cv
1471.51 1741.11 1471.49 1741.09 1471.45 1741.08 cv
1463.37 1737.59 1455.64 1733.35 1448.46 1728.24 cv
1447.52 1727.57 1446.58 1726.87 1445.65 1726.18 cv
1445.5 1726.06 1445.34 1725.94 1445.19 1725.82 cv
1445.17 1725.81 1445.16 1725.8 1445.15 1725.8 cv
1445.14 1725.79 1445.13 1725.78 1445.12 1725.77 cv
1444.58 1725.34 1444.04 1724.92 1443.5 1724.49 cv
1441.73 1723.05 1439.99 1721.56 1438.29 1720.03 cv
1434.69 1716.76 1431.29 1713.29 1428.08 1709.65 cv
1426.43 1707.78 1424.84 1705.87 1423.29 1703.92 cv
1423.09 1703.66 1422.88 1703.4 1422.68 1703.14 cv
1422.65 1703.1 1422.62 1703.06 1422.6 1703.03 cv
1422.58 1703 1422.56 1702.98 1422.53 1702.95 cv
1422.19 1702.5 1421.85 1702.06 1421.52 1701.61 cv
1420.64 1700.43 1419.77 1699.24 1418.93 1698.04 cv
1415.77 1693.56 1412.85 1688.93 1410.14 1684.17 cv
1403.69 1672.88 1398.78 1661.82 1394.42 1650.03 cv
1382.65 1618.22 1375.98 1584.62 1371.24 1551.12 cv
1364.43 1502.88 1361.9 1454.04 1360.92 1405.37 cv
1360.63 1390.96 1360.5 1376.54 1360.5 1362.13 cv
1360.5 1356.89 1360.62 1351.65 1360.92 1346.42 cv
1361.06 1343.96 1361.24 1341.49 1361.47 1339.03 cv
1361.58 1337.86 1361.7 1336.7 1361.83 1335.53 cv
1361.89 1334.96 1361.96 1334.39 1362.03 1333.81 cv
1362.06 1333.61 1362.17 1332.7 1362.2 1332.47 cv
1363.38 1323.88 1365.26 1315.35 1368.28 1307.21 cv
1368.62 1306.27 1368.99 1305.35 1369.36 1304.42 cv
1369.43 1304.25 1369.5 1304.09 1369.56 1303.92 cv
1369.57 1303.92 1369.57 1303.91 1369.57 1303.91 cv
1369.81 1303.35 1370.05 1302.8 1370.3 1302.25 cv
1371.14 1300.43 1372.03 1298.63 1373 1296.87 cv
1373.93 1295.17 1374.92 1293.5 1375.97 1291.88 cv
1376.5 1291.07 1377.04 1290.27 1377.59 1289.48 cv
1377.87 1289.08 1378.15 1288.69 1378.44 1288.3 cv
1378.54 1288.16 1379.06 1287.48 1379.2 1287.29 cv
1381.64 1284.17 1384.32 1281.25 1387.2 1278.55 cv
1388.69 1277.17 1390.22 1275.84 1391.8 1274.57 cv
1391.95 1274.45 1392.53 1273.99 1392.72 1273.84 cv
1392.91 1273.69 1393.53 1273.23 1393.68 1273.11 cv
1394.58 1272.45 1395.49 1271.8 1396.41 1271.17 cv
1404.35 1265.72 1413.13 1261.51 1421.47 1258.39 cv
1432.54 1254.24 1444.04 1251.27 1455.62 1248.94 cv
1488 1242.41 1521.26 1240.44 1554.21 1239.37 cv
1576.55 1238.65 1598.94 1238.42 1621.29 1238.71 cv
1641.6 1238.97 1661.94 1239.7 1682.13 1241.87 cv
1706.44 1244.48 1732.9 1248.69 1752.56 1263.59 cv
1752.59 1263.62 1752.61 1263.63 1752.64 1263.65 cv
1752.66 1263.67 1752.7 1263.7 1752.76 1263.75 cv
1753 1263.94 1753.25 1264.14 1753.49 1264.34 cv
1753.88 1264.65 1754.27 1264.98 1754.65 1265.3 cv
1755.59 1266.1 1756.5 1266.93 1757.39 1267.79 cv
1758.21 1268.58 1759.01 1269.4 1759.77 1270.25 cv
1760.12 1270.63 1760.46 1271.03 1760.79 1271.43 cv
1760.94 1271.6 1761.68 1272.54 1761.7 1272.56 cv
1764.86 1276.76 1767.39 1281.46 1769.43 1286.3 cv
1774.24 1297.65 1777.08 1311.39 1779.02 1324.08 cv
1784.25 1358.42 1784.56 1393.5 1785.83 1428.15 cv
1787.23 1466.43 1788.84 1504.88 1795.03 1542.74 cv
1796.47 1551.51 1798.17 1560.25 1800.25 1568.9 cv
1800.88 1571.5 1801.32 1573.79 1803.68 1575.28 cv
1804.85 1576.01 1806.06 1576.66 1807.28 1577.31 cv
1820.31 1584.3 1834.73 1589.07 1849.34 1591.32 cv
1857.47 1592.57 1865.66 1593.07 1873.84 1592.72 cv
1873.33 1593.64 1872.81 1594.56 1872.28 1595.48 cv
1868.32 1602.26 1863.93 1608.8 1859.31 1615.16 cv
cp
1369.55 1303.96 mo
1369.32 1304.51 1369.47 1304.15 1369.55 1303.96 cv
1369.55 1303.96 li
cp
1880.86 1583.73 mo
1857.23 1586.21 1832.74 1581.24 1811.85 1570.14 cv
1810.86 1569.61 1809.87 1569.06 1808.9 1568.5 cv
1800.81 1535.69 1797.92 1501.78 1796.07 1468.12 cv
1794.18 1433.7 1793.76 1399.21 1791.56 1364.8 cv
1790.6 1349.83 1789.28 1334.86 1786.92 1320.04 cv
1785.02 1308.07 1782.46 1296.03 1777.91 1284.76 cv
1774.19 1275.56 1769.22 1266.97 1761.77 1260.28 cv
1754.5 1253.76 1746.01 1249.04 1737.01 1245.38 cv
1725.86 1240.84 1714.02 1238.09 1702.17 1236.1 cv
1686 1233.38 1669.63 1232 1653.27 1231.18 cv
1613.48 1229.18 1573.36 1229.69 1533.59 1231.74 cv
1504.66 1233.24 1475.48 1235.73 1447.16 1242.07 cv
1428.14 1246.33 1408.83 1252.51 1392.56 1263.54 cv
1379.65 1272.3 1369.18 1284.13 1362.77 1298.42 cv
1355.78 1314.02 1353.2 1331.1 1352.34 1348.06 cv
1352.11 1352.75 1352.01 1357.44 1352.01 1362.13 cv
1352.02 1415.74 1353.6 1469.49 1359.28 1522.83 cv
1363.26 1560.18 1369.07 1597.68 1380.01 1633.7 cv
1387.48 1658.31 1397.47 1682.74 1412.59 1703.71 cv
1424.14 1719.74 1438.66 1733.47 1456.04 1743 cv
1472 1751.76 1489.66 1756.85 1507.59 1759.61 cv
1526.94 1762.58 1546.53 1763.23 1566.07 1763.36 cv
1609.39 1763.64 1652.39 1758.68 1693.68 1745.13 cv
1729.93 1733.24 1764.16 1715.42 1794.6 1692.42 cv
1817.63 1675.04 1838.62 1654.96 1856.69 1632.46 cv
1866.5 1620.24 1876.25 1607.25 1883.22 1593.14 cv
1883.86 1591.84 1884.57 1590.5 1884.95 1589.1 cv
1885.62 1586.67 1883.66 1583.43 1880.86 1583.73 cv
cp
f
1402.46 1331.57 mo
1402.46 1331.57 1402.46 1331.58 1402.46 1331.58 cv
1402.49 1331.51 1402.54 1331.39 1402.59 1331.27 cv
1402.58 1331.3 1402.56 1331.33 1402.55 1331.36 cv
1402.52 1331.43 1402.49 1331.5 1402.46 1331.57 cv
cp
f
1395.34 1359.33 mo
1395.35 1359.27 1395.36 1359.21 1395.37 1359.15 cv
1395.43 1358.69 1395.38 1359.07 1395.34 1359.33 cv
cp
1423.25 1304.03 mo
1427.51 1300.81 1432.13 1298.1 1436.97 1295.85 cv
1437.56 1295.57 1438.16 1295.3 1438.76 1295.04 cv
1438.91 1294.98 1439.06 1294.91 1439.2 1294.85 cv
1439.51 1294.72 1439.81 1294.6 1440.12 1294.47 cv
1441.48 1293.92 1442.86 1293.41 1444.25 1292.92 cv
1447.22 1291.88 1450.24 1290.99 1453.3 1290.22 cv
1454.89 1289.82 1456.48 1289.45 1458.09 1289.11 cv
1460.26 1288.65 1461.73 1285.98 1461.05 1283.89 cv
1460.31 1281.59 1458.16 1280.44 1455.83 1280.93 cv
1443.95 1283.43 1432.19 1287.67 1422.08 1294.48 cv
1413.27 1300.41 1405.85 1308.11 1400.32 1317.17 cv
1395.02 1325.85 1391.49 1335.58 1389.25 1345.47 cv
1386.84 1356.06 1385.78 1366.95 1385.4 1377.79 cv
1384.87 1393.09 1385.7 1408.41 1386.65 1423.68 cv
1386.78 1425.74 1386.91 1427.79 1387.04 1429.85 cv
1387.18 1432.06 1388.89 1434.2 1391.29 1434.09 cv
1393.46 1433.99 1395.68 1432.22 1395.53 1429.85 cv
1394.53 1414.07 1393.5 1398.27 1393.77 1382.46 cv
1393.86 1377.08 1394.11 1371.71 1394.58 1366.35 cv
1394.7 1365.06 1394.82 1363.76 1394.97 1362.48 cv
1395.03 1361.88 1395.1 1361.28 1395.18 1360.68 cv
1395.22 1360.34 1395.26 1360 1395.3 1359.66 cv
1395.31 1359.59 1395.32 1359.51 1395.33 1359.43 cv
1395.74 1356.92 1396.08 1354.39 1396.56 1351.88 cv
1397.5 1347 1398.71 1342.16 1400.28 1337.44 cv
1400.67 1336.29 1401.07 1335.15 1401.5 1334.02 cv
1401.71 1333.46 1401.93 1332.9 1402.15 1332.34 cv
1402.25 1332.09 1402.35 1331.84 1402.46 1331.58 cv
1402.41 1331.69 1402.41 1331.68 1402.55 1331.37 cv
1402.55 1331.36 1402.55 1331.36 1402.55 1331.36 cv
1402.58 1331.28 1402.62 1331.2 1402.65 1331.12 cv
1402.63 1331.17 1402.61 1331.22 1402.59 1331.27 cv
1403.53 1329.13 1404.53 1327.01 1405.64 1324.95 cv
1406.78 1322.83 1408.02 1320.77 1409.37 1318.77 cv
1410.03 1317.79 1410.72 1316.82 1411.43 1315.88 cv
1411.47 1315.83 1411.55 1315.72 1411.63 1315.61 cv
1411.76 1315.44 1411.96 1315.2 1412 1315.14 cv
1412.37 1314.67 1412.75 1314.21 1413.13 1313.76 cv
1414.71 1311.88 1416.39 1310.1 1418.16 1308.41 cv
1419.05 1307.56 1419.96 1306.74 1420.9 1305.94 cv
1421.37 1305.54 1421.85 1305.14 1422.33 1304.75 cv
1422.55 1304.58 1422.77 1304.4 1423 1304.22 cv
1423.1 1304.15 1423.22 1304.05 1423.25 1304.03 cv
cp
f
1507.86 1282.09 mo
1511.43 1281.35 1515 1280.59 1518.57 1279.91 cv
1520.33 1279.57 1522.09 1279.25 1523.85 1278.97 cv
1524.73 1278.82 1525.62 1278.69 1526.5 1278.56 cv
1526.61 1278.54 1527.09 1278.48 1527.23 1278.46 cv
1527.7 1278.4 1528.17 1278.34 1528.65 1278.29 cv
1530.84 1278.03 1533 1276.52 1532.89 1274.04 cv
1532.8 1271.97 1531.01 1269.53 1528.65 1269.8 cv
1520.88 1270.71 1513.25 1272.33 1505.61 1273.9 cv
1503.43 1274.35 1501.97 1277.04 1502.64 1279.12 cv
1503.39 1281.43 1505.53 1282.57 1507.86 1282.09 cv
cp
f
1524.6 1714.57 mo
1524.59 1714.57 1524.58 1714.57 1524.56 1714.56 cv
1524.57 1714.57 1524.58 1714.57 1524.6 1714.57 cv
1524.6 1714.57 1524.6 1714.57 1524.6 1714.57 cv
cp
f
1532.81 1715.57 mo
1530.39 1715.3 1527.97 1715.01 1525.56 1714.7 cv
1525.29 1714.66 1525.01 1714.63 1524.74 1714.59 cv
1524.69 1714.58 1524.65 1714.58 1524.6 1714.57 cv
1524.62 1714.57 1524.63 1714.58 1524.64 1714.58 cv
1524.63 1714.57 1524.61 1714.57 1524.6 1714.57 cv
1524.51 1714.56 1524.42 1714.55 1524.33 1714.53 cv
1523.69 1714.45 1524.32 1714.53 1524.56 1714.56 cv
1524 1714.46 1523.43 1714.41 1522.87 1714.33 cv
1521.64 1714.16 1520.41 1713.98 1519.19 1713.79 cv
1514.41 1713.07 1509.66 1712.23 1504.93 1711.24 cv
1495.82 1709.33 1486.81 1706.86 1478.16 1703.41 cv
1477.64 1703.21 1477.13 1703 1476.61 1702.78 cv
1476.61 1702.78 1476.6 1702.78 1476.6 1702.78 cv
1476.32 1702.65 1476.03 1702.54 1475.74 1702.41 cv
1474.73 1701.97 1473.73 1701.52 1472.74 1701.05 cv
1470.73 1700.1 1468.75 1699.09 1466.81 1698.01 cv
1464.9 1696.95 1463.02 1695.82 1461.19 1694.61 cv
1460.3 1694.03 1459.42 1693.42 1458.56 1692.8 cv
1458.12 1692.5 1457.69 1692.18 1457.27 1691.87 cv
1457.07 1691.72 1456.88 1691.57 1456.68 1691.42 cv
1456.67 1691.41 1456.66 1691.41 1456.65 1691.4 cv
1456.62 1691.38 1456.6 1691.36 1456.57 1691.34 cv
1453.22 1688.67 1450.08 1685.76 1447.24 1682.55 cv
1446.51 1681.72 1445.79 1680.87 1445.1 1680.01 cv
1444.99 1679.87 1444.88 1679.73 1444.77 1679.59 cv
1444.72 1679.53 1444.67 1679.46 1444.63 1679.4 cv
1444.3 1678.97 1443.98 1678.53 1443.67 1678.1 cv
1442.38 1676.28 1441.17 1674.41 1440.06 1672.47 cv
1438.92 1670.48 1437.88 1668.43 1436.95 1666.34 cv
1436.84 1666.09 1436.73 1665.85 1436.63 1665.61 cv
1436.61 1665.57 1436.6 1665.55 1436.59 1665.52 cv
1436.59 1665.52 1436.59 1665.52 1436.59 1665.52 cv
1436.37 1664.98 1436.15 1664.44 1435.94 1663.89 cv
1435.49 1662.74 1435.08 1661.58 1434.69 1660.41 cv
1433.91 1658.02 1433.24 1655.6 1432.68 1653.15 cv
1432.11 1650.65 1431.48 1648.03 1431.27 1645.47 cv
1431.26 1645.38 1431.25 1645.29 1431.24 1645.18 cv
1431.2 1644.87 1431.16 1644.56 1431.12 1644.25 cv
1431.04 1643.51 1430.96 1642.77 1430.89 1642.03 cv
1430.68 1639.82 1429.09 1637.67 1426.65 1637.78 cv
1424.53 1637.88 1422.18 1639.66 1422.41 1642.03 cv
1423.44 1652.91 1426 1663.54 1430.91 1673.35 cv
1435.03 1681.6 1440.87 1689.04 1447.84 1695.08 cv
1454.86 1701.17 1462.85 1705.98 1471.34 1709.69 cv
1480.28 1713.6 1489.6 1716.48 1499.1 1718.65 cv
1509 1720.9 1519.04 1722.41 1529.11 1723.63 cv
1530.34 1723.78 1531.58 1723.92 1532.81 1724.06 cv
1535.02 1724.31 1537.15 1721.93 1537.05 1719.81 cv
1536.94 1717.3 1535.18 1715.84 1532.81 1715.57 cv
cp
f
1592.02 1718.09 mo
1584.72 1718.1 1577.45 1717.38 1570.18 1716.83 cv
1567.96 1716.66 1565.84 1718.9 1565.94 1721.07 cv
1566.05 1723.52 1567.8 1725.14 1570.18 1725.32 cv
1577.45 1725.87 1584.72 1726.59 1592.02 1726.58 cv
1594.24 1726.58 1596.37 1724.63 1596.27 1722.34 cv
1596.17 1720.04 1594.4 1718.09 1592.02 1718.09 cv
cp
f
1652.77 1703.72 mo
1643.67 1706.69 1634.67 1710.04 1625.22 1711.78 cv
1623.03 1712.18 1621.59 1714.95 1622.25 1717 cv
1623.01 1719.34 1625.13 1720.4 1627.47 1719.96 cv
1636.92 1718.23 1645.92 1714.88 1655.03 1711.9 cv
1657.13 1711.21 1658.72 1708.93 1657.99 1706.68 cv
1657.31 1704.58 1655.03 1702.98 1652.77 1703.72 cv
cp
f
1828.51 2116 mo
1828.49 2136.38 1825.29 2159.18 1809.87 2173.82 cv
1798.98 2184.16 1783.24 2188.4 1768.76 2190.22 cv
1760.98 2191.19 1753.16 2191.67 1745.35 2192.21 cv
1741.78 2192.46 1738.2 2192.72 1734.63 2193.08 cv
1731.72 2193.37 1728.65 2193.34 1726.42 2195.41 cv
1721.73 2199.75 1717.71 2205 1714.06 2210.23 cv
1707.31 2219.91 1702.05 2230.78 1698.96 2242.18 cv
1697.98 2245.79 1697.24 2249.47 1696.71 2253.17 cv
1689.35 2244.15 1684.24 2233.53 1681.24 2222.18 cv
1679.44 2215.34 1678.28 2209.47 1678.31 2202.55 cv
1678.31 2200.24 1676.35 2198.34 1674.06 2198.31 cv
1661.63 2198.14 1649.21 2199.22 1636.85 2200.42 cv
1618.84 2202.17 1600.86 2204.3 1582.86 2206.22 cv
1557.02 2208.98 1531.15 2211.44 1505.24 2213.5 cv
1468.9 2216.4 1432.5 2218.56 1396.07 2220.16 cv
1389.9 2220.43 1383.65 2221.02 1377.47 2220.53 cv
1375.08 2220.33 1375.17 2220.34 1372.98 2219.94 cv
1371.31 2219.63 1369.65 2219.25 1368.01 2218.8 cv
1366.31 2218.32 1364.63 2217.78 1362.98 2217.15 cv
1362.58 2217 1362.18 2216.85 1361.78 2216.69 cv
1361.59 2216.62 1361.4 2216.54 1361.21 2216.46 cv
1360.38 2216.1 1359.55 2215.72 1358.73 2215.33 cv
1355.43 2213.74 1352.26 2211.87 1349.24 2209.8 cv
1346.05 2207.61 1344.01 2205.99 1340.9 2203.19 cv
1337.88 2200.48 1335.02 2197.58 1332.31 2194.56 cv
1326.48 2188.06 1321.8 2181.6 1317.03 2174.05 cv
1306.39 2157.24 1298.14 2139.03 1291.22 2120.46 cv
1283.56 2099.88 1277.49 2078.72 1272.55 2057.34 cv
1267.75 2036.57 1263.96 2015.36 1261.38 1994.36 cv
1259.1 1975.68 1257.61 1956.85 1257.61 1938.01 cv
1257.61 1930.43 1257.86 1922.84 1258.55 1915.29 cv
1258.7 1913.63 1258.88 1911.96 1259.08 1910.3 cv
1259.12 1910.01 1259.16 1909.72 1259.19 1909.43 cv
1259.22 1909.24 1259.26 1908.92 1259.28 1908.81 cv
1259.4 1908.02 1259.51 1907.23 1259.64 1906.44 cv
1260.08 1903.68 1260.63 1900.92 1261.32 1898.2 cv
1261.91 1895.92 1262.63 1893.7 1263.48 1891.51 cv
1263.57 1891.31 1263.65 1891.1 1263.75 1890.9 cv
1263.95 1890.47 1264.16 1890.05 1264.38 1889.63 cv
1264.8 1888.82 1265.28 1888.07 1265.77 1887.3 cv
1265.83 1887.2 1265.91 1887.1 1265.98 1887.01 cv
1266.23 1886.73 1266.47 1886.44 1266.73 1886.17 cv
1267.01 1885.87 1267.3 1885.59 1267.59 1885.31 cv
1268.16 1884.75 1268.73 1884.19 1269.31 1883.64 cv
1270.58 1882.43 1271.89 1881.27 1273.25 1880.16 cv
1273.61 1879.86 1273.98 1879.57 1274.34 1879.28 cv
1274.5 1879.16 1274.65 1879.04 1274.81 1878.92 cv
1275.67 1878.29 1276.53 1877.67 1277.41 1877.07 cv
1281.93 1874.02 1286.79 1871.49 1291.78 1869.29 cv
1292.15 1869.13 1292.52 1868.97 1292.89 1868.81 cv
1292.95 1868.78 1293 1868.76 1293.05 1868.74 cv
1293.1 1868.72 1293.17 1868.69 1293.26 1868.65 cv
1294.08 1868.32 1294.9 1867.98 1295.73 1867.66 cv
1297.48 1866.97 1299.24 1866.32 1301.01 1865.69 cv
1305.17 1864.23 1309.37 1862.92 1313.61 1861.72 cv
1324.72 1858.57 1336.03 1856.14 1347.38 1854.05 cv
1363.36 1851.12 1378.41 1849.04 1394.15 1847.21 cv
1415.58 1844.72 1437.07 1842.87 1458.59 1841.37 cv
1486.54 1839.42 1514.53 1838.08 1542.54 1837.08 cv
1577.78 1835.82 1613.04 1835.12 1648.31 1834.76 cv
1668.42 1834.55 1688.54 1834.46 1708.66 1834.46 cv
1731.16 1834.52 1753.69 1839.27 1772.74 1851.68 cv
1789.65 1862.69 1802.16 1879 1810.7 1897.11 cv
1832.26 1942.83 1828.51 1995 1828.51 2044.12 cv
1828.51 2068.08 1828.53 2092.04 1828.51 2116 cv
cp
1837 2094.89 mo
1837 2069.43 1837 2043.97 1837 2018.51 cv
1837 1993.92 1837.3 1969.47 1833.48 1945.11 cv
1830.39 1925.3 1824.86 1905.7 1815.57 1887.87 cv
1807.08 1871.55 1795.19 1857.09 1780.12 1846.45 cv
1763.88 1834.97 1744.59 1828.89 1724.94 1826.81 cv
1719.53 1826.24 1714.1 1825.99 1708.66 1825.97 cv
1669.01 1825.98 1629.37 1826.32 1589.73 1827.22 cv
1558.1 1827.94 1526.47 1829.01 1494.88 1830.68 cv
1470.29 1831.97 1445.72 1833.62 1421.2 1835.91 cv
1402.45 1837.65 1383.73 1839.77 1365.1 1842.56 cv
1351.66 1844.57 1338.26 1846.94 1325.02 1850.02 cv
1315.72 1852.19 1306.48 1854.71 1297.5 1857.96 cv
1291.05 1860.29 1284.68 1862.97 1278.7 1866.32 cv
1274.51 1868.67 1270.56 1871.39 1266.87 1874.47 cv
1263.64 1877.15 1260.25 1880.13 1257.99 1883.69 cv
1252.16 1892.9 1250.96 1905.26 1250.01 1915.83 cv
1248.53 1932.52 1249 1949.4 1250.16 1966.09 cv
1251.61 1987.02 1254.34 2007.86 1258.01 2028.51 cv
1261.92 2050.44 1266.94 2072.19 1273.31 2093.54 cv
1279.47 2114.2 1286.89 2134.56 1296.28 2153.98 cv
1304.41 2170.81 1314.15 2187.15 1326.74 2201.04 cv
1337.18 2212.57 1350.11 2222.49 1365.23 2226.83 cv
1374.54 2229.51 1383.72 2229.19 1393.31 2228.77 cv
1413.18 2227.91 1433.04 2226.89 1452.89 2225.67 cv
1484.23 2223.75 1515.55 2221.33 1546.81 2218.36 cv
1568.73 2216.27 1590.63 2213.87 1612.52 2211.47 cv
1627.49 2209.83 1642.47 2208.11 1657.5 2207.23 cv
1661.65 2206.99 1665.81 2206.82 1669.97 2206.79 cv
1670.37 2212.95 1671.63 2219.18 1673.22 2225.05 cv
1677.42 2240.53 1685.36 2254.97 1697.06 2266.04 cv
1699.78 2268.61 1704.16 2266.73 1704.3 2263.03 cv
1704.93 2246.73 1710.52 2231.16 1719.36 2217.53 cv
1722.99 2211.93 1727.05 2206.5 1731.95 2201.86 cv
1758.45 2198.72 1788.05 2201.16 1810.54 2184.28 cv
1824.41 2173.86 1831.94 2158.05 1834.94 2141.24 cv
1837.67 2125.96 1837 2110.34 1837 2094.89 cv
cp
f
1789.19 2128.92 mo
1789.23 2128.87 1789.27 2128.82 1789.31 2128.78 cv
1789.27 2128.83 1789.23 2128.88 1789.19 2128.92 cv
cp
1789.1 2129.04 mo
1789.09 2129.06 1789.08 2129.07 1789.07 2129.09 cv
1788.78 2129.48 1788.92 2129.27 1789.1 2129.04 cv
cp
1801.37 2068.75 mo
1800.99 2066.55 1798.18 2065.12 1796.15 2065.78 cv
1793.79 2066.55 1792.78 2068.65 1793.19 2071 cv
1793.77 2074.38 1794.3 2077.77 1794.76 2081.17 cv
1794.78 2081.32 1794.81 2081.54 1794.83 2081.67 cv
1794.88 2082.04 1794.92 2082.41 1794.97 2082.78 cv
1795.07 2083.57 1795.16 2084.35 1795.25 2085.14 cv
1795.42 2086.65 1795.57 2088.17 1795.7 2089.69 cv
1796.15 2094.84 1796.38 2100.03 1796.17 2105.2 cv
1796.08 2107.31 1795.92 2109.41 1795.66 2111.49 cv
1795.66 2111.51 1795.66 2111.54 1795.66 2111.56 cv
1795.64 2111.69 1795.62 2111.82 1795.6 2111.95 cv
1795.53 2112.43 1795.45 2112.9 1795.37 2113.38 cv
1795.21 2114.3 1795.02 2115.21 1794.82 2116.12 cv
1794.42 2117.83 1793.95 2119.51 1793.36 2121.16 cv
1793.23 2121.53 1793.09 2121.89 1792.95 2122.25 cv
1792.9 2122.38 1792.85 2122.5 1792.8 2122.63 cv
1792.48 2123.33 1792.16 2124.03 1791.81 2124.71 cv
1791.09 2126.08 1790.29 2127.41 1789.38 2128.66 cv
1789.3 2128.77 1789.22 2128.88 1789.14 2128.99 cv
1788.96 2129.21 1788.78 2129.44 1788.59 2129.66 cv
1788.11 2130.24 1787.6 2130.8 1787.07 2131.33 cv
1786.54 2131.88 1785.99 2132.4 1785.43 2132.9 cv
1785.17 2133.13 1784.9 2133.36 1784.63 2133.58 cv
1784.51 2133.68 1784.38 2133.78 1784.26 2133.88 cv
1783.05 2134.75 1781.83 2135.6 1780.54 2136.36 cv
1779.12 2137.19 1777.64 2137.93 1776.13 2138.6 cv
1776.01 2138.66 1775.88 2138.71 1775.76 2138.77 cv
1775.8 2138.75 1775.84 2138.74 1775.88 2138.72 cv
1775.82 2138.74 1775.77 2138.77 1775.71 2138.79 cv
1775.67 2138.81 1775.63 2138.82 1775.59 2138.84 cv
1775.15 2139.04 1775.3 2138.96 1775.57 2138.85 cv
1775.26 2138.97 1774.97 2139.1 1774.66 2139.21 cv
1773.83 2139.54 1772.99 2139.84 1772.15 2140.13 cv
1768.48 2141.39 1764.72 2142.35 1760.93 2143.14 cv
1758.8 2143.58 1756.66 2143.97 1754.51 2144.33 cv
1753.38 2144.51 1752.24 2144.69 1751.11 2144.86 cv
1750.57 2144.94 1750.03 2145.01 1749.5 2145.09 cv
1749.22 2145.13 1748.95 2145.16 1748.68 2145.2 cv
1748.66 2145.2 1748.65 2145.21 1748.63 2145.21 cv
1748.61 2145.21 1748.59 2145.21 1748.57 2145.22 cv
1743.49 2145.88 1738.39 2146.42 1733.29 2146.9 cv
1731.9 2147.03 1730.51 2147.16 1729.12 2147.28 cv
1726.91 2147.48 1724.76 2149.09 1724.87 2151.53 cv
1724.97 2153.66 1726.75 2155.98 1729.12 2155.77 cv
1739.54 2154.84 1749.99 2153.82 1760.29 2151.89 cv
1768.08 2150.44 1775.87 2148.38 1782.94 2144.72 cv
1789.08 2141.54 1794.41 2136.88 1798.03 2130.96 cv
1802.12 2124.25 1803.8 2116.41 1804.44 2108.67 cv
1805.4 2097.12 1804.01 2085.42 1802.24 2074.02 cv
1801.96 2072.26 1801.67 2070.5 1801.37 2068.75 cv
cp
f
1775.76 2138.77 mo
1775.69 2138.79 1775.63 2138.82 1775.57 2138.85 cv
1775.61 2138.83 1775.66 2138.81 1775.71 2138.79 cv
1775.73 2138.78 1775.74 2138.78 1775.76 2138.77 cv
cp
f
1289.6 1905.74 mo
1289.66 1905.69 1289.73 1905.64 1289.79 1905.59 cv
1289.67 1905.71 1289.05 1906.15 1289.6 1905.74 cv
cp
1302.65 1888.25 mo
1296.59 1891.19 1290.58 1894.4 1285.21 1898.49 cv
1280.95 1901.72 1277.05 1905.41 1274.29 1910.04 cv
1269 1918.92 1269.35 1929.48 1270.65 1939.39 cv
1271.78 1947.9 1273.4 1956.34 1274.82 1964.81 cv
1275.19 1967.01 1278.01 1968.43 1280.04 1967.77 cv
1282.41 1967.01 1283.4 1964.91 1283 1962.56 cv
1281.8 1955.33 1280.43 1948.13 1279.36 1940.89 cv
1279.31 1940.52 1279.25 1940.16 1279.2 1939.79 cv
1279.19 1939.73 1279.16 1939.49 1279.13 1939.27 cv
1279.11 1939.11 1279.04 1938.59 1279.02 1938.48 cv
1278.97 1938.04 1278.91 1937.6 1278.86 1937.15 cv
1278.7 1935.79 1278.57 1934.42 1278.47 1933.04 cv
1278.29 1930.58 1278.21 1928.1 1278.35 1925.63 cv
1278.38 1925.12 1278.42 1924.62 1278.47 1924.12 cv
1278.49 1923.85 1278.52 1923.59 1278.55 1923.32 cv
1278.73 1922.32 1278.9 1921.33 1279.14 1920.36 cv
1279.38 1919.42 1279.67 1918.49 1280.01 1917.58 cv
1280.08 1917.39 1280.15 1917.2 1280.23 1917 cv
1280.44 1916.55 1280.65 1916.1 1280.88 1915.66 cv
1281.35 1914.74 1281.88 1913.86 1282.46 1913.01 cv
1282.71 1912.63 1282.99 1912.27 1283.25 1911.9 cv
1283.25 1911.89 1283.26 1911.89 1283.26 1911.89 cv
1283.44 1911.66 1283.63 1911.43 1283.82 1911.21 cv
1285.38 1909.38 1287.14 1907.73 1289 1906.22 cv
1289.21 1906.05 1289.67 1905.81 1289.81 1905.58 cv
1289.88 1905.52 1289.96 1905.47 1290.04 1905.41 cv
1290.68 1904.93 1291.33 1904.47 1291.98 1904.02 cv
1293.36 1903.07 1294.78 1902.17 1296.21 1901.31 cv
1299.69 1899.22 1303.29 1897.35 1306.93 1895.58 cv
1308.94 1894.61 1309.63 1891.6 1308.46 1889.78 cv
1307.13 1887.72 1304.79 1887.21 1302.65 1888.25 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 23.1.1%%For: (Vova Hryshchenko) ()%%Title: (Lunarts_21-08-2020-1_13.eps)%%CreationDate: 24.08.2020 18:06%%Canvassize: 16383%AI9_DataStream%Gb",Kq*O)`o'lAT^&s0>Lg]qqQ!I6d'\q:?!?t0ujd\-ua7%]rWpTif"Z#8d.!W7CB25C)0@dI3G7q)<C3CObUJ[&?s(o5t/0ct?%0/)oL<e*hC<L:AT6fULOO$VhnXN:'rQ&mQ?4LBp6Kl117F>>GSTXWZ1ZY$Z">HZThXl2=gb&Bjlh<MD:q6qkXdgFVOD^6Vm-]ORd%1g>+)j,u_;_Y@cloWepCTK-='=FO#q!Kttp*LIF\%*7:`K;a2X!0TR\q[:)RZo]kAA!i6G5@?rY'(%WY2`1qtY-qRdr:.Tt='RCm%h-,RDkSdjFA]O7k*WiLN-3DnsOT`S+j:>c!Tta^+&*WruZM=G#gA<D5k$5Pl+N%_FE?'S*pEdg*LiA]enC]Ppqf%_.H9&[qXD&]G%0TBS0O9i<1.3ru)4SmfI!Bd#+<g\ue\UpP*L'.\`6;S5aj1#XJpTOmMf)IMt^UII'\lR<bPb!q;-YrV_^2]m_\2[f,67So(o]ATO%VRJ/s7L,5U6BFfBEafgW)N`bC,$EA#LM[0XIjm]ZCR+Q&Lo4DA,"&eD$=hmQmFKb?%isblV$!5Fog[6>+qkE+Jgc:S7NfPuLH$&M%KF%sh&?mpIU]=M^H7Y:c!cMSM2$3K,^%I,27IatT0$d]jfk>1NWo+5aW^J0,TOefB!\8=EL&OGq#q<<tC@<gH2(V"jUGj_R=RJ1m%@M=,9FHV>d'9-JFX<T7Ln1+hYhZ.5dR:U]JInf>ro59bT5^kqiRXf63Yg9.EE^tE#e@KVbTOi;9WCG!7njSFJ??]]>KoXgf[ME.]%q,d@MGPN:F-m!ViH/Jl$/$\`MaAA6P!?CNc*8Yne)hMn^?j@,Er%.tTUc?!qIJ:biBh$Q9EGD^S/_rj66;-mUpYY5;60H)V%%9D"%$qKK4F-;s-]L3Nl&1dn@^Ch(/n5gB1[')mX0>1sUEHKq%o\hS`XeE.-"TCWG^'p!0=_6ILKoJ%(m%S9V5HkaY7@uT`0JZBkn(]mi%1!"_U\7>He>P.p]V]sc29ckd#1u<BE^p-$0OEB_MWKPbp,18c,<iK9)9>#i/$>Ia66YEHGVbm2]#,bc)bMds#o4H6\f*?qc_h/Q`%$Nn))3,8Rh?Wq,EE(O$SA^`T($5$tsiXOHr:gML"7kp*!_1ILPnkX%DN'^7brb-Lt#L].pTFG\IU9/=Fil[[$NDa:i!BWa2[nNbe%&Z5-URu#Fd_bpc`[`H-RF-Kqnh&;H8L]`*i8S1MG``WBr.\fr@T54_P&'Qd@/^$i[7#KV,66e9g$s>ib!H+?$keBYZ^Wg[CK!h,D%bZW*5d<Ulb(IWXA6qjZ3N,hR,<fFoaV1Z+"bb!GID<>0/8<E'9`.h$R2Z%lO9lkhZ28)k'rs$nt;eE-2p'__)@2^+B*GON?g7<+O%cR(H7#ADST=oj40UP9-e0n%;sN$)><)0lJ$hQdKk7*tuF3@:nrLm.dA"+Qdune7p[CKN>10Jce=CNOY:`V(8q4"qEO2mDl&8I@BT%>;?33;9tsI3mRH>(S;iR[g1U&i8j*kAa$8_eH)`r&A,=&^N=<ED;LeY:E`NNbICEb]LQc9Qulimjnkr^CV[%p/0;"sp]\O@Z*YB_%[BpO)6H,l<>C$D?F0<beUGKE8s)`]tA@o,-@i<;PGAUrc_a\ngk:`sgV+;?W-s&H>cl-)Y@);%i]T&>TibtUEWD"\V6MkjC*)Q.N%o\'7#Rkt(!IHEc.@-3U$F/7BgB[?$E$B3td&eO6TBeW*cD_(3L-)F"g&1QC.VeHE^_Z:4Q@bEfu<k\rjYFnZs&DCaM9([H/A3(W@%[UYEkEs`Y!Jqh6/#AbDIrd9V9@`58<jL)FfD!>kDi1U8M0nTDh1nhQVV5^<#]/9hb["nD?<,bc-BQWQQKoYkn'.L9J3jB]8B$=#;%nPj"rkGB,K_1X0epF#P5l^(Nu1RgG)5tu"0!;"\$.;O*2"oWru8CO-r33)@@[P=i*D)B7Hcd;<p0@Y]C=`9aGOt9=-Kg.9m&kkt>%HS_gk>hb0iBot)$&uHO@R"RoFo\C.W;G2XEX`eFtm7#1i!ARrP1/4rL/2F(UTOPJY>\$NdN+nD//Ma4'C;qNHMi>aa'f2F9"hFHR%R2jJ"G-e'Erg-s7<j\UspM\l(R\04]HCWLQ']]$s#!&RJ,TO:'J!$3Iamf3hl$TTpcF<^)&bm0Ql3"0CDAub(3hE?S$s]\\7aZcm%.t31\F"h_Am\KUmrksr_c`H,pV,COd9G$hV<8TJudi9fS%7<uT$<A8[/,``kT-`-\glInVb*dtWl%1d@>JAp1Q*c.7/SL1.(rBTm%q(Ku6T<C6?N`1cpWfaR1FKkmN]/?^UpnqgaoS*H_hRE9-\f?nK1E5_Ap+'Y_>0Kp0%qus[DsFY+SA#It^EUc6SP4K51M#(adQ>^9%^F0H1Qq!j7G#SnH1Bf^#CFNZFEpn&`OaNK6\5UF,Z_%'GWWUP)i%rN2\]HRTV4'V!8j,>YW:JE(*cXAndsCl?a-@5&;\s%elJi^k%T/o&t;/+R3`Mn<?_9lFUVc),.%X(&!_NB81c!9H2G\15ac0/[p@r)5??hJ"%P?IlOaj[dAI1bd?oN#,8[@<pF`3BAlX4@5k'3LbP%q7#>-pGbscIY75;icGfF[92QZLh?B@8^'#,d?^s8SA*sh3/9_2kO@0OoS5,)>1)Op=G.aPV_beqi&_=];\D%P7t%71IHG_c*N]6Y%4?*"I,!WEaXPeFFVn88JM>S.oBuUS0*1NX?nA(*;`u5_*k`:D`o6X<^aeLPrWj1$^'4tT_5PN7t+48cP4!*Wsd:ZJC(XGED-K_A$%Kq9?IcIoPNGm>MdXBXBBB8?NcPL-YVNgY).F86OE\<AI%46>tiq,a+HT4>(f7-\E/LHe"/G%TTa3hTnnlhM@GpOZihXjPL2=hR9g%$0#?.kZs+mheedq:%ZV>]l3FP?6X9oRl.=@j*,-2[,r@=MSU*m>jj;uU!'DT,ZbIbOriIRg4`]&.Wl33R_H<kdofY!HL5G?IEV),%BA45*/,F\!8HLc-QHI$R@e96W""/[WX2ZPP4\;2m7@m8lGC4t_FK.F"!s`:a!QV&VJ5XRl4#k\UYeHbKlKG$@M0ptr_7?)i(XSi*%rmlOW$h8t9^SA3,Bg5&ar9EHe.e7o=M$:?7^>LPk6eA1Wj">#Q!e*da3["UL0;u'5VJCoe.!4e2#mV#X[+K@_^P"[S[YbQ$Y!\=8%s"Tf';3[%f]l?ii[&:3@)#_otC[!*=T2&FlB](g0*Dk8+r1\.:CD_1A.e/9hiQpcSU4UPI(rR4a^$lJk5rbNGjspFQG7;@1U<fjd%09/=l/&X!QU@k"`jVs_BE:C<:\N'rSJ0-T91?S-M`:PHr`XbD[ZeogJos8uVU@8U%69(WHE=cT!&7TVjihM,;m.WXKiP[@mW`T!+%#9aH3i#m[T)J211>o\N"qYGgU:'>93ND\XR*/&8r_osY%n(NJ_T5tuI\E6n/^5-Rrp]<)ra+bAqrqk=GG<W,n#L!,0-LaHVci4s5%,,s`bH2Y_Rn#WP5O2l6:%pQ]\jR['\;_Q,g.c^:S0@O#?W6#69qG/$.ku9;EeA=I&%+J>sW'h!nMZ@Kum?<Rs>F;=BH2?+SBb<N\%bgXEk/^2\fR4%kia7JK^^WstO9W.`:g\dS&%BP8<37/<55H,gTWEs8ZIoSj(`[+AE^IAOCE,pWVLAL^9.9"P1iubt#WG+SgJ*01%%T1m;b'-87!91uIX@irNm]J*da_Lu9lT\[Of-;:7F/map\]%Ck[ENp_cbIHL!2I+.L\)E'WrXUE,YP1>e%Wl?<?O/A<*15Ki5o>TU%?8<GZ5Q5@UcqRg3`18U(LAL-KrMSOk0e77eT2*29U_5]N+7@95q;Uec+4YO&`II$Sp8<7qn$04W9Sd:\OahL\A9ORumX9?8aX?'I%>G"id\`]rlj,S$0Q6($05:N3gol1otp8JG+3V@BNYtpqhML9=<e/apIl;q(.X^uT(FhQhNG0Ydtq^!aRj%dj5LclP,m8(CYD4Z10%r06#eNJk,mnmq:?eRHR>(3_<Zk<$Kq4-hZGXG\+B&)Htha7<S8n=<nU:(0/N=`V`p1S_\:V-N@b/p8Z[]9J4Zb!3^q`@g9=eU\LJ%P`&hi5@0hVEfkM<hW#d?:R@k!HECfY4dDb1;6G$!I^"@ko:&M)./rDM_UE@?[oEJGl&\QUfJC#Z;D_"BDHi0i%7g[B%ZK#O"uC#5%B%<)IlSnjh`$lkenO]<@3GD>c>*P3tKa-;nQEE0T_,fmVO=(uYF8IW.XQc;CQ<r?)>?YP'f#sf5oMp%2q>NLNUL8.?Cg%OB(<%Vi%c7@AerRt&BhX-:![[;LAH\e:H9@@o3oG[XH<\^qSIT_p\DNOcGNCN<9%S4NPLnD*alPta="<$+#35L'MlGS&to'N;\J4Qg8B24<0%TP.L#-N7^GeE`o0oY/9\Cn3VabBXE\I>^P]@Ssa>e1TmuG%"B#B^NYdA<7GDU3<f?>qB_,MqZ.EFtl?UhP,2`!?FP8Mm'?oo7+Pd%(.p5_/'"$pg<4\c*<0(Qr0aZbI$4dPs(nt%MsSYM5*GBmiUFf2q7f/BR6L:HI3d^dW\5F8T?T=%bc"0UI.1rqh-&"dA2Ie4Xa/mK%B#Uc&I+_RpI9(dLiq5&_j3&EHd$]#d^Qr3O]IR4!<b>ZF/*!.PMc\%\R_T^K56%gNM56`L's20K^%c9Z=ISCG'eIhkWj?rOGpZ>F%c&LVPdg(N'IlOPirS)]&kL8P5_:6Mn5Prt1R8qY,=iE6kV7,5H6#Z!VB1?QPeG,!Lp>:\>rrjLZ<=h>EI/%S$F^=&oo:-&j4QDt^%KGE=jq34)"k>t:[#?:V<'V1c>ZHte+L*/!AVnkZTo+_jtUU`IB/AEC5*)ltT04Xs(Q%8,VZX6Z5AhkBqRhT=,.fmfj<WX77I8L<<%OUQ8Je9Fgsq!Y#PZbhJd-/];-?r77*+7c(bk2b%;+q'jG/?&&"cWbej/)=E5Tqg.59uFe->hWp2*PK0Or@-rHa645WQ([Im.AGp_%RZiN<LQFb#KOningH>%1>>M^"\$"R9363O<cp+(s_XoV1m([%AqT7>Y[seO=op6=0ZfB=T5JH0)?^]:5Qh,Dp#KG&Z;6s)6R<8`u%QXG5&!K/ngHt^d=kfl!Bl+Jb-lWkq1r@/L/OicTW.#U$XbefiGr^b!Rf59W]23@f_.[tjQQTdA8ChGUUs&8B4pnH3uY<7QGW#gDX%EINge6r'\JnT.)..%&C\6k3fm]4Zp(Y4R"pPMD''qV5,u44=8-71K)$CXC;7.mg#Dc$pUWqFR6-?\SKR89'bHI::.V81PH9dirF.%j@h@!`?Jquj@g5.VWe]J,%m@NS7ut`B=>.Dktfe^P,9n*@QI^/8^ekt=sQfa&[=lq^44QVIZ(#D#o,7f1^2S.9q*-II<H:%CXXi#%>FGX1[E+g!/8L[qrlsC8lZ<(MpcnDpqCGN!oA<61djOQ"n(q82EW=3WnhZlIrt:d_h[KJPD[cF-H>F%b7f(Z]XaEhn<4?-IA2^iI%dJ:'/Ua4U\r,D;=GDc+iB5/H8dra_p`#0FKY9HOPY;t$mmo&^t-pHP0lcnp#/&%bhDj)""`P.+mqOZT.U9]n5BMR@U&Fu_le)(lf%&#hScDRkb(;>eai2KF*teSUSYK'n^l_q:SgZC[Wjd]_cObQdmAZ%J!S[)!qLr2&(.rB0&_q\.$-=o="-H=6R5L19[eq+mf>30)=5%l,Xs'CM)P[no:\^F80JF78P`M6-4NOmm$]Kq:U,X<0,nS5>AJX4,FO+\!Y"A[l6nAJa`IOMhkpVZ2AMPb9C?i*HT;*RQ6-8bBKpl%s4Z(^B@O?hWH5*rb_s#WfD@ZGHl[UWIb\]dCeKgKTDt_/oVmo+GIC:QR*"!a3Y'+mF`oZEh1=+UIYH1s>"5Dff:BR3HnHDm2`V!)%\4A]nm]?0]q1UJkmENh.0Dgp3c`/X>+>=112IdMEB&2+CV3_Qk2IEV'I]B?)YAh_j+9$dZRtK8kEtaocepiV(W@hM`11dZV94,$r%%Gsl?okbc-CX[V"[ZsWsKT!,7I!!no9][&#EknXqhCNHgbds=U#$jrQ@"5&EblKY<:H7AkQO-X9Cn48Zbq*W/[s[/NSB$lOo,HS.%qVm%`oE]JLh]*2tj&ZK`U!h.4;fVLKNurh56I4I4ptt1hQLj&!46a]mmfm1e*,3OnR9-',o8^V!-aF4GI61L2m4X=Ibc8:GMEgW^%mmTeE+7gR&:cB]6Pr)ZO;aQid??3452:RYPYN]*u963JAT?^LnqJS!'I?AM?FrQ-n3O/u8fu:H:Z8AnnF>-Lr`%K9^%#\$UX,\Ti%PQII&c*aoJ]B%m]kd)M_hkbYg9;0hY#(XI7Wdgm]#F(T/Me*^T",duV"BD6uqbLi=^F52%F*YOd>i)(ir0P,Wif0a9juLg;p:i_A%+;#dCVe..U?')On"=Z=1Q]6au`mSQ7mjRg'VUgHNccCkGQ@+ghRFb`l<ju@SSS/J7XLDGIXWgGVni[f&):N=XUJ.f'KpaaAg*ZaP%/Q=pD^$0`pk[\)p6W<g*,`S309RY^Gr-7(QjiIH>LA\IXq5s6hl((AGPJpT)\!K"6)s6#encSO/G7TYa^d:29Ln'&VTJC,=HF'LC%:`.g;dbmM)rjgDVE3[?7A6'BJ#kUKI^^:,R(SW*H!rQ,c3(ChJXIq<gq(Kq6dbs+3Z8=OKFRoT`*5TTEJGt;rE1ON,*uS,l^c*'&%ABa&]-93C];VM.7c3Pj0&h?2fU?$W^,p"ZAquM<+>(R[p"4napL&]<D^EQck"]8*Y5"0$N]T?5qifJ0q#abDkr<DNmo75QtekP7U%7]YdEN_X2YaoB5*IJ4Q)^>3Lc+u_%^cMlthdO9Jl;g?&6^5H8l'O:t)h^JIsn1rDjKR<=e'hM-;YeSI^]0O,86.4l0;'N6$jAttE%4`AoUS,[+WQ,CBlSQjU_bsJlLfhYl=BM74Fc/*@M48`[amI5J\p>=aIlUq8dk=tu((Vc[D0i$'l4=Nbi55SA"mH;6k<dT0sJ-*4d%T2oFbc_N_rCJIs/!D0_PKrLJoW]og`1h7@bb`/g&.rR96HUUjDU&leM7oo)K&gF4%B?1!Gm/J//@T(kAI<J#nJQ43JJj5O$o;(SS%IlUPP7/^SO7e-oBG/p\6XX3jcEk'ZN0YTlG#:ek8*<3NTA>^JSqTPpd#;'eZrgmP:r5EEtXr2q=\&B=;o-&f""kVmjY1:N*lf\GD%A/^(rJ:9(Y$6.tNFt-oq^'RDDdJk][=-=:t'FqEjM4[8gZnoL>#%(+8bK3Y<<?N<P6I3%1fOP=R^7$)s.8eQa5XsVs5[9E%9:`DT%;4^s),nkR]Ad2]E@f0n6R='&I\(JO-cHqphmb1aDUUA6j#6G"/+gb0f-`hgTk)3a(bio-U,gB@qS,.@o@$ch@4qW'r=?H63kNg>K%9@1NBntsuYn;&h7Kd$At'n`L(d7js\Fbg(dN"]bZ@%K6Xi/B3Kp(o6]-V==#5[ctQ3r5YU:^rP#a.@;-29_7k,&J0H#5mk1_u"..%m]]XdlIhQLN_q`aP5U>BR1lC@?Tj+ShU.3aBA>:&Np!,8O7ViTXUPji>%^42[$i<Fd@.3SF(Y#Yd';68G>L*e>4"XpG&(s\H&g:<%(RU<<g(*#Z^tNsQe8>TD!Yij^CW+k=25<;IpU?Wh20keX"bajl&[GgC1oI;fM^,pc[<Asm&s8D/dd<F)$`skU`:u?-k9;@@FnJeY%<Ge+WWnHdLat9sSUo9G)ntJ!o84n#=X\Ra&>"'8':l:/7>eS0gOV9]c4>,g^]4]k$<**"6l7H)lW-<%UB5&?-AfH![,kHGuY[c'-%/re7:@<+DNUm$4]@;gagf`NalRo'<GHL!_ZQGNKrP1!])G%db@QJU1sJ*F,+r_LS"-lO*XDq'`+($%Z\YOML.Hb51jXmqb/cJ%Bs%_I0q;/BAr^F+II6btA('Eg:D'gD[jhXjJk.+N@U^,L)%-`,gNJ$p22)?9?Xt0ZCD%ct^)\dO+]QEftk+'S]2Y\/j%I4,:dS*;)IY%)&jS=q_b.B]/m0NQJpft&0%qD.TI^mA@GV*/`DuO6@/`WSTWcV[*3:2isRb7-RgO*ESf6-F0;nLQX7!D8Em<l#"EFoY^h5f#9[X)%`%356l1FB!"C*c]G17%sX8YjNgtBWl]<oWkk=E4eGM:+6O8"fF-aVJ>6h;tEe\n$Hp,g[-j0shQ$N:3M"R-*uXH=='9NoP)c"M\e%i6K/'TFGJ"IXBS(&=)JJTn>Su2L>f?4V1o`\-@;+rUiKHSET?4hd@(LjLW](rO\WpIKAub\t(2#bfMHh!NY,(/?LeP?*13?11mk*%GAYiBPLhG0#Zo;n`Nn/O=u>@88<9`>U"4o?qrT/6M>@<-1(V#?_ga!-0DiOXp`'7mD\:nO`SkCCIB?(bFX/*ac'QXX&_;32\Er^p%0sg\n("EXkF>Aj8a0^f4+m3k7oV'iU>rIXk5$T9nd^@INRX_fEigj`dS$*gBCCD*-iD)#[qC'H-;kj!]Nm4l`?as]>US\Pk,0/Qp%Y(7I&*O]tL+G.IO@Dis:^XS,]ojCN5ERt&X&k-$pQ=p)k7Y3K^iKm`)s/M@VY?K%KX']'tAOPB%8ArOM26r0C5Fj,sN3ajQJfh=D%Egm;gl,f.[Ms\$8f7%Hrra3)Q,?IguM5,G;]C6oEH+_l7Hjh,&/Y[OpG]0Vj:fN$S8];earP4F6k"a?Q$oCM'cS/&I0OD2e'd+oT%Yb_F8W]=s9BS(.Y)kC:KAl9:_/C@dVALC4.njK^6oqD$thr;FF6U]D0d^9V)r'MqHok*AW9X!"#+'I=V-Frn/DUfc]p)tfC5eOpi%f$"Ts%NSqeN&uh.[Qd/$j!#dPQ8qun5KLXN\mca.2LWf#(Q5ZXq;`(;B!c4/[+9Mh_ggHlNg%k:S"JHq&;SBqUY0-(g\oO`!eWjr%Os3r\eE[7s[=[']lG`L5l.S6W4%$KrSrHH39\8U0[qik7;qHaa#]s?AK7p)PUFdae\j+T#7^m7C#9S^F-^Jg>MEX$U[:NU1c=<jh%_,RJ-L"^$VdN;VFQk^cOfHXqH*ebpr=Y"7C]V=q?e/j)M-[U[In_!f!&ViOh$2\:R"C]/t_l5R)G\/6r=aSRR''1@0_Zchl[//#>%F1c__pYi@CkgGHR3e$pXU#+ggkLC7imEK9b:e';h2=htH-*9(7VFRmpOBT*H]%Q?RY2_2DB!'Wcno9;jX%"lUXK7GfBG@^Qc=fMd%o?M<f,6a_6(a)SK\C\4GEfeEL.d)q^:GkbACJY/$ZG&\%5^YCU>Ss%(0U1n9Rps!.$PdAWA>[$Ds0u.K[a549bmC>n@biU#[>*]j%1lKiZUk]HWL`ZpmZe;Y2`Xdqdet?&L65;jMf1VZ);/PK*'S-^m@hJ)5K31.P#icI*oJiP5?Kr\pm?1q%9IoiQAL58ePEB(%8LU)I%P*F)Po^IRr'gT"=//2Cc+0Khr!h%UV$,bnbpI0r_+WOXrnOSr(3+cDsVY05_.@lHk]jj7B+skXYeto=SNH2oP!caEg4Du5PRFEHI%2";--"$E]V2`c)`3R&0GET''c[8s6_09V@5.$tHOFU(S:'1bC4IRjJd[8<EEgF@q#/;Klh)lcV\Lfa^K;__K@/J0(W7A?.CFftJ6%Q9u<3cGHh];<*:FA$F&/L3e8B`VXF+NU9'=<qnE+,Z1'uUHM1h!N0GWq@V"tqYn?kq<%<lYja!`]ihL>6[Ak#XHSSq@^Rr"RO#$=%Mq[<E&kkOona76b^:&\SnO#s(W*mk)Sf'FF+&=\RL&WS]KpLD^Jq=Sb!H*5k>0HUng9a.#Doldsd@H/U.0)/:F!(sS4#W8!iS%PX%a3FmolWU@C*hJ)gjSgtUi7b'uOj910SPZRLft:1PAufIVX+-)&[Cc7+p@06pW""FRG<J+u/)$]0JO/#n7^k_o]r^1qa$_2sef\=5%:R2p;"-:ltgfKIeOE-"Cg;epVnCeTd6>h4g.Nsu3_>TAubcSVk+8.UO-%BIUs(R4B[T*MNas1#jf'&]Z3!Q]OME(menou1%VDSC8%DN.B1"=H*I8DK'OL,.75Lh<tI_5\'"p&pBhKOWP1RQo5<E\%6j;1#l)+BYIXUG+tr.#sQ1\)/LXmngD]UNbp0!nO`W^JMCn6GAfn%WFO>@4?L'/n>bfjQcbo1=ABLi+Lf<EN:>aIQX/,b6F2Ac+2rqaK8Gc=Qlo_2+1`h&W;i5!9FVQX:1[U09Z+j\oO+-8[jM4eN3aQ'%6Ye[2H+0orblZR?s"Fb>oGY;)g^E;46'X$3r1hk!HE3ikZtV-f6CaKHVeWUlES"gGop_+\,Vg$/51?8d7UlLpH`.g</Q2;pi]SrL%HHf0A<dL-)XkgP=o2g\GpN5I(]mPEjFuk86JZ&5'.NkcEXeiWp=C"t!m:uC\bC<UcL9"$m&[[9#=58k]HHV>+jjMk-O1q[s#3hb'%$'E)DLQ'S,c%`h.@<PpNn0foqi<$WHGK;%CT4Q8\\;UW+k-AuQ_ZdsOgGaX&=3&7.$G+D'`Db#]dn$eeGQp`TdOc-f9lK(X1,Rc8%Lm*4+ckd^hNWs8($K*[4K@q)Y=1;&G[m>\e#T2.jE.O_C6Ha&r]\`k3`N6iud[Cjf%e2/47?MrgaEFp[Z!Y#4,X&](;?%s48Im9o%+*T5sKs2!,`!LC)!l-%o3.8@6Q."nbO_oec5<S,=O$]9Yj>\i[5"A4g(a=73(\N2i?Medf"cR!8X90.92I"_GH;Bh?HJ/I^)`9Yo%lCb"X-IU7--C\9XEFqlUmg6P)POh/*(*-cD)]JpiesW7^ZSFnBqdE/XL*<=I@)bURc4A;r)#D0eR"Yl@=s&]QD"RG,\Ghf>fP0B$%kQY8R+6=hmm2n>/11jB1T.QPP]oNG-5E+HGXg4$n!UCk6\\JrM34DKBpEhO0c>@g6-@/'@9((MV-^.43p`C-RjD9O;M9CT`5cC*O%FR/aWB(Ye@VibCdOMMirX+?3JhJ6=aeVV\0R>mrC\2MkZJRd4M76[IU*13%Qe9.tsPG`$+qWGn,?GC)JVYVI=5IhWQ$qJR=0[U0"%,oH(b-:WZ1hZ\9efYo3Rmpi-Si2#9aUkU*$"8D%lk0PkZk2hBXm(g/j5>jMph@Ehi;;-Lo.PC^s18TldM2d\GbLi[!r&CT63S##o%F]>@D8"SsHfOG459h6L_QC6>cC$g]4RT/TmI^jQak)B[ell,Y=&S[C]rY8es,MSMI,\Wb]e!fo2]:f`J>\HG]-.Yj-X[G!\oTIQl%2O6ra@N6$.,/2dU/*rn1h?S5,GLs:2RuJYAodgph[gq\gX`D=-P]Uj=ema@LC9L0pLC))/'tuf_3t_1qdLU+@iE!E1-PP9liai;0%__CKQCV7<rXG"'T6L3U$NFk9-53=bi]]&7b]@B80l9rgNkNVJrTP%cSmTq%X$E]TN%@&R&_K^)`l.qNk%Qa.3a/EqngkaJ)F?>Z.%Ft/&+ajWu(KpCufCMiHbaVulf8,3ZW>ERI!I!'o<&BVmX=5sOnj)$r6GH/d*n5_VM&&^E>h5'M4=Bb9Y`CdjpGf379f5e56Y2*oZ%U6SKT,2]XmbOMkV0<j]MnBV$e2=1XGgl=O_T1lauI>b"\.<dVI]WOZ.5u3-YiC5>@Qb;Ua02P1R`,f:e,!9f47(iG4+F:Wh&dZP/%/sA$']=rK3jJcr3$<e1JN'O,%Y0`;6AlFmt`lcJjnT7`hf"Clq_,fKf)bF[Dhf/SonFf_5?h-hD=-)<2UTdc0m%/$3b4UNq6^B[c%,sKa,Ut@qTMs^7@L`a%.@+jTu?,#Hhig(22e:>=#af[;,Tgrm=VG8SM9mad_e;i]QZ([%li(N?Ao'FIQo-pnb<P75Knt&A"m9[[<%"RSeH*b<C+F=j%BE1Q]s<PK6T7.[FGB%TW"8UOIk=\ZI0G:ae'_Ac:H(P8sRAb+"nJQrHROuq7Fc?8-6U;o/)0=3P'Q:lemhCsMo%]u1*kh_4G%rESgZC_pGST*QhA'8HM3U7sLP+@V@f'6kKjJG&;9+He>gR-9RMT?0tu5dE%6GLC7MP)I'Zihao[[tLW\X[K#`jn[21%r-9rYWt[UWbY$h>P2gfFIRJXtog##+?/k!X^Y<*>.^_WQqG\JWVURr7_]H^5c$1\,.$F7VDDcoOca/$o3J9OKGn\M?i$p53*$rM)%<om633k=)p*)]2",m!Vg2ZciTI2ZD6@D_EthHMAM=R9eE],fPkqNC@e)eG&J/bnLZ0k`du;Vhh#k;peKgek!HIORcHBj:<Qj)8+=%K]U"0]nMEdkW3i><'BJMD>I`Wl/F=XB6MkdHE4HikaC8or^>sjoG8a#&:$HKM6uXQ?]q@ea.[bC<S",:;hcdT\,(+*lm[7DN0TD;%L-<fuPHeTqQ5IpYG]44r8\<T,^84SNpF^cZoB_L]@EAn`d*L\V<Ncm"SaW5*iL/-F[J>9[UNcsPg?9M5Qh.3qfG74P<b+;B2G5d"%D+J=lKD-8/mn"N0W7oh3<pQF#(Od(%PJHV6h,/+;ncRN!*q"@'lNa!D@Qfm&3Jq_n]=oQXTX8kj7<0bf3II)bBuu$KI^A+k#r%3k%rc0h/)s/T9>a;a8JEL2q;5h42p')WH;U_RQ?G0]=K6c6XMd4c#lZTp^m1@M!RNPs:ejGS[gMCBACGXq_qp45k]Qt>d^ZF)kQa+7C%01FH`L4$d*1AU9\<sT[OEuR0=PaEQ'CN1Hb=,/ntXn=_7d/u20OXoe8.\:""@c+6ip3%aRgl5i'_MspkS/7;E2koBma2`tOjA&&6%PIj@YH+cMkF!kC7[!'B@OB;/YrKNRq@pK@Il&71M2(k;,?TeGi'Vil,>E$q0UYB&hY&<q5VM4Ck[N#Hd3G;o2C0&5^?TH\Qp^1)O%2+-*i>5&4D0`$j6R0:2$$b1MB;\VX>;:oKt5!;<>pHqELa%*bG9toNEW*5-aZ_:=7a[%Rj'J^Ci-Ku+lqP.1#ZT9=1O\r@UkRq#s%IQqLlLTCrF6@/:[n(V"fFj>.1l#ImF\W>C0Os3,EH`OYtDHd1RSp+tJ]j@9SI9M@B21`0M^k`R\&6ephi7nRN`I`qMkkBG;FW+En%MDt<%jb658N]]-'6;*r;_mDC3$))lUor,1ag4-sfirik\=PUI9G,bb@nm5pJPd--8f:/j0D`MVj,P$VJ8n>h/F#2L5j:B>-D63:(%>n#'!hNj7M^Gdttp'63_^@[bEN\\gY\ou^NSKk5S8#g%#4#TG0YR;nVKlE./s+R:m-8/oODt\u4"*%A252ulbW#Ct3s%3]V9G=P8%%7%r,94tpg64f;G.0Z8+2Oil;^gDB1n#;F=jJ#U;L9U6Y3T;_:\Z=a[1<d&S-1?EZi#0BEd3mUVPO>u*-i)Q>XbXBRN'!-2\iK,f%ZJ^TlS?PEcUKNa#DokWb!uen($P(fe1KK3_jZ"`l60RLH+.H!HgNVmmKWhNuOZ[$=TE%OpQFr*#`5men7S/CXn%T2&;52B_jJ%dM%N+>#LH6SI-oF9][-,Zalfh3eIr.F'g%Zn9J]g^4Ud1"#K<ch=`=r>=G0a\kse.ulAgP*h/M#;46&O1$4^O4Ns6p,ij7?4Rt+\oIX%G3Q+M[*SB1(&Fc'.(JZ":d9.0:!Ob+B+>baoPt3'9U7=Rp#C;]]Udk81A;oSM74=][s;leIW@2#2AKEdg684]KHb+e_nLtt-0)2\%cS=H[g>"=2]k*"<f3)4>]bahc.%3-+i#k4h_Ur\lER5FkZIRWPat0@]IQ_'l?4Qi+klBoEh?sI$B5=bEi&8#Xm-S[n]Gb+STj4B#%@NS2P&n/!uFrk0(an!?B]Ea?"Be&_?E7uWo/u_t/UN/OpJBVF215eHr590XV-E:,>itr>,$m]2OpXJuSX^$I"4M`c-JT*BumCD!O%0Tr5.),'UVI6!@T/cu?;Skm?dIka5HOCYBXL+fE%_tCCC=rjMBEq8I7h31Mh\hBRTXXb1]G;`J[mhNBp5)PqE_Ec:]rR=I/]=6Y<%q.]OP)>=qo2[7-:Xtk%*S'NeQj*Yp0,ELCq\@X6[-!#;1D[#hEStC@mob[`?L5r%ZP5p:0RF4?5\$4<O'WlDfm_Om3+b85qenY["%.=6rQI5e*J5fWQ7fY;cDoO?D(4k4D(c3*rFg08KGS/gBL^0QKcZ/Qhmq^dmn.)#aiG$A5Hd]F-'&.\('\t"d)=!BT=NpTp%?,C.F%*/lA+nt\Pf\TZuCal^LqQYRaKOc0rhbM/k2ju&=6e8A]FXW!CN#kKa>_dM@_NtsF8]P9$4QGuK)gW.P2[+F0&6ga"&'ue;kbA^?i%24bWVlr<A[9a%l5%$I.QB562C\9Q$tp21u(htQ=WbI;V`[V9Y:rELN3$%1EiNk4c-755Y93dn.(>uXR&:,ZQ^Bb5qNfR,K7pu]hE%\@8&FqIW0GHGT8j>E_.)mogM!H<3KncUI/4Hf2kt!fp8'HIh3H@&Yg5M86]%Z?`O&gn?,f/"S[G]QO0bCmPY'jm^hqdbY_HfJIeR%o1NELZ$/*DV*i\?c$*BZN">LO:'(-6[iO(iB5%uR8=m3H5o:D&cCHKsL6o)Yko;[orKY;Wds-h<Eq.S@2mHe_F<b6SEh=ajCAs?7%af8%#]i?bblE]4%4M?X5dU?*B2>DXk42,YaW-0DRMp99oj%1[#a04*G0=LA)\te(UOI5Z$"=OeIali'6k3/JnhHM"f>]tn[p'^`T%#4ec5;=_tPLcrE)Y[G7ULrXNdDo&6q<;e&NfR,a!%D(d#=.Jhq0NtM5-'4JYS[>kKFrT:UWpG)\/3Mu$@*6X&\NUdcTPP@$q7$)H%GJQ86hQ8)6\l=[MiYic<.3=3%2VsD^f%G>.0[+-;hFS=4T@baNgk4%n:EgUcnCr<Cn?c]FmR]LQQ1Sh>^3"E-4,mP5pS1*tnh9Qo%;7M[b$5],/E6WO^1&f;T#3Wgm-[eM^C%^s=fs--:MhrSgZt!hIGU67FQT^C]][[G0+<3/f#@3Ij%m)<+-48T-Ndo%FN7,D'aD]om%LEg^u1F9NAP"e,e<jP%ui$%X_g*r+%jSSU4kTo`HFl/@+lQj:'7rl.?pQ2WGVu#5HXX]S^(27N:HTrUl#fr\e)2gUDL_rnCJ/sPd%jMZMlONpn/7M<7fXBq,ki?_Y4,,<@a'QaHrVFphq@jBS9cZXTTP4ks8S\=/CprZcm=oG!$4^).W*(>S9jibQt#@YjhV,isBe;H!P%J>6(BViZ?Q9Y9.Q@2$?5&_9!o>`nbGMK#I']%CI,pM&'*S*<>$DqUk%d,!a2@_>fE2sbl,0JaeQq6Og]@"5-f2I@r.9iLr$(Y%@I%:<hC88Nj)moBV-49u"&YP*&pXR?U'/j9<&S>BsGNZ-A(!naXmO%Fqu[CbV8b9>9IfjC5[?cta_*rnOBXRuH]&-#Z_@VmMoeSc,O!%r3/)?(MHH/n`/,>%'8Qp!psfG1UkI[ds2.h2tBQ7q?@<Vlm9);3RAcF"k7KuZ$"6nqtr:]P]QCoDso1B*Su4N(1B;h9@Y8%jl+^Q%N+Ynk8T.N-j)V8g_gM)O)!I\/#/Sh4^`n,M&NT067H!WCGUF@!IlIcZXWClTp]6Hhr-KIU<$QuJHC=91o8dQUf[7ZIg)G6h"/*0?%gTdMado"Ctb'hnG]67/lPkd:J<mK:`RF<EU-">cTpa->s^\E7RFod\+>[5Gn4</SV*Yjd'C=e3q8LGU2qr&8&MNBtnN0C+-8N_)q%fs+-9T!VoQfDQX$KL(2+;Mf@PCc61sC>m=hJs23Im?H<t&Go^QHXh>_^qZ'f]A%3=91e%2JSJgQOk'%.&)O6RZMA*hArE1d>`RC%%Puh1c'L$?IosAbt?cXYIr/N+BT:][=g$U0\hP#b-GcGYg_/2X,0Z0?DHo^_sj!0)\Xdoi%Z'/YNo.dk(0nl?jRtX8e4:G!$bH5)8%-FB,hEjQli[5mHBN7jqdrR2_DZsh^u+6h"HGOHqKLJiF&-6B>)6-,TXm<N5O5$qN02p'Tf;i_:A-tGB#C"mZKJl;=l?pR/:>4hJF%'98uJkFMC1c^2ReckP:pMU]!o$&oRgeWd[)nkg3tnb9k8qP+>I$=d;3,0J_2jF$nD4Ck/2g<K.b\&5$0%sCG7_4h)7PX99RoI8Zl%^-$CXPVKneR=8cbV-Q6!1]OE:F</"focBX@NA"UAD0i#'EG%6+>RPBYNFG"eP^se@Fa<:%ON%0k^aNQ7ItNN,5gU^lg7#"Hf>j?m%je1GG@fm:hV6l_2gOHOL5<aC@MsEH#b6*K]R/]ST(L:d-q0:PV[dn(3:0V44'p>W8_rPn%0piBQl+,ct3/K$j[4o;4+9Sc,*3:PB%hT!CJSW\=jjE$ILGZe9/7]]\KE:n$Jhb-m0A[*LHGd6<U>EH,4rQ\V&OpO(V:>/up\25U*Dle6s0>t54I,3F+a?+c9:Y_45M10`5%TO^@KZUsd`>!r[OQE_3G5g1!HZ-8c/HTBkT`k)hg/U7g<a'(0gCd_%6J*-[VlLn!"$;a3</;&MsG&tX=_$t,gX\R3/US9u`$$ND[%'ee=CV0,#cYu]O]]?A9LR=::lhY^B#b)C*U?/%pu2BJWTmn6o6:n/hi"hs`IJ/-gc><e#.DtFFa[_9S2gZR],Z&sJ-)7/m^k#ccC%>qk3QUdo0j+7;M[ZO\DZpao+8e>nUMkIqGKduJO<.;ja7?>_%%X:Omao8AV'Oh8Qa.A4aV<k<T-7>OT-HIMH98Dei+OKmm3?+CP#%R?%AH3r6(0D417!K%8i85r[;@MB(OLPl^XL#f'W<cs;)uc49Z?b&88:-_E?#[ROrppQJ7;,Aqk<T9iZjP$Gn1De3V)r=5:E6,\.d%DrU#AZhU;8l`onZ%h-8)O`kk&TRSAL5)8q-,e8*V9chm_Bb;U]f.3Qi;8=F18$6u8&r$6Q&Pj!DF8H`[^:]>^J&Z_MB;j8W.#5:(%K&&sM-9jlK=bI311T3adLn5S[NqU?e,2;)Da31F:8EJM!A,27>Hp:gCDtZ3oH]]b/rY[d_n5(O%8?O#0RtK`l+nr!_,tUTr=ipnd%n$n$4(u;8MMV<qk^2Cbl&+Q3i;)W$rn(0g3!pbQL33s66&GIfgA*Y],"SH=3pFl+C=?6&[r;Z0WTCh.47455onf1<W'dmp;[Z9+i%LUTb1#b#W&hL8j^1[`<l.[sV:pIO_:LV#`2(2,P)[<<os0Y>"G5^H5&V&E>MIN[,531;D!p:&BYOY\t9mMe9q7$%?+A*bO2)h#Pc%]n[-U$^B3@dSIH^NmXrmOl:N*9KGK'G.SDn200I[G2M`TnaXl16ZkJiH!@o.D!Am%k-n.Bmaa8U?53r'+H6nU<$Q\Zn5D?Zm8f$F%r;?B>mIn<5h<ssDA[gE<[(PI"`,t#*kMUhDMOP!_c;Q9!XL.IEjG]/])I.O5iLa]C+<&fAaF%#=G[Ckd4hgaN@Vq,&9Y;';8,..p%r/C3hp-/I<UWC!X_A<,%OIm-HS8Z8uD]/H/M("eD&mY6VnL&RVK=+Nd"0U5fC&%fun<A^/NDjYaJ3YTnM*K*M750M52I$AfEYeer%ef4V$`1OlabMJ^!0/WGo'r,"[h]b8k/Lnt<''k2I&;r[=rWL9kXFP(tQBODgW'YlXJ";X<"uDCs>MGW@7+XG$CYrVG^TquXdae,4%Q[^2P7M_1XRgP&qLj7\i/tV&u\G45F(@uRc?Ms`3g0A?Ghs"d%0@8b"Or+-E/4Sc-Q7V1#=77QaG'Bbd9B00pFUgMI+LD@B&WjPH%qukrXdDK8H6LL@,_k#;r@(%hQQKWU;?f<)%6gR,2p?j,F;;>N<-8n!gcGp_N^HDb[He$rjWd1q"&:KXHU=HC*7elB%LtY72d-DRj%)>7hj^URId_Gn(8ge"Bg,jDgha$gNJ!f<*tMrciWO@U`p-%;[pq"]!;H?9Q:\C6Uf(@5_X3oj3lG*]d]rF%@43L("]82<eHf?N>R%5`k=+m,c<)::=*g__Z6`)dP.hSe?#52%U4skP'3rF:E!uOLRerU,P;Y7T4_'oiOCBJs"M/`#mq(U'[uE&7Jd/4>*)k76(m+4F2%R%2p,%@bF_1WJ%@dl2X'jN(@(>Lio-rm*PW@TAm7"!HiL$so3A_Kj^3LBG5G'RhV@F$l8k&I_H4OW1tMDW^VCSQ$M.3-%b:[mD3bpL%'h$_uYI^'%+1L$sNVKK"KaZtt?5Z^dFn\Q4fjEKC%c"esg:c75aI;Pij6_pi!$RSRj6GmO*ILDj\jQ:dhn</NG25hTF7*YpZL6j<%SJ=*@]p.=3lHYMrg@.58AbN[r<l-5s>>5H[m]B.VPC'olT+#r4Y$T<>]tL0sp\r]\fc=t7!I&X$4mn?dH_0&Me^fU>R<]1P&&$3m%GNu9oE?BhFFJh"bZhni/i-/g7V3Lj>+#2R(e;<+tA8X$U=5DJ>pPl_GE8NhI65J^4\@Ij[:Zo+jpIe9:E9FDWZL6^HF2_E7m\S_S%;sUroX3@9L^30>82U=\pm^L(+S%H#C*A4s&>'JZKN1MT(7Qmfq^<4^^EZhg:/-jqdQY#;IgKs$qPPUGd=a]$d>#nDMI*:8KNJHW/%2/Qtdgq%o<N`@^;bK6Yl@6+"JW\(+j%aUHeMC6:37I@amI+c'Q/`/>1cU4M:]_n:B5;23c0QLkh`@W$qcp?L:HsCQ$PSB))=hBn\%bLtI(B3!TfGl1&1g(V\&LE;br<BT7j+7L\$XmOeefe.Qe(U&%Sq!$1ok:k()4mD:tXs`g[/pME?]0XcFa1pb^<1D&P/Yf^9H9#4(%]Q2&r93tES,$+6@=!Qgljg4p6b1]=d]FoHMW2q]-a0."fqm*r15!6T^llA%@/$V(G[W9GZJh&4"CN8HFUV49[*SNPVH.]dPXCth0%qj#UOEFl!C!f;?3EtIoR\%B6`n#bH:VS.QK)?dpT>/Mk5+p%/Xl0=j!b*93gK?AJYHZHdbpL`M`fR(6c\a_l6Wc-bRX!)aqT3jA1%AuSU6FVcoDFfeh0?Oa-gS#_.R]Y1nA@II:87`;ds>s4:PN`T"oWf>QalGi8Wh>'?c<FZGG[B,;\X,ZmsBXJfO?a$T?YCgUVIIh&F%\9\RcD4b`2X@81E@4cVf/ZrY+p@d+@%:=2DWEVAc.nR4$[<an,][j':pVHj2mHqK5Tos`^P>l8>\,31II#6qXNUI"OU+b->Y501\%[">K+e4faS;+C,!U;tIV[A[F$DoMhr^RS'fq=gN8+ofA_]^=$uW^Zs4;=*$:@_.X!`a0-En\<TgESVR`$`o+amlg!bA,L1ls%oYs%+7^rYqY@.jXl#TDdsAa*4fh_Ea8>Oiq0X:Rqob$$:,/@CgP<uJ5l?<b"\q#9[D;IW9e2kg\%R@E'."@V/76Ikh@8AK-b@,?;l:Qr%61]OMd7tT!B8*d,j7Y4FD\QOQ`'ums]acYREn+RE],(aq>JWiaEr'r"4Kasni0F)Q#@AOT:P.-D74$S<h_Cfio_p*]XlaDmE2<l9%KT<6`f:f8;c:UVh^,uhSNZ,=MjWf4e1O*o%hc,ISEAQ0/I+g^;lL:9eQUai@+Gf%>>NRB\pjA2EL;3@[R=.q*1.RmoLUenTYF5;K%0/<tRQh@5'OFsn+WIL,fc2&r,8n1WK92k!*4<$*0`aS"eo=c(SNn[hIE-l2k`Z<*kDRl80ciI4tZSM9@p8mf`GdbF]K)^OcM(b3C%7ZJP[O6T?)Inc7E@JTbY=n2ohSQJ/0h2tcmUYESiE3m:,&bOhC[a=/<g1$_dh@\:RH!*7c`Ot3lk*]R-"Nuc![]qGXlg)rH8RYs9%V.=[(/*/ChcVhL>X%@6pmAdhu+@rg'0.+N-*BYA"aB*^n<A(`(Fh(dGhf<a\Xm@#K2O3<)<)E#V[SIXu3;fe&cGH*ol,OZ!\pDn+%cP)QaogN3gI91SM[apGmo<#.UZ5[W2rk[0f?@i"s[i8]FDQb&3b\\MHOPGl:f@nuipg\W^G^Zs-h9hVU*QI7SGJ^Ud@jb2(UinTV%_8#SB\pN*>mbc$-pXY9%h,CFRfR:J;3SnToM>Z5M_/X7/2kGNS4$?nGm60?t!;H5V7WW]:(lVJhpJ+qRqe+/qAm\2K`:mJ19au$4%*GgHT1;=UMqRl68Z!M9:geX!]#d<&'O[S`J*4[\/QQiVK=p:)Zl>'?^n(+8S9r8YRMB7#:buPtf\R+KASW?4LoNj*'ko@Z7q1GaC%b"]>^Qd8F]nY<Ee./nHsM8Yl:-eZH#lCO,o.dR)Pjb#XX0\5R!agLHdG&hr9U*`\/l=D`#enH59\,<iC@Sh>28GQ%iP_2JEiT/oK%i,9Vkl>c/ESnV18D^pUW_tn\]SD)%)n"h4Ws(goj^(<rNWX#XNJ!W5[g=&39UMR+(GZ;6%pPsZ7p[."s];M^i$XH]I?5fBA:MJX^%GFuG0OuJq;Ml`g,=8/mGIb&piZ=cR8-b2m&4*cg']2&NL\T/UN')/<UU?D0U^@Mn#$_8QPcf._/GBUaVh)KaS<7`m17It%fq[_N,%F6BNDmX?^0c]t<:I"%sh]M%,Q;F'e[pbjqP`BO;O?X,%Lq\SqSbG4F$^3Z21fY#:<T?dAZS9t&TOAg2s41WS$mjqQ.Pk(1,Ke(J\%o_s+$nh(kF^MN#?X&n<0/ph_=ffQ_oXX7AXrR%^NjLpS<9:+7SMKem-<SC+$8;E802eN0Kp.`)D;Rd1KXN7m@a34DJj#s<q\M^.(%[oH#ghrQc)be&2<T>"r2mIg?d^AN([I*1n@pid,6LR?]'H[*UjpE&.OU"(IXj7__<rpfPARsm282>Khj,gXr-ql]R%aQo2=U!(Wt%F3;PGc\7i\i5I@F\hC;m>CCe.mhE-o<;o2<%prUXGMu4rl_ZH#q<a)6-@]%.b2cdmq29iFg::DX(:%fN^0i"[[%ap)IP%--Qr^J@%Fmmq9,=^0=]6@,c(>HPOnV;%:db4:f[o=r5q(g:dWUa28osn=ES*gW5hUnuA2X=G0>.)m9KEqOcEIPH@D_t5<&:M8bR6p0rq[f^@%2Tr)UWk)@a<j1Kp\_;LLC:0VN\Pg',Z?grpVS6+BmptbW-SB\o=S&M-NPlb4cmW]c]B4hflBk(sr3]\Ln*Mqlk02;uA=m4tB#&i%%jF's5p;FH+Pd]@fo-(d^%R".+T%E(V[bk:eLGJeDX&nN&H+#Q%B*H,C4hj@lI:QaT>\ifA[g+LeLi3rKBoSk[E9m9Hpj8"KpeX&J%c(ksIprmCrRBs;pDnV]*dKbc/O7[A)Z9dtMX!/-rRAjm0IAD<IVHa\3eZq5"HoUu^$s4[?'m[tUda0`G?hETJ6Jg6h[[4XhPkpn`%'`6cs!<tp<"qX*.hA;fZHJ)tn7m`PE(]D7e+4_aK3)LrNAJG1h6IY`Vh[Vs/o=NG1-1W4Mc3KuP]M-:M>;"h)5CDgci58RSg$bZP%a#l_ib7@p5D>Qd/C#uo]gA#:RTeD^*_RJRA!^&+jXpFs=q0T*Q[,(rnj7)eZM$YWDaJjcL$-Ap_MKg;c'$'$d-nu\p_?DH2U7g3n%3*t]Ka`X@11"JBOh`p&>&R;sMk\h9\\5$<'O,U,qj'F8?GtA=!+tpJpR1D$2be*-G<(";La=^>T6R!&V+>5Mo<T%GT`,Qqi#.4Gm%!(/N99+n%^_!nG+!)7#R,UjAa8O>sIA3a(\&>M"n9>]"09.Y7`Ld301\RYnVc&m0!>QK[6RH:+ER0>-AJqg;jOuXteZAR]M$B,N/%"C?)i]E/mW#GA'3$6_k!=I1RZ+U(pr-u_caAh?[.QNSN?Jf%rW^mBT^OV<#g:dXGtG$.j5M@9Uj"dKHeN!NoCCe0jPkY#H;,$].+%k0JmAJk\ZVR?o<q_(TF+73J+1."kT"Qn7kC;L*s@IIRYM+,L6j$D]W=/gH:)-]0'M&7mU+8`6g%gk<'?L^_pd">+Vq+B683_Up?@%ON^!44=mTCX:Rd-=ATbE$c\?@2?Z.89gtG=-iaeq.jtB+ib_h\J5Af=Xsa9Ij:EO:LI'?TWksn_b,Pg>L#%S8!.hkW_QprmZJ=(_%LhTZdR1Nqk;d%$LM$o!35]DPB)'E:J6P?mR^uJjo@;u:cLKIl;q#Y[mEs=ll>]=da7>+)B7;0gGCLp`_72/'>.jO4cI=WaOP+`P*%b/#>,R0\EhM(kq8Z\,Y_A-HTN7&qdF9?sIZOcTRKcEdobW=%)";e]'IXZ93'8HGeVXU?U,\dSfdO;(^REDY^B#7D`,YR)H0fTHL@%N%`"hGnDA0+ODI`)+Y:]_MSmU:5'"J;Q0^j(C@Yd3<n"E"<'bLaak-kB-OE:,ES5,E(,M<Mm.Z9"P@7rTRB??83Vh?O)$2>_#W.$%)'2=WE#oY7TW#@'"e!nF,8So3dOThZE',";Pc/I,E.Pb-R"PSNJdHsFZ]m$aoEt(li'AG2+:]MVN2Qd\k.hNlJc%5(oE.,^4JUs,%,-Vi[,9Tci(+:o9E?Mdn$c4P@OW;T5Kh_f5046V61PJ\VZd9'jEl^VW+Jlkh:14/)R]>oa!jW\8j]oHmi:l).,.O<8@*U"to"ZW?%X3<n'<TO5_'#aAAK(_I++p&&&^rU%[kR"1t-r<_X<(@Z\+.,eg165&.646)d5U+D#VV"6"!@a<Wd@UIK9`^d&>9K$"(i9K<a:u]G%'#ar%(+>!&XM1cZ/C4!D@hdW[0;?6S.LNl1&J1k7Pt$jgC/$r5a<)93m#0*8mT>1G"hkV(UJ2Vg<@EYhX+DZ<N'CHI#oK=-A7dN]%MK4Ip727Bc>"Au5a@+CEnT7_18rQI@"-[KY!Pp;fJI`>ALm9rVJ65t9H_Z2E;$`7\'FPESPE$",#K[2O:aKY`9N9je'n?@C#6I=s%[dZ7WV'%St"9^5&&s1Nd<<7G_FXJT39$mcJTUi?l_A!,j&EX!C%(<LoP"!!:0M.L#9@/!(>6G)#>+d!,L!^J8e?O,,!9B7Q@#n9A%i@1?$DNB=`nlng7L6W($"$rTT_JMb/)F0,of#!%Sa50&dAWFtN[?sAoG\E4c#R$k)nM6Ie78YM&^lW+0&RdYeK###"ZbW:j%&<Gu%113pa?tDT)XT\`(!il^;SRZo)at>^mE4-q/dP=cp<%0LAS0SbfK./8mTKEH;JJX,)_dZ.b7US5!<2!j&WhnFN$pKWM'jQST$&BWj%Q+0X*lm'DG&Eoq/;=Gb2bQFpVUS(8CM!(#,1Bg'8-JD-I&25MSVU4uJ;%uj_+gU#OoU!JsJAha#d-;j@5VKE2J-CT#NO/fZ8_CpZ%5DN>P]!)TG0UO#pOs'T1L+L)m)D0=5i95\[^eKVo<0RY$4NJp(kd)!=kK9JDF+bc+Ts5cV=S+$ZZ[j4=Fl\&d@'U)g),VS#$2lG@%GgLf"%LFg!Pnei]GZ$(^+EGJ34G8mumO2bm:jtY^6mB#EA/0e"-+)/-Otf]S+Ab]=K_>NkOIF:59Q\o"D$`j/=pdMKd3oSq8u3Z7%X:bP*/<,H2F;YM@=!I*DDW#[aL2%'_$"O^f-Ci:Q"=.KQ9;W(L!5_G3,dASE=:DpB)KQ;ni&G1]WQOc5Q!4ef'pjYg2FdlN*/c5f%Q:^!@!Pg&gO/PV]/:O<!;epu^7[@^\'o`JWAN6!P+@/H\^to4ZGS/"GKJ.:qMFToCV^`D!&T\Bo$kA[`jeT_k$oM+ZM5&Ns[2Q>#%SH]ogRA"ea'.gh/On1=K;dbFO_pFpKrBkZr>(W]R$FQ=q^Q^;Y\45&Tl/9.'.M;;[YtV`f8g"`g%%S"9`)7lp8`312&d1`Z=])u-%!/1OE-28R45S@T3eNuP*V`n<q^jL,/FsiI2.0tY269MW/BMUX1NWKOc_&Vu!)mHE^;FAqBC&h/PKCpD`ML_Z0p^*8e!B1,_,b72G%"jm@'#g+>_2!n\,/HP5E@>"g[$<Rj]c'Wp0o>VIK*K:,Y/I3260d9>S0KHt:$j0Ud1^19d;3`9T8,]7Z(5r"nRKd9F7'eUNK4%B(%!"Ti2AMLfKaA`1ka".D2$,qLher+4A"=gh_Lb8g3'Gm#+`Lul?_6eca(L/'CJq^$6jGECQP-L/=?U3Y-)%!0sY`<)p+WuHBT*$GS%`$GLcJ;&SDj=l1@AHFZEh$Y4&RR/e`cr5lf61DZe?t'Ag5=Dm*ON%,'h$A2(ifjVjUFZM-.@Z4G!_3=(N<?uG(`pX*S,eJJ.A?h5%.$Z9b-B0-9e29o.0Q=t@MTBE:PnZSG$t"T1"MZW'Jj<(6WX+^=!"cgb`\\+$QhZ[ZZ9ANqi?ap8TM)(H.)QB)eKII;5qRm(b,V+4%S&/Y29]QiR'")R563B#u-H.aZ@)sT;dGXt&C?n/><>*`s=t.rEYf,(DIK2:6W9B;hEhICcAVN/])$<NHrWQaH+\jDY*H<B+j=A"G%a>Cto0Gq\^78tfp`K5DE19j[>C.,EE,f(..;j:JrB`KbQSjf@hN$B(*\9!r`YpdsM0ZYa)5:@0SGd)B'&luACn[Nu17DW0eJ7r.h%N+#+JG=>-"9EYBb@U_qR3-5373d2Gd?4+QZNMSO,`^M.-!8LW%ke])qf"=!7Ws[g98@42+21h)m5^HoD/^P1F/<g[1<!OZ`o,M"O%%$i2uBjnt(^d:hK+Z3&*8Jr]^%Po@56Crr]3:KkbL^=5]i)'Jc+Blbr'noW'!O+#?72g?#fRZk>Qj&%jk0Q)?bu$n4.1BTM-kDbt%MG:EM:aSs!BhegT+/4<W63[r3XOARC'a&GQ782AWMs%(2.9LVALr"eB:KCRJAL"`K.P`8a#Qb<_YQ^N5qSJbLH,#6)XMA=c#@]Rk%@49#iONbg/"[P7:;b%>1'lD*%\O.N*+@`#KOQD<%"='+-d5l7]$g\p/LB.\;^e.$18YC<9I;i-uo^EOt?;)Oc#j#arc4g/oVU.T*%'*`?:AV,7AXYrH.b(/LQ&B6psSM4/EZlF[JYm!#g'nUVe4=%"S@@j3D13$CsJA`&Pb_rjF!RZOWFpu>Z5[dZCbn:@6"@f%;P*N^2%`82`"GT*Sl3J4+r,/feI8@!U\FTn]U-*.9+Ur3:,$0K>UU:>ipl.$2E%(\k5TfJ8F+@sB2`uomuIn$F_Yj<tK.$f5!#-?F,r.+FW%i0_jKQkIt2+;bSs?3:j.CG'+j%i7s:Jg@%[5qJ'G!/K&+8:Vrc98"R*8"5+;$WnX,"idKn-N=),==bSg\&2pDb([t>LLfl\,0&gL%";Xr;&-T0<0D-e7&.ZkdaNM8o!nIDb"H1\1@@W/sYfUX`.>N$L0F/LNW>(E4&hAR<1.snA)I<P<Z;htISs/ePAk3u#6\q+(@^->A%&L(<a@Y%V-#YD8=6,j*9WICiU=V@sO&rSV$cr<OLE)7.Q(+bT"8`H[Ya1@Wh&2Y4;!]sR8KDZ@Z_.%F:>1GE`<#kuBF6@jD)2P"<%+>G&C&,AIUrMGYY;@n/<R+2laBED/3Qii-ZXW^6FO-6]HKIT[%WU!%sfFrfMk[4QoMC2gL+Hn@;\!0>n/M%/G/6]l%Yi&8f%*V9u%U6$LK_\sXI1n?=YR5n`-X?q;)'bq_hc42[&'PQk@653O?!/]33P6.)0<A,4aSC5l+:j`HN#6PgCQ\%b>),7U`P>ML7Q?YqT&i4UW%P[o"Y!HM_%"Uoc\R6Y;GRir'--imG%%hMJ?SWnE$5E^=:l8f]P&4D4<+;(kF+:uRi989]7,4RVtM&J-Y3+T,,a[@E%OCH(^'j"LR%g(KB,LZN`9MA2)T!7sKsYUONe+@K[J-DIYoT45UKdAC#^KU<:$,'HZF_30[\JOqVS9M36JP>qko!ZS^7QqXJ%m0FuB+TVU.'j;en%Lnu9#LrFN;nKQ4n&1D"fJj;UJCBPOUW@^b..cuNi"<>=i@<fdhj+'uSRNqs!(!A,5R/A*5/.qtT=HA[Q8.l'+W<CVT8:`6XgaA#G%#`Sq(0h=\IE'lrYlQ]frdjfrYAHH^*!b#re&7FG#i$%+b$;2l5/?T6oiCU/:`]@3*jbU?rRo-/EB!>q'i]r8di\CoB,bff;lS:=K%==t>6E%a!3U+DIJWC.Cb#W+5#_f,Z.Xb]%G=QP</6gRfLH-G.7/k@<b,8L<N2@(\_/$)@;'k>U`OF77<P^:k@<X/5Z,n*R?XU>2S%0]j#$J:Sgb6Tq/4.-<96Tj"FuJouO8!ZW&1a#liG(i03Q\;qd6G]FKqQ9`5q&n<8_HfcRT;\ajo!?g53ne>P3%VtTr.PSq_1*CfZ%RSa(,&qh\f<uKgCVL(F;`i'</2)18uLhNK4"-?R3*!W<0PQArBBZMm"&K/H1YXYWbdN=Pf"[*XPm]ef<;Fd5hZAQ\#)+3lrbO&]9%Ng1Ran[+/Yb5d1;1g`ZomL:A%eGfg\1kqbJ(/"Z2,a2LK$2q9aCW`@8,=&Q\6pRj(Pghu2_P5XP#]U`X,t8fo:EHS0BLNJ#fL$)U%@t@&'J4'ranHFJOM<ItMX:6d8EI>9`4LtSkV'#t0:L^joC@35p!kM2Bd.#J34U_j3Q(!&#;@//U[1W%p`.X9/7+<&q]*q_B33o$0%'e4%B?jrusKH7*u^d/Cg8YO2YLfCY3K4RaS01k0>Mi'.2**?H(bh^'*YV,G8&.;B.0a1Jmh"&9U0EoW9Uo:D'9-1DkJ`QL&&J-]j%0JaU>^tLVF1&V]hntBO&6:tDu[Y_Na-0(R'!<J6L%ep!Lm@Y'D!X6gSl!20f)098Q<(>amm[2J,?_W!:a-&]i%g59UVY"O8,kN(T%rFgr-7Nk,WB$ka04sjdu73Z?%Trso%'On&%j64c>FbuKp@f[P1J`K,8==Q(g"tLZ;?9l:WN?sTe,rJSZq?8F4OW]3$qa7;3$<hY<%4A/'V_:i$9+X0;Ip-c2*jMGXeLZFT%J`nHuB979e$3?TX:'o1(+L-#M;5>p!)F9r]+:-rI#.Gj]/c^H)AWqpkQRk7$BA<cJn672F%5t'B0N^?tQ!N6_C+HQb*KBY?tC5I[e!bqlu@^'3]Vj#1"(Q!YR]=/s+Od9Z@kf,&hG,Z`Z=&g/jJ=L(K@VAF96NV%e?7#"R+ZpT@%TI>J_M56hqhAj`c(d9Go_!hVRJL*"Z1(E"B%.Fj\9<1[,pD0]\'a!^)=@W>sOAQ^tCC63,9(=%jU`^74!sN-,9D2CT=mS!lXp^F#%%Q=Cp#jXTTG*!QX(.;'i-itT4<]ko%bchicW+)>f>KXHh&t3,>/s7]sKP\]%WS\=$*rr!G'dO\%ii,HbQ5%-jM_sFW0rU@6Iq;4>%8KWl@!\@M?k0.%<+M(_"JJb2ML4!Z*koP`tn7.90Rg)t-_/J,XJ54+1/D6Rl=Y%MP0al%="3(SA-!!c,8J!54`"Ba0N-@jN`JP?R%'2IN#$YPI?@`$GiQpPgXJK,9[#RFm0h?*5g3s;N`>)n.S;&7plAa)*+DY17t!JqZl&J,-q#_?d*(Q`YE)$)<98IA:#M1]HFG"a:h%f>&$^c&h]ult,:;9MDsH!cHs_,VG;IO!,8S'7-n6.KP)L;L>eORWJRlB<78IUfqG`68CNl7,h5saj[@<;FQ[mRNsZ,Q'.R=QAZ:W%0gj8J@>u<oW`:^mYZf%[$8Y"fIUlCdk/aJ.L*A)NEK!T;+p]ZX,SUNb5h&2b&s?o.@rDQg&/mWd,Y:[hi>@;*=D=#$4;S*?89tS=%i(4*(>#Ui>'Sc=9.3*>iYXfVNoYPe,X$n.,pYR,!jN)7j-NQ(/4h/mo+OQ&j&1CqW$\8p`9J1p16]%%F&\o&9O.]f[""mdh'['A&%YT&c-4C98l2m,S1IIra4"j)_)p*+[:&SN?pH)F?RF%@O#iZVu%`!TJW0K\?0'bqs0>TH_qP-"GIe>4l[PfPHf7b<TL!?e7oW^93d%cl'%jVJmfG^iBF5Se2gUi!]X>:'Bkf!9.P/$J)$b$*k,>P#F"B3NjY?&5S3"#SKN5`*6\DA5;7mOG6`u6GZ"85p`g"NZaqSMmu>N%\!nQ-^f4#O-`'?r8$W/\a)hCkaYHF\(mZ5(+PA?<V]pRo6D?K'b,SPI!tZM$+JBgTYnNHWiN=6uD<ulrR)'G0*/5juh8IPU4GUl8%NZ:N8i+fNm.?P='#)*-'&*TE+M.WU8;'lUU-_B<hA3U5nDa?G+&J4#%1b/SL954erma;G!Gu=&>%tS*hR",=6`YcY"FEnJ>$,+,T%U0%gV"+_"&Muc/)cWfonX]Q,W3XZ"b6aBhdZ-YHk,hYSI.>[F%M=PKel`;439o5SW&BU4ELh3[EnCX)XPiF#>1<4DT!J-ol+irmh%=X*#\6jhnT,?k0/<N@FDU(&?&[kIe,RDf,<m9Olm8XA_U-TLRV'*6p@nhC"0/rds%O<Y'r1_YZH,S4@G5bg3pgFL!Vq7it*AT^?A%cCf^AQ>udHr*m*NfeO5QQo[D4VLC="0Y.l8P,B[[nf:JrHREf)X^]dVEEHKcqeMdhh:J@NJFo^,1f0H1loOPG^Nl?oPg_c1\Cfiu%JHDqMI7Y).n,Z-j71k0Nc],#0p*KX_L\QE.J*:fu^ie]#a0GN*T8NrED'*G!81f+BlE;oX:l6Dr,s2.deW+R$Td=4uJj>te9OH^"%`](!HGfKP!G<GQsR/M)@DqFV68b7#g)fo>\m_>VO=ffQF\\?84;=!B;FF,(G"B\=q>dn?#dGDAPf^b3l2VSOpX#F]B*s_8N%tK_L%:7c>:5e\39j.cB9aZAhonA;n=\Ln2?+9iZ.fHg:8GQ,n'VB^P6LIs?EP6kT8jni%3m2D(*11Ic0?siemd42<An*^Q(b)GDJ^,s8e%*8_k0^6+E>hJt:[?bc%g#^QLNEu7[0Q@?gjL86h;Z=Lf<;C#_?+65j+)/3#ED<o&]KU^b*5bQWiCTlprRbkM>iqo>#hEC?cP.`VE%J2<(<1g])/4oX=1D[2tG;mn/`*K0hDmnWB<23s]ejrNhHXOa<,m@c9$?PD;EF*Eo^`!bU9Z,BbgO^`'\'qH?TYYilereG3n7X6IT%$XbZYLf6GO4GZuHs.G:;k`gBNE6=i9rLKNME1u9aNf1!?k4VI33+gV+_f_]hHh=_0%IQW>JD0HF"Uo,5QrCbml1]@b1q8O>Ed?Ga%hcZ_oeJUY&fSWjlO)u3bjE]<6]E-p'V0o(`="VHli^+4P`V-%j!?8u,>BigeP)a?\N$ZNpn-1SS-,+qeiNB.+P2pr[A%;]8%S+3:%Gq=Yc\>E9p[@V[&(p[gO1Is!Cn0rPL)=KAg8CDVY=imZ0P4\l[k$S1>Js6ShX5caT;W<d^8Zl?hQT9=6S;(=HZ)qfCT>M"<`bTjJ%`uWX@lK=fHLZ:nMgjf\J=k'f0INTCj5tpCsZ`Nu5V1\tr]$#o9S#p3)3VX=HQ?P(n@uN4Xp]\r2C_*d[-jO\;+P?;R,X&"/lNXG`%e^#27O>7G1%6X:7`:El@"bX4FX$I<L+U`5`:)=N/Kt),d)fnahcoa\6kE;YBs#QQ69]p]D#Fg&??9Qi/%EOrN*k-C_\hCo)%@0hr%0J%YZrV_^V>KHH7h$<'iA>!P#4^\B83VtF2?P@O33U!U(d<;dM+d>3\\E'0S?p`@#TgKW+ANB"NZIi^FLuYZ_f`Ulj&ID7?iY%?I%)8VQ2f9`q+<;e;EXi&VWpgq7lDkInF0Z^tkQhOH=Eq=piT1db=N!5lR24`H.G@fSS)8N3_2s)JhT[/>6+BVQ,pXDXk4JnR@M]XW=%T<f$9*&h*8[kO50Bc%Cr8ju+6a3)mhD/i`M8]t!5_LMMj9Qf5kCFf.1hbdmbB+fkL*<*Bt3=aE(H!h3.FgEI'B,uW`-sB,GmSSX&%T^8c-:-M3N$q7o$)^f1_0"d+./C%b"Z6rk(`;,:[*u$2$&DXO'"t8cc/7T[0+[Q]4B:Gd;pWHb1Nh\Xh][ms`'23E`K>0mrho%[F%EJ8Bs0g*esFAqooT@9C\i`\MMIid3:SDJ/K[=_[do\e:4atuT:+Ze[:J("ab)a9Waa4/:l=]XEeH%OXT4&2)RmR+.)*q"IW-d[*s%M<)'UL(7oBh&Ke*P0CkcHEceg1V9.PlgQ;")`)#^SfGj0k(,6M1Rn1ZoSmd=i\15FN;s-#5f\h]GK$Pm&Q#h7YS_Xk#Gs^;:(YIV%%VcnU/_O,1/-+R#C'c#\&<((M2!pA[7G%^H]U+u\I,?sj25tI_fm;GE*hg"8R]JW=0tm"nPQ^aK-8u5r)P")5LnFWelD1]fe(m-*%-e[f>(%A[S3H`FYj1+NO`2S,P9]MQ<hNb)(%G#Zh]Z!h;EM$/G*%J/CT)0W?F720Y9!82@GQBs74c'Rb1#]g+Qj2H?[<,_)/BjYS%bXYsY+i!MP_I7lq_7&)"aS>qUA5dT6[oD"?i8%+Tq3d16`TP,/e:!N3$Ra30pi4_i#/MW@5EJTiNJB<[SlodD;;b)WWqH21$;FnS%kG-OFZU1.e&NCgjYpK611ehG5+#a3)/\Vm&5H\T0PK;f@d2p4#CpL`YPd2p>cFn)bFG%@d*WV5Dl^;-1D?CV=ZZ%6Y.G8;HG'n?@%RlXg)XXT%=$_JbpI#huHr[j/IK?F7!1rPD,p\;G+"O^1;*"as"X9!Zr>_8ACIOC.N_Wm]^HAiCT=42'Krdfl..Fp-'ZfI`-\*83?%1EL4Ig-H-AVR;okOb2'a]AbAcQrb-:q0-UtUb<>C=Gqct4a=#5"FPSZn(5AnYs!O>_u'Rk'mAYnXZ<?id'Q!_])p@"BJl>-es\gj%qRtUo'n!;OW?WU%\)rOOTZB$DPOYo"pcV_krBq"*S!#R#-4"#bj/<&*q5rHJlHiMm?'Iq<!')A=o%A[IVDV/\,["5p6W,&pV?PUk%=<#oJMKrQHn1LnM!2nU;k>:F(Hb]5!;V7M'CoC:LCh;4b+:R&-CC0MLQD<>chX1-ts$oQ:HmI9,4SK?9m$Oh`D)Zm[g/*)Z.D(,s%_G7*=P*M;tG6M9F4"]^E:?^T;dL:Tt#)J?K=RkqR8'WZ]fA`Okp?bY!).M7un<`b6+9(fbs7*l(Y-aH6!-&fhVLtf@lY?T%2tT*,%%DE3!3o,JgKUl=4l#70,Y"g"aJr;sH_kn]B_-^<`#YqKiAFHm]mX;a=oGAeeW8tW.r#ct^<\NAFW-Ff#MsgYqX:JNO/:b]$Qes3l%CHG$cB+V21DmHW9+:G4f*k9mq95uT?e_kksk&TsOY6&:<^EWupa^]^"8<tt((@LRRYbr9&G`%`=$5E$DiaEi*)sT-H;CZ6)J0RHK%o-BN)JRJgW-G)B#UcM'-]J"e-JBHKI!'d\'aYqb=hc[cGfW>>d5@"']c8T&)!T5QKUk3<eG)Z17QahO1Cd)sACq\Vs89&3"iY>25%/2.s&1V?Pbko4que%:q>&5RQXhbT<r9ha#HSIS76E@2+;niMoRK<kZA6a;^S57PDi*Rmn(S:e2K>O!bW3os9\Q#]S?'Rnb_]>jF1%b%C;MKfF<l.kFjZ&o:F)oj&]HRc]#M0U#bER)\;\@8XQ\"QIl':6ej.2IQiFqb:>h55dS(E1e=ZZ77eX$E6S3rFTn[k#^E7$]@1Q%C2qNX^'7>Z@hG\h"Fsfn"K<e!^d):,gX7$]KK'?X/5j>F+9&9K$,hr_s1nOLnn+O*6_gLaJBa\iR%-<Rr#^D3qusduju2(=]tEg@%mZo/?!j34K*\DU\>G%i"pTn.-cLig3mqN7>ndZodSPR=oH$t!(1ic<E27gG9dUGTF1VSn+q8O%&X5$[<ddu5>Moqr0Tih.PMr`PI%hKf&P2aDp.TFa/uE?[(1JT$"n'E"m$4CN?<plDpsE:B2f@U/>V#bQZ//bQ%fqq/FK!j\JgSa4eM5\@0Z2r$HGU%`%r;mG3_C=t;/%REJZ#e2FCP@@O&TN\COS3W?q6.ZTEXSH0Gh*`<Q'R,gH#ZpjPE'+bH/HYpl1I)e%<R(hND6$drl"JG^j@*!:oYT-94KkN/hE/9m*%gH&LdT:,:3L^05l:D)$eg&Xc$HJW(@%@$9#b5t+"T#<.s]*J@d.Dj#LLZ%9gj(_Q8SGp3b)C9"u_J>tRX3CH'mB8\tDn63u'R"l0%b[QDdM4t(I^^o2]9="nXJp^j017\"LqE>*NJW?b,$1Hm`l[.c"Hm=Chqna^l>9S`UEBPrGrS>QP0E/-HNa]e`G7AfdJ<E_gq"ClF%NuSBooaHY/EPYYG(/*GX-k1eTGMKT/O?m+0>.Cn`9BH9F5-Mr:Mcqde?H*kaVY=^=9*4&.]jYZtkC<a?`c*OJm<aBka7;MGp#u=Y%7_b.M%(3&;:,F?o%V$.NJcO]%8Pg7AStV%d!q3n)[:t2UbV<MT3Gb5PAaa#HfX#9Z>[^cSG.tG>lSGEK9qZN/90N@k%#(D+3/^BP%OLHEjNh9tW`i^pSZB:h,5#?R_V.3_Yf8[9Vq:i2.2%R^Ddg^&L#bOq#c#>7nN!Hp&mM#(QQANNK]-ZY=q,Ct&hS4-l!XYIsG0Cug%JtEjT9?$c&8'lG3X12(Q-24ICcD'qQG07]4;-7OD[2="W=;krm2)1k;l,<UdP&sCL^V?P#r)T3jN=7[;hu'8MhC7Pa%2_4*a@`.R%TMTsU8hJWGhD\@5S`)C]>+3!tGH3#%?IbBe-m,>+W]`eQMF2t_@N,Xd#U>!gq$tEAaG%157agFIA"`h\Ir+:2<ESR;U@PqS;<uea%<PPm?RgA1=`qOOIq7jh[UooSCH2Y8!0Y;LEIEa=)Me&S#G'sY;;rh)dll#d&Zp_QO;tK(p(rW922*UeD`0qgXU\[Bb-FH=agNDck%DA!2>,]WW+6Vl``4"TdA*MActJ>1=:q!o0i*_Fhu=ba:<i=b@1HTO>??3M!fP8PP$C9$>P9S-X:hT%dRbm][]63ba7e(OF;*Ta)c%M=t#E3J`*f!T%mReQZ(5!Wl9\#j!7a`!'[I5!Od7l-0QO_k]8&?XB)%LuZLZ):4W:Sc!=janq@^f6H-FXon,GW@XW)/c,S!RYr1"%"*>,>(8PlJTqp,.:*%UVlTr?qCZ=JSDHYM"@<qIp&Or*hg,+/5LeEKeqh\Y^QjN5'bEV*GJ.<34U@`K!im(auL1)tgD*5t`&M6rB%?&r1Z@;8n?Zen(L.ehReTN"SW@&f$m:$^r-QL2Nhc"'4=AkU2hB\PO6.,d;qiZ'$^$(1igLg8,ZaA''iKJ>kC61D?XJ,)l\XCWOf%aX!8`qf@Bl$"fAci;0F,7_1nJ#aM4$lc`j8#Jud$%KkL7KNXisq0"%G#iCjR'/H[k\/r\bg76W?h+&3UUZGpG8P`JtSA3BP0H?<-%0KdmZH<`&4$r!r#Q)OuGo:mQ%4sX'XdOGPL<F-$5N8+I!I9o-h'Gep.V%Us56crs`&X3\iV'>/q[nI(t"u5$):F80>,#Wo?g,h%G%60r/20,#.2%oklG4NLqo_9spb+DVIO='UMcBZ[@nVNo2Br2FNgC9U[2p&VFo:G(/h@B%U7Is>:(pF(<B=sd'0(-F`3VEh9G4mUt.%m;^IQq"Kir;N<5S<A!fP8YoRp*kTGc^9TlO=Jg^if)0kEhS\74Y">:mcuu(oZ2nW!aq$dgh0Em@JKe[3h&e"RTrm-@g(6*F9].i]%%VSoIX4dos@PO^2GOmF2DJ_YSjHq:TZU4"**LbDu';7hk'=TiV7=YpGQE3oD#[C75oP2-c][!2t[\](thB.U9('bFtoAs^Y<M&!N%<7YOEk31%<';*d$(\qeWcEY$eIWG(Wh>?/(Ym(f%OOh4qnTldP@QVB2#XkblRKhAtS1%^OAR%3r=:U`8P4=62B&UbFh'CiI/RONj%jXk:t]K$+Fi19+N^a(MYpt#r7dLo8tLZahk8`&He(1BuG&m6cA]8Q<eOgOBppH7RNrXD+')5CXq_<uV8I<d-W53-spDYEEd,YQ2N%VoUS.o20SPjduN@5Pnkr+XQ#YB=lp<P:T/Kh%BIfKs11&,,`KrJAOGsiaH*RZTT+L^4l2U]mDJqkTB61m7V>8"dPDm/,(,`(H&V[%VMtRNkkKL=Y`qSo]_<M[N6a4"@cl!pPe6PemQT5soaUi+\GW@D6]>SoF\t7PqV't$EogYq[SpcEEuW]@CP5l!X;]F_(RLEtk+[k.%8dkR[/4od'5?S'fYJ>lS]_^5+,o[UYq)q(a[AsEDRrqu54g$K)LNIrCHVSK$pOi#D?jMs1Gh7^5*NC\)4UWe[lH08&m5=(3#ia*1%[S4^i$Stic>fuH0npNkRT^E4*.>9bVcsQU]7<o&s.PQrkLP6ST0C*l?D6h3M\#Kp-H!0mb$;0<+UfqkR=d@nA]DM7B&,<VhJnP9h%qV-XT(P2\cro[.<5oK'sI,eQ2:lOoJf)Tmh^41KtVT8;Fh`-$$c]g''"3'qU_LD?%Imf[KEa.hO-9^9Gr;&.n';PIM/UPMn9e0U4%DVV=o2c\pY]Wam1k<4bd"I<rmL*k>YR]c)24YCsBe%-r%k<?oW\`_j4X]$cZi-/$s*8&C<6\=:K(u^5V'M(nC93o><Wl4e1cPm83%q<^l'd[>]<G8Ht.R`s*0'C\bflB6&9!OW,&?/W7+:]3#6iGX^:MG0DWd%lc^\_I^cRHd*scKE[d1o)l%0cXC)8ZGn\]PmJ:/ug6>%.A'\ohrR5#"h^96</YrU;oRkQLKsL9H<&Ma\T\303#ILUjMHH'Ysr2[$q47<WaN]cr6R;dnot1[</P=2)5$BPUpbd_+oE)'_=`q&%Olnk=%0d=jB8f4efb=cClJnbbEu\0n\3Bf6IDNF`XMNG<?qq>jF+a'>J6KR^",M`3Q#io]4#D&<Fd_/6'D)2g/7k7d=5Rs59r`A_%VF#ME+U+994>:=@%^6$\g]?r[.niVo!K"h@H<ud8Qk<OWbf9:B?l4X83#GndR-"XO&dpM0.!.kt#>I@Q+$a%>$=NAATa,P;4)bl+%D]hi7E^/9%BU4WhSt*daep;obYV;0n(frWu8X>@g""=fW]&-dj=<'%I2P2CfOGP?-1?oSjH-_/V=i#'TH:nK%MSVRWPRP'uY5jNh%P9!EtL%J&M04tKl&?&/<CB:WBC2XI<1D0+5/gjuEO&6qD.0sBj;s[<h9Zerg.$-Ijd/.n[Xm?l<T:3:UI&NoqK*CGl;@[L#fJoZ1%?-r\i1KGZ([UQ3;Yq6;><;ur!Wie$pamj%/nrZCPA.RQl_(p^!_CqhTH[Mj*g5\:4Q0@m6We!3;$HVZNF<DH=iHJq!=gAOZ9arA^%9M6FTR:P[,3+bnb:<]22BQ.?.k6Rn<9u2*f+I+6UPnd%\,"KHYYXjhrX?t67>BO*K._7W--Df9dW;O'+>O.&Hlg)T^*(f(b:tr61%XXMScd_r->b=Zn*<8b"cJ>6,\@#CU:mn`:9S%l/1jQZETb7g[\A`K*ddJs]HaO"?mFir6.I&:P&&i,VbUb'YYlJP'l2"Jpt`3t"W%b!V2_qR,O1S8<H5IZUr]'`h!DSW=XPi%,^Am9JKbE$Qk[&/hHApsG$De1aQc@+c(W5e/LMWM-i+idf#C?!tN3B^3I\%-MinS)Di&%:=m+_+NHkM8fZE?4!D*]$amg/[3L)+'McQ&=sEUeeLf6SX*7bAW')3>L\42/Uro#HY"9E>%?R'2$fUp+,%'I1iK^2bcA;lC1>s^C%]?\f(A*WM1>LZWbUZSb[k)dH0HoCcZ.ji7uE2s>?(UP0Vp=gV03a7[20V\XDl^""2PIL$-g-l@O6f%kR2uEI;'g3lKLf$1>*(NDI%Bnc3Le#>S2m!A\<[edZ/2Y(tqb)EgGo>[od$;A](/@#bCg.cI.dfIY?`L+:amaIWtWprq2"&hNlZ8sH:@T"_Ta=Q-@</\,:g:'C#%=B*J[A<DSC`a4SfWV84=gC18u:N]+_'O$ZejH=7]`$(Mj^@Y<dJZJuN'dah(Ne@J7YKV%15VX9M8n;'oO%(n2TE@iPTsX6ue%hY8%S7V$3"4kIYf(MHaAal?2L@L7gl^aZH[p\K0S1[I[Eb_`0MD^!s@4^.<`e:"TVNt@XSrPNcX8j?7fk2m!43NG@JabPdC9d?@>gjt'%pc:ObiV>0$+Xe'TQS%jo8hCZu=eINN-DVo69M`8FK%pg!R#1J?m5<2M@T=_KkhFO@h88D5U3NCbL9VrqJ?aj(M<@F["JugN#=O.]%L2>t\\ej+1q_=$:iR8bp$]X-rEUEjN%?W-qO8<i`h_B=BR4:W2@Z.Lj8q;p-QmBH[Xrui?-233-@uVViScKH=?#^]2ea:<sFQLN_%J[OdnTJlEg+BlEmQEA^&AN;uboE:H*L\7K5@ND>!b..34:1&$/ZX-/5_N?@K>jV"BE$LB5>-8ih#ni078U;0pkC#&QWO.)&F7L+d%\sopXl'Nfi%1"i8RZNkO!i<S/oW#0P(SE84mU<9;qUV8ps#dAm:\M;iQWq@SnmY`D[SBXc]fiM8Ku^TJe)*L/hlaE%ilf(Glsb?P%-B4?uMlGUoC9O81rFn+ADZkF;4ttNY;kMl1!TrE+$'r0:??!"m`k$*$WhLo5ctN/W9"pqh7Ii="^d1:82n\HEEeHHQH$5IK`SD!%%mL1ZJOa,frZQ<Z*>Z_Yr+U&=KBUF2EgeM-f2R`:HfG;_S9#oPt;k6;Y'Yj5:(1'mac%<0lot0E#J*7d%nuer5e+P*]H;n_,$(W.>%/=IHPU[DoD_U8MjCS-qraBDJTTP2*DQ^>eQE7X3AJf1M4FM9rPb&U;/L<Kh\=(%p!gsr?([2E*Tk@[hp'MA^t!KIstM2WiB+*$;?%;q;L<B-#dbD2.G6D&b4ETT)LpCFSLi5_2qM-!mC^$htb&a`W4iQ\7Jo>ls[tPJ8kg;"s.c#-VUlH",s8:2Ik(Wh0o`c:3TsaerP)%R,2'"R]8k[<.lEG)>Z*(8;h0KQ-3orZU8&RNDBR6,4DP?-j%:q$n/\S"lZ;Lp/O-$&O+62WsRg[ckCnb5)54p[gAJD/0Xn3.`5C0%69#^[$?>/tf#^![7Z5WT+Ug5FVqaO?\jEo9WMI?e8VOr9Cs9K/`.Z_2a.>9Mf_W=PZ>SXi0I#T*+<B3`"*08E&m8fk67O`kPRD!K%(*q>(W\q'^`ql'#gKAldiV1h+R2k64RAO[@Abb*P/`nmefe:,.,60pK!\=%4D4)jYK.ORe3P^=Q6%^X5F9]K]l62e#ai]]Tn$^H"%%l+i`;`f1g:#/)Beqrf)7"O,.dC.OmV=ODhkW-`EKkS>ki!:^H"\Gkt'Lb.HA$RdDhN<C17(MbT-kG:cF;5*BM@<t(kHnb:7koJJ%:ldtaB,h#%''SU\;)2pIT+*BD*ph(Q>A;6$.2NHrLX-^.SU_-G*'!9Y"2AMtagt"8lR7C9&D)!?)uL1LA3Dl)72CLDUd")Z*C]7i%X'WT09<&ICZB`,gY)eBqJk$Dj8o?"UIoN"4`4<W^c,rdM--5e9Yf$SXphkkQX-Z=R%P1]'A1R>Xo4J!JW42]5i)!W0I_ggA8G]H`%BDu/S!^%FYm7:6]7?J:<ZCG8jSHaU2E]>qgYn3D9MI47gXhM1po;a(f5fFF9q:psQ's:W(jsD?0;(U"9c`?D5YW.lc<dt[NkP4JJ%,2kZ+(;G4d=2"5i(a7f(k=W@&=Pc==Mkiq?:<AK[U!DthaFh6[Z\k.Ir^^-V7YE;j7$.eMLM7N,+h*g\IIA@F80nc#Lsc9V']?^&%F"Nc/8D;8SNEDoq)8r'o\Sd0.lnWlr^jDQuEjtOXJMffCb1#'*"Tl?VFKu1E]P2]*TT@3A@_0OB(^]N5c'ieX,pEIL,l`2@JZ3Oh%()$(_k*=)lOUH,Sg@G?P%XD&Y#tT2G6W;YE/BA5DF])e?Ze1W]6k:9d.LOk(-O`-Oe*0qE?YNQt/ips?,Z,UHcN-MMKn^.<THp]"%'O9!$7c0d=L\7Ee:LXEc!_g42om@-;X+brK6(p]\YX`\g6Y>MPSg.c&Isc=^T.7=`(7+mRF/XNpR*ubg/6D2,O]?8T_Clq)VB$.K%jccLcCW-7"(VRu6c&t0FKbM"F%+WH\W2F9DXu'HW_;%j+MX.<1/uC0%Q4/9j:BV[<!/Hh@UPCNo)r^OQZ.LN3ZQ'qP0heq.$pP;9%Wj_]!![tGqI,sJp%Me(@:Q+p#UP#+H^jU/?X=HJAB*tAK&QO!E8U$Y=:&&aUGfL,ULLrcr\pGg#2kY!fgTEed1#C(.9)tnU4#f-4%cZ+/(MN^dm_/Mm;Fi]qZoDVP1c8kdH3QP"d<1Hm.%Z5[q*7lUe0K69.(d3RcR%E(*8gDIlUatg''GDFN-8dD0("cWUG2-!(F\=$c%FU57@#%d%dShF#JVG4(^eAk.2'LP>t=O;q(K1MA&Q=ScZ2?lPSkAT6T6oc:5*m!!h$FcLt+Xj_tNBc@3i^hG;V2Um`TN$XWoAG)L%lb+lb-S[Idb/Y`JI;>9gJ)t6"Rj5C]:4J<75I_T,kL;Orc3nlA'^M51OKl.`R"]h"Wb._BQ/[2/:;Ag(OD;2L"]m*ImAAtr\QZhn%l>W\R-jBC/5EGoZ8N$MR#1oorea(@c.V!,He7Li4'2nQN#&"miWGr8rDLRR'd'5r+<>AMN+KDlQ`KEhF<i9G22[t?g\nWsE#S_,i%lM=u?<c"6(GgdbL97s6pF-9<c9fA'.-FAIMHpI?u-#d]cAJj^if;BP^]-UGR.dHZ<,lpVpVIS=/Cd(h5>TKQ-3q!_I_c,5-XiEPj%@#q:bCfSa9CRT",@(Nil`iTdbSkW"L!kG!InTW*p<,*PQ8De[WMG?'!q8qOQf?P(E&hT[jIDuuL?bo:BI[EFM!]G3=AK4e4B>:d9%:+lf=0PE+kq);YI<lLq;h<monM3dNejjqZ!?OEsoFX*0/;T+X2BXG;C]@GlQ)b^9^Ru5k'.+d@"9$=k[_\#sbP9I:t53ZPb%A[TJ%A1&IKBesCdXP(5afsq0LXqdY1"YG;p6*OhOO+A^CmI8E.cpe>6RLKkCR=75^q@T?Y-R0E+,u]Y;W3n:Lb=S9F@rW`&A60nhn#=$-%1"l<?fVrF2F&L4D.AlKZ17^m.,:rn_'ZU9VT'GlRme!le%PpP7>8%;^9nR`^BCe])U)_9`[H+ik<Y-4?D3-GgK."(^&rMiogO9:H%A-1L>RQ%Vl<^iFc+]R*O)qeBVWqAKHQjmnuV-4Bl8B1_X+VL_'SlJ/5KX5%6CKBeMLYB%5<FfT6:Ir.j6nbY?9o:dS_9?bQ72sGo%Sj[_gXG?7^,gD%-,Pr-j5:E]%MW'7Y%^`GK<O=0aAnA[HR``!:5`2hMhDT+$8:r_ST''F-'>5'Mp8Clqb9CO$L#obN.m5Xme'r>4%E2?koW)fM<d^en-/`sV>;qMuif/#SJ<6O$\KrT\:RD>+^&oA7GkOGa3m3qS"nfuDOVI`1f:8pOhq!R@-cDuEDSd8#OmlSoo"QZFG%8jt5N-4>Jg&6!E?Q3`TJ![/3dT"GgUMU_5hj"`%D#?ruj#eA"-VdFn!]\i-*Vh("<hOJ9&'L010,e6.6BB8ToC=+>KeV3NU3fbQT%ZFD,]1iH@*Y&^WgcQXE"*o)?s2DImDS4q,2;e4k;8p$S#b?_R*7/"Hn,$\RFCA5O6m8#XGY7-ufk]BOogJd"tE>ZsM@a'c?1nH#'%=S/c\T(o+91IphPO3/AJ;\Gk)\eG!`:W4M3)]'XM8\^Jd,i'XLN03_L'_18!RKrM+[G77S3Bp<fnE)I6HeT1DCj2$)I/E`"+(k^2%HI?(UP^B/LL"Xm4Q+@snQI!>KJr(W9\#X;ZUnRO`DQ"#Y)pVrOG,O%g4_V:HA]t1<#<%4I11e`!?EfEONZ]dt4Lar=#2HH?hbKjZ%=oP%+3bUs@h`phK2.H=#h7H[MT+!<JLuAY,Ha["-WfM+%W>21%o1E%<)'@X04"k.8?O7[m@X6*\]ZS<R_3V>Q8;6I!)[6rr1;d7d%`@-%I.oQTC4QTJ"cBLEGdgtl@Uf2f/M6H8&'VGP&X<8BFAG6q,=EmPZoO0;p0[)6)DG6+@j.LXTD+%#e'RWRkb9N:'6Rcu%=X?t<%g\7\&EpjRkY9OGJ0&#=:2mK9Z<AB!.g2lLSP94kg%?@^'b2Xn/Wu-AH]f^.[>)omgQoIu_EaZEOB:oP&&TZ5f;2*uf\jq<p@4>Q<%/g0gaL"41I`TBW39D*HTk@,lcJCa&<A(mfI*gE:(=4#s"n`0Op`-4oU3iH-9L347_P4G\bl_0=^W.:5eK$nT.>uZX\$[nRI<,[H_%D&NQL;nd(t\8i`<QYR_3He+^M<NdsbpSVDOTV[-t2!ta$ihOCWSdOjmQK:1L:S`W*et28XnNraSkGj!F?3qPnJj!W#(LHn=.#%lS%oX,jZ30PK`ER1C&JVeZt4j'=BQpSPhHGA^KM"5>/D/2=DLs4&=CIi<+dh4TMW7nnk;n@Bk5O,FTZ$NJ5Eund9-!\++qP0@d7%!J1%bZq2+qic1o`i9KZ/`:mRA6@?dV+U$JJ73VWL-p3DcW.sL)`;Y9(fi1lZ)\afnp=[DRba=5D,tB0`p/bVlhbCQq2)CMZ,MQ+!.k!C%V\I=aMCp(C4j#+q5c*A[.F4kqXffF]!b=8_^U:[1OaT^#Ff'E8G1ACW/HN4Jd!Fc1m0[E(AX[XTQ@JnI%f7Bpd(Pke7^X+U#\8$B%bB0l[rFT7[h.-ZfrpI"M^[HX-V$:17"9giV"H!rI7PA0-3NQ?g??CjtNO%q$C/FRo<(VXMZ^M)'ba\cD&(!.#G)'E"`^X@*`V#n]%V2U_774nf3QYkkKXnrAiqh_0O3K>0AH+)HJ!B)9M[:70eK'6gWcj4ipRRh*kc3r)fLqC%1ekLQNTrlA%J:tbYFghiB/rqco6Ia@h%duCFpZ_n[F<F154"&Kc,P%.)gH%[A3=J.;Y>;PJfhd;XADRd'(jFCQuGlaUg?h/%u<sbUFT"!_%$P!\T>36QQ/_OKuN]NV_3"r]@%9fFjXVh&*%*L@]@ST\8N2_7rPB>u([X!_5T[Fe\kBiC(K10'&8L.7`C27rOe<JSQRqCgbm9!Fb#?:CkRW^8X7Ng^Z:>(!.j$GHW9%o0LRh1s3Wg8Q?1'pacl@C!*42K4&FHc$')C!PBY:VhT[kY+FT=A[iM0:=8JH>8jX?e1@D[G,e0?!#!;q^?6YIDe[G"1uMb.Jn.$C%MViFn\7!f$qYcFSAg"N%!]\E\#<Y"u\Z]nX(g9WFr(WpiCCaWgrl+Sa7sL48A%B*R2$j3l4G-p/Ls4WV)<1CW]!X[Q"CN$>p?:[[%o##%$.oE^=C@Rp0EmcI>Y"G8l^h6ZpY!eY/7^&CajHICY\VKOAo]SSM=>5<:ar@F`=?a*S7^]Y'S:83?75:&$K%,hd<<::I<6H=t%MLR?CT<`B?"CA^2p@`%uQ#N;[Zl\M.].d'1^N(I(DON0HIRTs6Ur-,''HVrll6iK>(L\c@-I8>N@OlsjSjtEdoAWuk'Uq*pD@&;A%7Qi?$iQN*ZniWd9\(3-pfUEeNP@>;X&D/H<6BjT2:Y>fk"fZ.i"!1`*X]P+U\'\s@B*L]R"W-B&NZUaU:(iTb]/3]&(5OSKFBi1B%H6$!Y4VG3=e]B6S5D<*d1bkZM&6jjilZpG*SC^;>F,XI(,fJ'GdtA/YDd:GX5V2FR2'J=Y=1'YqC>*^b8:@1s),%+MhU5)?`V\RN%F\`d/4OPVUi[!rmWQ:ZI1;l&N9LodYJ;_DG'IP>]nl<HS;7oa!AUZB-?t#0TQp$b[_?_\W1U49A0g=)&I8]f=i$#i3cX3NL+o2?K%Z_S--]Vfn<2/JOeB.TfT4%W>`hsGDE+)n0IqR.HQYO)<TA#Z]I3,dp1oe\)j9#EKmAQI3mZ)pKQWbODN;5,dJe=c>(3-UbqLhe[e%W,$#RL/@\JC^=cj@6QY.I.^sl,)6MM":U?sCaoKIdk4poicO@I--Pd4Fd/0*+W2lpQRL=h7[i.P5m@.i/D/X]4`@#LIPmO9Bq0_+%?BP_B;,aU[-H!*=.Vk=S46/A[6%ZYU@N?>ZP:e!)W!h(BaDsK_-j+DEonVNEYAN'aikU,o=6Am3`Y*/m*cCDA@X?nNi#"Ao.?_\@%)DPe79<GE>*DfGML)f,t;]^(>]FSD^AcK&=ji5/cMt>,BTA>)1AB;8"/b_jUpJ@s:e$GHE5-Z:G`>T-M_(l)2bB;j0C]7)>rO*MJ%p/m_/&HTtK(n*A@7$1YL/<)X_;rUN.h_K+N?tQqRTHr\YX8T3X`fhSN6\OUA3[L`KOjd9<,oecWoE=0!)#qr]bY9K<&\?,2514ij%`2B]&)D]#LVNi&E6pi43k)Q58<EOu^duHMNW^i./A[^Dt9G-tTMYtaB)(XW!@nTBuI5\B]+FZuJ2[R/lAe..Xhq-Z29_"8kPS3"D%TZu"b#1>1%qn"!o\0Ts]SL@br*T2:nj>Q4u+na0%"^+5>[9iicP3eQRA;ef1_A&[e_N8mQUpqhUr1BX@s*ED5B*32X>W5f%=B,5?%74cGc=cBihGchrZ@eq?]"WRsder?I&b.g"SrOne/Z%i-[@+Q67V*\hkRONIRM_aJVMY$i0P@>0s7_L8-W(Opj7at$Dae,dDrN4"H%q-#`5J4F9!&o3V;e%"KOEbPf")&"HP\LdRrX'[!c_@B_iC_5H$#Jd\_%;ntU6Fk&Q!/0p<GX4d`LmfU\L5NMV31f@nVstKd<FW<%%Hj*W%VS+6%WXFsb1FuX,n:A':o+iBfC6SdW,Q?BbY\5L0dj%G@CTl:N%A5E3&&1hGfb<&lJ;16<H_hW9?I$55^9Jp?%Vs"TFG3:`%'Z8(<mti*EVLCW,<G=bn\CVDYZ2n79@^6,eqQK_*rY8Ol%bSm-)cH@O\Cin?d).X6SO?FHBFP[X-(H_dk!9:p7d\Y&9i(VHdW*80%)CWibe(Tq-XBI+?7V]6q*,"h.*?*q.WhGc?^rR'1!0B2rZuQ"Q(a+faR3SG\.4E*1H6c%51Fe5(2;*RE37_uhBe[3h^=Hr;.5p@X%2DXLIXYc<kLZPkmZC'</.GC^,&[knp@ku$_589G`<Fh3mQIZ*H!X5'4l87Im7)1C0Uh;bH;b]Vfh6hH\bgZ<g;iA!3RTUC=Z+#EL%Vb.O33%T0f/aeb0YV6r-NgWi"Xf?Z<0]5iTJgNTt`55T48r.&0c,-3sR].N0oqNq?OT:A5Sm3=jpuAuh"EAbVb#.Nk44C'Bj(=/p%)"anjnmD#hE,b?uW9Fpd,NaM4cl<ui?Uj6`M-)TefWqRSi.o>3:eZBAG(P3q)E;6B95XPaO9L73<FM"I)7q1X8h*J?FE\m)qR92c%bWqk2Za@sbRh:nWQuj1ZVpp?lgG?%WjJ!:eT%\0B^)KJEpZ39U1M5hA8\%c;qX/!p8u@KSb<TlcT*P$h7l36)HJ;2F^s2f]jEuZ6%K=7$(>4s$>[V8e#2&l;7KI<DCC`lNX$me$Hd';e=MhR7WeCUR=L:]fQ@CCmpX4<$KAk=>BTM3QAKof`7X>r/"J3e/OKMTjl[B%?%%![hVU.FV#$7/45#)qj_^?S&R=+7(%3j<k8td5*#*m#kE)+:GQ\mU.X/9Qe"m#IEbiTK]hhYZ3EpKR>M<@ICpgBCSu4PfcZY/B4)d%XG9&2d8%366sQ_$<4HNdf?\95(>*(J\W/6XRn#f:odN@iAG5b,B)_p=^`aKjW.k-4';0BTP_+QQ(D4gI0OM.[8Y]H*Ul6f&amL6H%Aj#[&%*_,;5=(7QB=2o&Lkp<lJRj_i_S>5[X2,S%n1B6CkJE3>Gsul?P[\,B'%-'DSaX$!rk/*)WN`3Ge_$%Yo=h%CpWVEDLue3S%ECNGZ2)D+A#h,DVK^MQ?qMV$1p`0#F1/Xr.5O^)HZ8H,ffP28*>/Q8(&kcE?ROlIqqXg/Pii>c#54>JtPLrg\DE6R\Vm?\FYZV5Z%/Yt2GT\5q6N\3Xmpf#D91mNEDaWWt_]a</*(,JQC921!FULXbP<t0n#U[sW(V?W-bJo4PGQEP%5N&Ht[Lh1/EFSI_`)M4BT!glhj%\a06bfbE1D@U2-P<NG>FQ?Iq,IAuMT!j/Od"I^_OYmHgU^nOFfq/i:\<3rFpkY6<ab`j\[20p+<%,36HLWe)\]#TOl4?qkl@^CRh%gGT:of!(E4aA8*SKrUZ9`0_N@/g1q^1Doi"MY!95[*W@UVK+C[:7_gLo-:05m"qu#QX\^NT,]3d2-9[F.SJdXo`=k=(*U47fX-cu%>&m.@4>].'\"FW+->a[\2!hg)50JUt/hKK[LYT$^j!+N9,p8I7AS`s6J>7;.ri7TC;mto8'u$HN>Xl8e'fuhhVMa%68TS",dM+)K%fjN;7rV`^-$1FiQ)'JG2WUjrEN7)@tG<0lCc[t]dr_s5-XNq(0OsnP)>68ahQ#5+7"B:7l4"rDo,u'>Wnf\$lI#:XQR$Q';9`elE%,tL_A*S!a$I">p+%hih-[)"Q&>fo5(.CTGeQ(*!^3bHLn6`A-ZNq.9KCL5-B>T#9Es3IgcDX'7#VC%K7ne03bkASuC\*N`@J$taE%kBDo`g+?Uu9D"Brr<ppHA#72/AiYTY4nM,jbGeIsZ?K:]Y`+OQO!CLaM&;qbVF@9Hmd)FBl30+c2>G`+,F\iRSI22(oN6GI@_)VY%,)H(/'W41oU3s<CF4C@dV6Ht]`*hVF0kY/4(1T@3rotu"U1b2cAY>nGTIXKkPFFW0rV_Z]T?nhg\?2([KO.eYeo:Ws4U3/$n\KB=%R$f>'?dGKjS>.iC7Kd3S1$Nc5qt"899tV@:UP08$8EFOl4b=8/a#u)O-k!QQ6Wo9:4XHA>B=@j8D?n5P$)(W$OIC4-0]#O%Wh=V]%Kl.?*./mJe]8ne)6C23d9qN#-U>dTa4[VL[<mV4ZgWFAd8.7>1jn843"[7T*6/4&QZN]?ukKQs7YUSrFYLm=`]96j'?Bt.)TaU>"%:up2nZE#>VG$a"l<Fu2m.npnmU*M%jFsc-[$J=G&O=4A5A:oG5JiB:%X&@Bj*1O_m2DoW]4R62;"OGjf`Hhe]h)UNJEC?H!=T/e[%0GTblFCrWs@J[/m+$$H-5=cI\'auoa+a8hoU,uqh][DA]8.G4./$YXG&s/]nddu'J-)CSA$>&+_?IM;MX/Np>1i0[r"G86PjGo't%&:P)(Mq]_,$g@jMoI<toZn.eCi,2_[Ur&Mjc76f-B`kH$jH>CuD:Jfi$J6EZK-e]?\+N<l\t9s1""=ZMEOi/BDIQa-'1SO0#sS&b%1_+'%YGIA*<$mc23*SN#,i6UnZHd;QF^k:1'9+9qMT%4a1Wb=K(;7o<6RJp//ns5Ug9JIU+ZSR3p5>KM4O&04!eotHk7Dgs4IO?`%LMPh5Hq--s3qSrOh9P55+hAgW2PjNk$7#9iaeU5RWJeVkpDIdJ<)U1=bLi09[Y0M=9VNe&bcsR#VjlJIRn-YsF/KV+OJf"]Th#tK%G*ZP'7AZng*Pu9I"@<_-=)2H/Q5PjYQ2EEHOFlX]_RS9q=7(SAAo^;]E(a,I#5VY;ZNGis9C*`I5'bk+\rkN^Ah>L_:!_f5oiQ$$%K`H1XPn-fIo_.IUEY3d8V(FR&<(I#YLf>D1*@?,['HbXMWo1SRPhSrQahs=[QJ`+doQU:^mG2e*guWB#/LqOH)+qa;C\7/#!f]ek%?Bm!<Dj8OjP1B*W-iCCD8:rPZ;=Kd9nB9.<_gb\nP,t*;j9uFl=0lXb,6/]&5\O>#;8HBlF5JRe-NI/F[GPe*JU'_%TPL:D7e4c#%^:oaP)dE]1l0c"@3*u@+Q+oah8514-\/N>HBa)?ADO!sjkB@Ht*e+d84EOL?V#C#9U*"(_'m_PR:eP\5;Om`FT&a[S;><O0,*5K`%PH+=oY^42VH2]/FIsR*hr5l#<c[Xd\aI\CX-JomO)$@nKqY2VkQOd;tZf`;IQn6f@qQm'8ZaE]YO[kG?9%NAp%o`.6?=NI'VYd6$%)`Gk20pn78S$65H'Na3WBjXW1$%TBg5:KkVCT&SZ#l"T:,(F.KP'6+;4d!<P;sr/nQf=YDJ<uM;j2"A(5]LkN?5Q*TV>5MGC&ln`%X5WA9V)=5U,Z4@#jr4UVG<AdHpN-k+m&GXeOk.>RFojN_[+M%>!7c%I:+rRn!/*1<D=fsP26e,GMY@=532@b)Q1\:9%DRLnUS[hr%qQ5qXa%GY7UD7#g;D`217c]:+rC]?0i)j+r83=no)':T_"YF,N)W@uP1-dp3X<2pH9'nF`W_pH@ONK4S1C#0BMqa?78Q7RO<FGd4%$ea:05[f;Tm&K#YJRG.aF#24n@+5Xh^D3RkiX)>nnQJ3,0;?,-f:b?/f8cuE5uqaZ%o2l3M-Je0AMF#>:8CfS-&%5[!2EG@"PeN=%p[\'DJB_udG40@tUnmHYP`!g1_+t<pWVb(u!(F\cXik$!-t'^*6]W&mfC[+-FNY0p[jk<g#B:pF4k]#kgi]@TY[He.FX"?a"1"rY%?lSS8F'>t=F1[%MS47ZLgh5&`mokMaS#f@i0?Ui*I5S0SYkh,0LE-D(ODa0`M==<HMDdsAp:+fPBl'4'D!FEN!Sb&#/<qj9q95tA%b6to)>07=01-uO_.P(@Cp<&!kASPC$2,,:<::G6ro;"Lq#1JGfW7#-n44)iJe@poVm@0J@(uJ\t.$sFc&.%!sd?NOYh5W^^LB/BC%7)X/j4@'WeO/u5[ApY&NR`XH3`G1XQU<irnoZ(<nQ+_PZ._TY16P8e3#-$AS4u[D,f]C!0$JR%lSe($WE6;Le*pHGg$`]3MK;8t\%fKuiF81Y*>Q"F+:lr2B*o/oU6PBfJ3joMp!LCgLUOW6'>75gK)YNp<JmZa&a;qoF3h;0LXm6>Z\hdS!fZm*P!<R9=,rYo5)NVed&%]ru(ud:W4EQRVG%m!I6o)-C<C*5lkX%r1$Y/%%?(B=g2TJoIlpFS?h9&3WeHK#3.@LMR1;3JT<ng?K3[nG(fIKRFGCq+S<s32Ul7%'bi%^EXQ=!*79om6&KbHb@s"DRV80og+b$<it67%nP`$eLCJ%rN8g5T=+j4rZ5nFpPis>+,qn@@T&rLZ\_#5P.#QA\aY02(lV.>P%rPTg@p;>?[&gDji3sWIf\u,l@KlD$bHL$6#:-fJO@L%i0[d7Q[;[[gMG@68;pueIVBUR#(8[g317Wq=`\>]\=oA(1-dg)ZY_.K:<%Ggp-SY#9-q"_O16a4-u4!4FCu71JV)`TrcOCFb:=jUlUn1FABqg4tC2eZ-*V^kF("+h\o_G>B0G9fs`Opi0`(ALD#uput&&:dR2k%pP=u0MeIru?&q\gopaL=_sr`mjL`deB<dGho2s9l[m\F"Xg0FE3VGQdj[@KGeNuoh[XaAaH]E/'#H8r(f#0<]e$BQ!ZnId88IM3>%aI;YrC.bdb@VRqSS<HhQ=BDcoVan_hZ&3VEJL?aQ`e#U^rMG4#gc-AVDYUF;&/Ru8E1oGnbZk,A^9KMk-]KlMLL8A$J3E6A[=`/<%!Y0$CCo,mncJXH*W%Z@b^1G1KV&n8S(>:>N2BXM-f6*>%M_WkJ;65<Q1r]k),rPT.Coc5;kuQVZ)Q+*:AS,641%c@o&,5[`(ss1G%+<b7GEma`O;AX#`mSYpUWaBBToWZI!,(DG\8t%h1&Xu0(W_0_D1G(R-,J%;XZYM]F&*/3S08=g-^e87,*7jguToa_IG:*#ao@-)r%oDs;@eg1(\9l[Io]oh-Qm,+'e;bS(<,V?i%d$^hY#GAnrShSjL=Umu<:YHmg3sRbJ=RKHU3%Bl9W#-3_?l;`I3<)$W^E=FYXG!R<%hGqJ4]d;<JjGitl<=cn[dd20&>c6K+RroN5[q`)+h/<XpD(9>\T=Y1O+,n]:PH@=[MiuZ#bOh1JKX+i]L3A8P\90"[Y]gBB"i@6e%Bp?7f`r^pO72&Ac:G%n(`0$r"G09$jqK!@B(m;"'2G_]>aju*`p9Ol%1o<sW/fcO$h$RpnGpo./V8kY]#*okQU=nGIL`T;=D$THf%#PPJV57C'MZ&WCHrJ3"eBWSosL=Np66T+'7Zm1H#Pm9mW$sPZ+_e8o>^2EJ#!dRLCB?&8nmLJ\ll#O3Ak4KS]jcSsTKgB$DH9Frq%bK)\_Z`@YVI,O8)d,ie(;H!iKJRjsEr$rG+YXRR>9+/aKYt[ObqnThrYj^.Qq,r58[2Z?OFtl:\!gZg;"!lm0BmJ"38=__@<TcCP%,17"J]20]h'tnga,SLG^:.MJ:j?KS4o&M6.Eo<ON']pJfS7VAHWLgPoKC[#qW8YpU<+@H0m>Eq;iS\O1P=gM<JO!\'@=Ke'gK.*r%gci]^XIRiBDITU>Qq-rSD>0]84TU:&ctoVm9.XY0Lf#CPN@gYNf[$edd9pHDY`l#RO(F`p*@BT_RRskq4a:UjY1n8hlq+B^o6u@p%e<<(dfc3a+W[al2S-k</EMR5gS"?IBrP%8;pRQE\A@ccdojDH/6m_Yk6VFh=>Xu%o?V*mL<]9Q)U_/nN+sjrpS7?f8950u7kAF6b%SRf>NCI0mpM.cHG8$`?$>"hLt!Bm3X`+Uts3da("WD\,lOeu"oY/G.?\)LP8h^usK27th"mnC.a!`mm(@i%XT/:SVI>B`9C&#nK"%XoqHTL*tOEj32[b\&6d)/<]NlF*-7Up<[ARb7g=W=^S(dn2u&T>HgKs`e;RXrKehX<L'NRq/s02n9/8;XOX'a)P24K_[KFr"4u]L%*9iR^Xuj!G*YLn5KTLeo^LH-1OoiP$]F#;j7)&Mb$r8mda=cV-M`l\;>+`cJi%n#oc36:jWGClO"Yk8cX9"C,m@P):A^Pi129$+g%f48dJWGcA\A^.X1#dkOf=(KhX<U-,c6!:.][SB:.!IW>[)_l"s7r@JK"3oKGf"Jh@f6e;qPPTgq$,L=&("8L\4ebF\l<:5`/MULg%]ikbcm*c@QeKP%?rbK4\S"+IsD0#i^8r8+'0Si&\U_nN*3W>NR:.[#<WBE-rP!IGC^lQQ\C:P@d*h$.0n>r*;Cm"_519?pX2kIf?%<A$c"Cp#lHDL"s&;ls=V9?F*/?\<G*m*U:RhU.)lMdm2QSP+DGb@DD]5GHtN0&17D8+_pM/_WnG?iqm9--9n'FUb[SZ-e#bS%rXl%QX,e?ipc3T#JPplL?4g%;AV7oKs[K64Ar+"m`&<!"J2sMOea&JclmK[_&e*bOVX'MnpR"i?;'RFCj7,hJh\h)=Nhcc@oci[1]8T'%)ju/hRB;M%DXhN-,PK3"3XMap:"pr#+9<kkGcA`VLdhj8-7m,i^eA[oL30"-8sKb)W/AYC6aRNl8lrro_':_KKnF'H3A-7`;L[8:%R\)YV0q^/j\TL%hqN_+(I9#,M,[B0Eau[&J]EcspSO=+JSlk;J0[I0aAu@n5P4^#\iuo/dZeL^/+4)NP!O-IZBPWTHO!cX_Yp$lj%;4'.jH2oCFQrCRdCQ/L*JZSr!dPtu7(SD/XA+r\FnkRHU9'8m0$5:(lFGF1#[/+>*;C_leH+NuBCVX;6Xrb#_RNEJNe<CCCXaq`Q%YfN'1Z#e,/N\G;"=cNra>Dk$>/1?#K?H?h!PbcAh_'VMMRuLgQM3sUX$E30q"7QW.Ic;QG+Ba+E3)OcH"lY#QbQ-tY]h_2HFpH#%%5<94:N!0M#`oUZtR./?.D&"Y^IU/fWc'EY^#_B%gWaI?CDW.4\5(KK/k;P#G&PI&O0gP3R^?:>JB_)lJ$+E>r@iT3fl^hnsEC4Q9%nW#!aTr+u\V/H&1'Lou8`"ak4C\[Ru*mA^CBOK9;D5_&i(02?jp5o\M;r39"o<FV%K"NH;SIS]E]N9$%:=#X$obqsbcDjGpBk+fr%d`8bgmt@OYn,]7@1Ga1,D^T0ZDdlkHjgl>eh!_CA-)1C/a#8CQ*0$HmQFY7\f\>Nd]i.dmOAbBM:be6k9j`DUED3c5rTXIVh@KJ%%m:/*(YQ;SiF)1iu-tNkhPsb.=XiC7ckh<O[?aE>SMnjqA'Z,@sg!\E4k)p8%3R245L/RQG!,eWj,rh#]B5$\L<#4CIg7Pj"XU<<9%Y0WqG"rE4Jp9\nD&0qj74fMf;@cZ$T0&5l/Vi4U$bS.olbQQ"/jn=0l4KgRR;@SD/*cuaVf3^CXTEIG/qSMe`!BXE8nFTFE+`9Qp%G8tT^-C'+Jd'0!>>$8gqGQ>RU5a$.20FW:LLSs,ufk.&".oPr!V`FQW=@f$d+-CBi^2cU'+'QgDUCb@-$h-kcH'n4qc:^T"2A4)%%dpo8)f%tGiJg]OFG3V5%o=aM>M#1SriNW]q;P(EP@RXspQfCZ9)nk.9Mu;.NH$C0h[.'=l8>YjM%9a4GGV9;l)K>c@Ir\.)CIE&`%,cdgkRjFm'3dpEEJ<#`(p%_,e]>1(lAgSM.BmtRX;*QT6=D]]3-h\iC%,f46lR/EP`[\<r'PpAh=#C=[r&0cP2_rs:Zqh'PLOGAr%khL5)B)1+`4A1pbaX\V'rmRf5YcBAAF&G3f*.5dND/srZ_t(%-;)PUBNC(^K2_0n@Df/0JK,>X6*%XkmJoR/MY:6\o>LuneQdeN1%jj9mg*%mtR,]]F?"HN(*nt3YYLL3G\l5H9jdHRaEm:k`,Mb6-A@%n+dC,XAn;m*rrkafR?e'h>Hro<.2JVJj=l]R0DiCM`hagl?l%kf_(D;O>4#(Q=j7Y/KXIob2Ta5]:g92K,Kp=QFSBb:6[p&%(=KX]MmW$349V/)kjG>&:+3V2[<X<l$0HPqupNOJ]^Sflc%8o/]F?%0c3e6iBE9=kW7[L0a=juM&_?6O9^<gYOF5gBe:W-9pKFH,NRKt'_4UT_+DZg$O6r_<6L,mO`_=+!Z-Y,J=?k4'u&<>T=h@+"mmP2%m"naiVPV=cXN:dY-hEH]X6s@H&MbVbC\n5K[%17O.MFaK=EGRIbr^!t)[/`:,5cLV;Z;TBU"o"uHXI^KfOFQ\U51>hOOWBd8-@SN%`(QaBd@YZ36I+T&mFu.(Un<>*HFo/fZ:L1f_+h?+:GF=YCj%#[F?&8dj?RH(cV!#h(41p><M8c*HX=mDM`gCRi\#hV?,OHNZJ8",%q"hCD_o[/i[Dg'Q$jTEB63^uuZsd%dWb%cl<g0;A@0qO<jlgti;f&8WO3L@tmjoaf&=L-RD]T\2B)-qAKpj\%l=LqG55EHn[\Aft%)oKhhrtC#DLRM/Y"[>9A5B<'A&$`6`e5(huZ'9]5lW^eVUCaj?dK6+"QNYQ8N`lT\`Q%g6h"RAL5G3U;"3//d6s\!-pY%"I:h,]t%KJ?p7HQL_^ji6Gd=9!`!k_4O=G,emEgt'DKp2bkl:2/G"E%urgDQbGbV"JMs/c]TM\^CWWCsi\[#G;F085_saHqJd[q)PQ+61M5!%E]8eG]!S<k_WO#pHe=XsgXa9ZDe(ck2-=M'C@WcV,(e04S(NalhKhGAn;A?tpOX"DD85IRc%ZA($/<a7<LZFC%B*.n7kku37c90_%F+NE\4uRr"1\qh&@2[qJD4<m`n"04$5)QQ<o5af1[V+B]<N>\).=`,`UTrkXFP`'C\JB&RhuJEO98ET&jO_-tSK#3EUdK"9No8DK%fTi?]o524u-k_<IlYo3+JrkX<.Lk!l`[/YmT.[e0imKqe$n\b.-\9ZrlbO]JLpa#r!758c7se6V$SI9b_QriolM[n>%QP'MK!(ga%gFibec1WDD;:/P14*G^_O^Dfdb@+S%-NaFaZdcil#QT=/iIHnS9JAe3TN/NpZ;q]lk]n=UNg>Ta-;CVg/C/l\p=V@&YKFN<RG_(Q%0i*SDH26JRZ1[<#Da7b`2PuVeh<oPHR]=eilb-Xe^uTYXJ@n]r?',SE+:2_d'+Uh:eaI5.nk]B(1pF6DoMOkp&8AD5Wi7SD6u929%Fkj6nH^*fLXSa;e)jCY+=)X/Nr47^W"0(6lkF%:!i0#7M<GVim[+%r:O4j(^0B'bAX$2A2C!Bk=Aq31<e2M5bH0lCKFj5<pLdh/q%Q7u33>(cC9Q[4YuB.aB$8luYPa@G.^[$Kc9*IX7m":>Jr<2)!8@]JO%2.\:7a6#N8C'hEK:Tdr5_Dh?6jt$nc^=tr\2]o<^Y$GiJ%UP+Xg'H`$iJ<.9XK\*!':fd%/5i2o#41-ejC!`<3_j#pcM'+B,.s/>3+4<k!HeB/[7m3lL[+hRA'k&B+D5#X%^P^>NgQ5uDlq1bN%.XT4e;H$c>_po82iZ*FWrp,utf4B5eT'<C]7_+hNq*QHu)*F3tagnppnmNq0VrEc66![7dL<!;bj^Y5_:>?<Yd5JWEU(EKl1IB'b%:V@r.Ba6Zc+]3,,js_Hi4OUI&@N<b!PaY,Xe.iI\2T+t1P%Kuu@!&/pGE8StJ4nGbF&+<a"q7FjVBe+>ht0=SU6:Q@].sQJJJB\>%e.R!2``*Rlm0bCcIN1cRSRYD(ecnoUq%O-/TJ"a%Y4GN@Bu.#cmGU`EFtp.X1k9bCO!trl[kD3UB\XG+bW3N_+G.",)<o:U0oaM'%W)X"93gQ4hQ0fgaJZYp.%GcgTP:J(S8QJ^9N8O&Y,tb8s9Z9fam9@!4M)(n.il\8\d5C2eKNR^2]0+X?0fg[A^A@4]ckWS&VUna@%7E2-Om0Bfe`YlQ_8o6Tt+Xo^eZ2eNEiKTSY/=FUUejmW@A^:^tPgUiH]3)\O,H6I]Y"ELPohbu`-#=faWT`d(>gr\^li3\40U&2S%,?_'P?bhS5S"F7r[L3jM`Vu^YCckefrrH*j4EHo;(U)e9DYHY@f#uGG.("Var/n-1pk0:NhPmjMnnocU$dq@M?c.nT87+nWG*./n%Sl95j#F3sc^eP1d0L2K,P7guLp#Ffb8k4u(q(V@6bYH[^L!>T<%C3Bt9CXS\MXUbB1ejuUEp][>Qq`J^f;>n1P*PcO69(\\$p:jm%r4ZuSUu+AFeVin*>JbU)g&Z6r/!W0EZ2bEmA8G/`4I$_0<s8`H+17(/VMW;NY3$;q)\MP77p&>oioF=JiR2GRiB#?/*q%dkM$YjU%Kf/<lh"GlR]`\e*iOFjihB=VlOPY\?_bpZ%lFrh`qs8I[MSV9,0_8&]NK>S.5M`(b`Nu'-FhAFAbUe<IG(aYB0Mnt,(,WFZ-j+]P%()nF+D/i_KIOu5;/ZY2,:XsDM$#_j\G`s`=`[&_c@2LYjIg(RM5,:Po@20$el@e1:eiSn2;oGYS9Zspg<2Q;)"*?r<q';CnTLoKp%&#6A3:^WMWlCO*Vm7^3C!h2G6acl0T.*kVVg'er&+e)7<$gEMd_Qn)d!A-VU#D_IE0ro)_*bfoJeKa6?'MM4UmG5]q)H@7lAJ[in%78;C:mb5siK,"-1CH>$O@]J6fQsso&j/G9f>YVhJO\$mn!$a7dhoH0=dgsH5PNN)V8*5Ik@_u/KS;CYN]"lF`#_]/&Uo!>WCl&T*%!5H1Fd9oK_g(TnS'653HqG()slKKm&m>k7o+TmZUM6,J'#il1115L9_D5d2O@PO29c*hc`"5(pLA(lZ#N/1<l^EI`*iIF5:JqlB2%=Kpmobsu,kDI9D`@WNZQf$bBE$NMc:d%FeJ#$WJQprd@62SIil;GlYUp\Y:3UB-Me3Uu>'10Loo^-drVdjXO<UG?6YA1=fLie[8A%fRnim/%qF/?=^fXD-oDYFPDIujNbC5GnQ"7Q4fE^MC'FrmW$0d6]nFDN"Kkjkk(?JE2A<FeAiIV%-!BVbf.Crb<K%VbmuLOM+A0=%)_L0^mj%t+%ZdOjXUHUo^o#Xk$TOo/$RW+N/Et#-@+!AolD2\YUc;ae^0)b-JAji+3,u7,h?ELjg4_Vtd:Lip.'J=f7Z2-;Y`(:6%di5j<`q7YF^i.UprE.W./7Zi%J?GZhp%01-*<lq)@=^jUD(Ouu+`&B<Ug`p*hk^J!J]m&WAF)Vo/rEK(1Y006=T\Xj0mr2m7T%gH%^WMBEhc,F!=^"i;30Nc)7hgQSKV;9$!*.&`a,;0I&`LMp@:5gMc5aVXO3^A^j>3,>8eW4f=#,5Jc'D&i!m$@C.sMa7s$`=aQGF+Z%h*7PT1e!=#32[IcF\aSggDTDFe4(0,.b!:*eLVd5m]>cMLbpua59?"`TOp,\K2g)"06hLgge[eGR`-9kT//pJdu9gTfFAr"B*SZ;%keI!Zs38=WVgn]<s3iY$r1EuSJ,,0*o\[C]O0@di^>g&o(B2?ms5nh0kC<>(s5j:[p(.2khu2;:IeeJBrEoQi5Q=66rPrjV_gCJE%o_rL^"?u>kS!lKoc`d4&J.\c^)i@H-rTe)'=X1FOQFtsQVFl<F5:LLOWXREiW%sG^LBMRhFZ$"IeZJ/bUc&%3"<b.=grrO!R's>V%ecX$g&1iZ`>=h7nTbE:aGt7ZlYVL3oe8I:^3RWG#>3l6hL=B9cH=KkU<oO^f5$/j2Q%UG5BuK.(]qd!/#,an81RU3aTM:WSls&"p%SLYX+FcK);oZQlWb&6d6S-G`cPpc0f2Nir/M^QCLhPr9P&1JqH!PbN;NB0EOZRm)]7YKQkIcY?B0P-ZD>uZ;`Gkt.e<Wng-eZI/V%fCdAW=JV'#D>iZ+;W#=/.P>m=9BYnVTiI??dI+'u>,M3Tn1lk[HQ&He[,?3.n?b[Z?u8WD92A!c((+9QOGG.IHIDP"\og$`HE'8C%``@,dn+<ee'JUk]Hcl;4JAtU<XM,E1b4uN</+_"W%?)<#8Hl%N]a$Re_h1@$0p%OL+H6rfj+q>V>C5M>B@AX>$V6Nu<`Y<[kB!(O%&LK#7+rUTh7dcX.N=%N%C?-h4hkY^INj+ZQ3&XW60EV,aSm.%2E9*[S'/Qk--#5;2M=Pg=AK]k?f$JPO<jZFm9m^k<'uMlIcW7WR%+L3pkd25j<j5.#o2fKSBi:^]J;K@Dq2c^/dWoWs^)R^@Ki^S?neK9GBb(@mLSNPDO*(Vp:CrO#+6].bk.o^>P&G06K#WU8ATH>!@%OifLDLQ:fK0O5*&f)EaDF@]04n*8(QB:MKf!2ds0\6-FQT;&s85*2)5Y\$o!PAj!:4jAnaC$eG%$l^YT?UYTsVg^sfD7603j+1Y%%Vj8f:=BbEs"^,9Cl"kQs;9E`c)$.;4ge':4VBr\d<A)GH//Ec<5kCBnB*1Vi!+.Z2kfQ<'qJP&Yd\hPL4'=f-jZT-34k7^M]OYda%0:[[eUk<F0mR#<[!$:fTZRhUtHMGf,2I'?.q"rBr&.+X<%;RSH9/!fVa$nLdBEO00;EBe+AjmKB_0J;#5*O6]EaCQ>-M`6/^tin3%:G.+S0&YfkXVVc@Jde?TQ-7At)3&2N66<ka]YQnKl`cHq[o5A'Bj2ja)dX4DW/P%I/,39S\Yf)i(_@X_7R3!;diXV?$->I'M[BJ0%>=sqZE/SE,dO(`j#o*$T$tc//(4XmB"f/LQkE0p*fs%K*`[R#Z`6tYe8iaQhdaLEC/Nd]_7"e\!-SARNN+o`.[B.@(p;phg`-oKM%@Eu?qDEqF\/RI<A5BZ_`CuUh>%K+ks=nUP#*QV"E%UmEG':u@tjZ&5&jV+5>3_rrE#nNhR'5@0[\E=;m.Fo3L+I2O+CCQ2JTDBIB%Wm(`H2+6E6Pm&@Sp[4e\+%9E[l+M,N(=9,u6@O<Ok9_?83`M,0U<GB.*]L<b'-lP9%_[1!eTcd%<[fB+0H;@F`3_eO5Sc)+0l6=R%N](GG7<6Z$hgufiYFL1f`Lsb/R)RCHoU12sOiD3O72t=*>ltue4s>Ve0Od27PSd2Gm]E'[O]mn(obQp_<?0F#ClP?;jOGtn;`5fR%LTfFlg+>\j$&[L]CJD#)Uq([K9k8hlTnbL)Qt;Bm_#VG34X[([+9e&DXPj!9g.hknOsSG:7_PSnCkXU)fl-a6)UPW5('p(#R'X/.%I@_1D7QK+<h[s0.hCUT>>B,QAC'[!BC,*0XBJLY>TX/$$Oja;[mX<ouiiAKGA#+)W3*[X"_+.L+H6ZIb2S`'A^0u)T?ro1*,VItT%:S3":-"Jp6i=6u\Gi18,D5CDE3<Q_QNF-Uis%*Ta*M'C2jf(!4G1*+BQ'4K%OP+#3'If9m1;QqnA^)9fGmf6;%.%t6!"A*sVMC5S%TKUdCDu8nr53@`tMTI>I/Yq[>(jII9oM.e+Qa>mQ?thW9k<(41[,eJnP5\QqFJ,j(A]8c`&uY##9/*Q2ftam!k_/\&cXWOL`S3TL%bW@<>IAR`e<>GWI/XDV"!)0Ff-@WkJ6ZcXl_3/5M,+Hcm;$BU\B/O?=@[:R1Fu;_?$/lmseC;@\ksZ=IJ_1\R<rA3QbmeA..MK=-%?XCCCq:ZsKUH44cNMjhgZ?+[f1"#_-CU&*;[^/4paSn"^:B7'k":4$Aq&#A[0JiUX&`Ghb7Ub>=8?qPt46MeK,$LXJXSbK0Qh`6.%4&d^4eb^tWZMK]p@C+nh4sp^X@!W'>ff!l598kXO4$^:2M#n6i)ZBH=m4eCVSENq)eZ]Cjab'LN[Tse^Y6aU&Z8<cLea*>C6@ZUD%+mCc_5=OVW%/QEU>$u9M.D_V)gWbPI9sI)]@isY#%&kKaDcikPka#AXrf_*'*c'EtSFbm#4rYf\MBPFikWu\M("BHVr\csld!*>.%jatGh7Sl'#E7#a_W1@N1<VARD0S2;Hl()A4rY@6`Hf5S:rI=US>R'tT.CAq'M[Q7&+bCK?HK\fX1fOJn[i%K;MKFk@l-K`5YXOZi%Fd0sVMK$?jTdf]Qh>mgX_5aqJgeOdSNk#8:2jS4=D+&6MW>)LgdNPS_nGEoYS=/*4GN,9"3ga5bUbsP`;Ut4:&8R=e*2WZ<70<^2%o/[hPCKR^<Af3T?iZC"Gg9j&hN,Fi9_VobcM(-.l#UXmAMVP+E4\*CnWM6"@0$T\,7XHu(eh^/L02MrcE_F(a/XmD2g(3,t[;G4<%$pTuq@oXWr"uo<Q9L?h/r$tApb6n!r3r([_8O_tR$V^U4&NH]O[EUbP`JII6d6n]bL;*(u//L1p4<I3,jA(GDheQ$-p0a>,J&rFa%`j5=$]GV-J-%h8P%5/^sK8r3Z(@jg`,dd-Qp($6!m1ju/3n?*\NPR!XJsV)g_K"Jp%6QW]3#\\4>Hn?V=um'ne6rfJ!>3S+6*RY>%4n^5SU4WtOlcQr::D=2d\h0gpjX_CSVo>K`?c8+-.-o@1mikg(_-9mL30+5ck$"q]>!PH^T\MHe&GJ<J1]%D*meLk(1dgU2pN4SW%LWlEo+W^_:oF^;qW)#LF:kX7\$;J*DD*+APH=biM];GL7RY@-o$B`A-=?8^P@]a`-2d\^:o(`/P=Y!PXCs4DHe+s9[duJ4[0@JiY%@O]"Jo/900p,)U;7=OXOYjl0LN8a&*JU$e1BdX?"[fn51:6F,(R*j.j]"eH#KOD2&X%mdN>'Z/Z&afWiY'oEg4UFb%U0cnh=Aar<%M7X<NeBW#L2db#s*FQgfG7&[/`3V9##<:s%NVkbgNTia@\qNKrnNrHHZ5;8UB:JT["L\*e#c<F&PO[@$Mskp0SF*.a<#JS4C)Fi[%`ZE5=68=ct='ekrVJ>H\rdcAKXNsFXE8Iq].L6NQLjmRCFWj/,XnQluLS`F;E/FPKjsEEUF>^u,W5-o#Eb*q1B'ft/53N8^)pA+9%pc;>H0;u@1`OL`WQh+oXUhK2d)'6s_\q"H;$Jd10X^JLkXLDkJ^:O7Shj4Ndhur@Nd</d9?>W:#/jR/T_<8og94^,s,UhdTLKBP8%/1iJ6=:V<//E8'],lKuI!>U,[1YYo++F4rQ`R8-0@juV1Z"N1qg#@YC]3-.c_fWgH8no%^1u-`9bM&R\7S@M5fYJ9`J"dpk:t"?Q%_!``DVks9sP9pCmO+SgY\+NCNC7"LdjrM6d:^SC;#h'HVohY$]`m;e)LPuXjiIbX@L"EmaMg[defs(]ZAIla[G_i=781)'](-ftf%ruh+-ZgEg>Du\QTkT/2(m$7G7D_3)\f5b=<T7k<27<b1HcS96a(mqLh?[r*'P(1#6(+R%<Sa*`j'iOCV!/`qbdhDd-a;_U+e0]e9%;\R]BrV<i47q$20Oq^/V4g:KW8dofU+uGoKUGk+7o5FFhIPakd[(GP@QLq>?)N-7,/,/T&UrKK",!5F\>PRr5>7"n&b]p'c!s-bU%Y736%]+K;dZoJSV#WcR:TI*/>9ku,!K)d%N,cXZ]SI`C#2,mp%BnOOrQnU"U9VNobW)&)6Yr*epbX`qhMrio?nW!g**@ah?);%<@%ne%f?_=4\En<C+<=K]Wlb#`j:2E21C`Tk2#'nYtpk(D*=(@&_I9"4XWY>tt.W_DS(H%+++NHoPN%>f.T&qjY?d)67]Hn?B%Z-/?r%19N%?K<cdr]^0c2KcrMdmmY%oDrne/=N7K<(.1R2PR`$"=(m2-,1D5&?k^\SZO51#$=n`I/GhQ/m-Tr%isDT>0H^T#;4c4tf8<s4%lK)oJ_I`EWAeUX\<@8j+`0UK529?4<Eq+>?-B[n)j7+P!F*5PYGOT.q8q%hKJ$1"+e6>V`9i5ti9G.5>dB$U&,Qe!00\n.`(uY,+%OQO=a[9%*E5_PIM*:m)STnD40)#Re+34[O)N-"OHTtF6dRgDL-?GN9VjCAF][%\)Slk[o_':)"/8eb@i2EW4Z=Y*c`!\sSN\Q_R!%@VVB5ct\t/03+3?`U]e#;4%=#o>X[6_'7bVe`h<FQ,b_X^=<>sHsB1Af`51e?aO8FaYGR7/X4"AEBd=@;B(Aj=m^To:h5<EHDp_,%W_<CY,5SUIZ*Bq@q:=jJq-+/2C1TFsrOtO8a//(@+[,!kLXR!kW1WZ"ce7FNo,4c_M0<"t@Z+@`<*e\2-:G,pUI$3P;S*^"\<c-^%^JnpS4_C^3K+$X[8E67_m_7"MafU22gcG5_Sge`";$5nJX&'*?5>Qat69c$=B__XN.c%hJK7+le$^!7=-*q:g-OfE1G_K_\-RDEA%CNpnO]^S#A)3iY-;j)m3,21BqW/hM5>TkNeo?8q:O=RVU"6ONjJ5KNE<ii->R/+.-<^q*OO"!$DaT)CgaQR66PgN9t/(*P>-%Z@H%As:n5:>@J6OCP5?2>(Kp16B'[Ye96R0\;I0@^M7(("3Bq]4A[FVOL:kY;3:$#uaSOe<?EB68j@(V?N7&L&ugWK=b"As#%r(g4=tZ%,W-UXo@qU7dGJ`5A+Z,M6R+rdf.NppFU6q2S^#2@C5q!U=ptO(?.-&jQPRc!TSaeZ08Ui;`ONSc]Qar?Usj4NN2j6V;D:*aK[8MM%-H8p5V2D$=)dmqb)aLT(Q4KEO8ja-Z"b0UgCo7i-!G#3DZ?MVn7[9%Yhb4@MJF1i0KsmK:@)A&lSLBZTTL[dp`9s#aIVfG#anP/^%#]Y11,0\cjboTI0g2H$f_@eeH<)`:B!]fT7/L__Qfc)*;nW^rV:aL@W*\76)1f`VA]7o,X$^7%lh<[I(Hkl-'7?HmB1.#p8A63#b%Sg9/aJ30nu_bskR;s9]Nnum\_h?,tOPJ>`Eq`WoOcpY+R:Djq5^YeP4O)`H\m$8W$ZK?W>$b@ZF(RWe@EW7seC*%jgotUGU[nmGH%':#[a5M_BMm3TDOqWfF*J&?uXoIi(e+@i)DDlN`4;E$o7%9R0B.PI&R0;"RlJ-WWVWf27b^1]*4Rp#9bn2ULe9=g`L!K^D%l7R:]%Xq;e%ME#)P0O/:Z[8:O8_=Y"Eahn\DJJsI>O0n/O"Ku3fQT.7D<q:dYh$)aR3dg=82,[MUXl2@IEr[K>)Tu'qr]M!TaJ*cJJYNBT%h!&,PmBu#R29YsL$t=e0P9^KmSnqNJI"VC02%=,!&MDrk]gjp1*offqqqmjFANCs<%%GOX,f%F`9Y[Iu0n%kW2D_4:djPADGk9ld%I"+iol4PF"&;?urSWuG_2;C`^2?_(qrr+ua*T0:<;,Mj.)6OlpE%$5HQW_ekQY0"6?OhC01aS1IB.d2;atS!*P8lMsDJI;6T1lF1%5>B&QVJ@-c:"Q"2laIc0-cboNZfu[ts)Zf_3R4pS9FkjlU&JQp5u=%!\\Xa%^0nAHq5m+`--'.DLT(oiCMJaVme`,qjOC&a%`\H-%beaDo9TY<FR^n`+a*V8K^._;G>",I_\Ms;pBA__j79oUJQ$e!$A<tQJeTGeVg,4kQX,Zq>c`*2OLN0_LIE5;TbHW40;.@o<K5Jmq%IV[C2(fbq7[#a578AjPU,%!^+@:+?OO.?&;a*ZfoQ6JhsmF9sB#&($tJuLG=[p]Za_Qk;JO"@''Ve\=Br[G5E40+(HhP2_EUP2R+%7((?\kX%NB+0Aku<W_KifD0i$NNp=<s2/9GrH@>2XSHu_:a\^r:b4^\Q<!L@&J?5IBAIC!I%GLE4*cTQN2S0d=HD/#=Ho*r25%nW%4gPGPWk3]JWSX.egQpq&V1K;\V=`Ll$<@k_A+Hac63BqPir!sSC&+KgG1kB%cF`.I*(\j%^\=g7i&XY2b?SU%:"Bb*8;iUId9+Jl%/bfQ#i:nG!"r?'ARR0s*<#`n8,N(a>U9SZm_!Fiqe-)aPb"K4dP4l"5_JJ&hr)95hB(da^`K;2n^NIYeR:c-8j"!WXR@MU=&%?Gh%d$3%e!Yg26$J8E!Uu1_t2%C#J@2)!n7_68@Me_Qs2a@VZK=BYHWdEW#>`'Cr/3Q_\kuL5[b'.4LJY*N=R'oe8+71HtL\a;IltQE?%P?7Ig,'X3l[s6pR%VOO\o//eNIXR%H-Fi,2b=M*NdsHmCgWB12INYi1#2hfW+7hV\-AJ?#kd^2udj-?6&1Dk2oqLNW+iX:RUd_7n%g9AqWH?b]QVDd0m,Z;@m0V;$B(KY\`!C%2]DA(I+0$/tG\I%@,;h>K4encns%6_Y)gMDi8fW6EEHg:5o?o7p<;m'_BbG?+nX6UdF%gDWX]bRf]WC(dHn!l.b</MVZAhL*u\aO.G-3s1ZUB^TD"MLfKJe\LB)Q:`6^-20:1[YdesXK4=4DYaVI%g'aG[L-SM^i0JE"F[Ze%kp7jka'.a8f_VtELmm],!LmA#\'j'9n9JYh-E5Of]7+o#2c==Soe*DkcHi9/!rLnX.5!@.8lSSLf5tVd7j<Dg^hT.A'#ThmTlgW!%6E;$qGOPoifr\(=Kp-VtOFXe82c;%E.MtFnAj8SQTo[rDmZ>1mnY6DL[.8E7'@qaULet<!++tt44SQ#T/7%/C*C[;Xl-rWnWk>*D%es(W1YARK'E@Oq9kW\Gt"6?gM%^(8.kU2Yj7H;9`=WVg,,kiu]!;9QQ_euZ$<a%gRa5$+QVCeC^F5'*+X!VY=#E8dkK+L]!;G8-h%S6Au7[Fjf$>T0_]/7<N@P$l7M5_usW%qJ4Yj$%U`'_UPj0VbK&#%rMhqP,1Bf6#_WH+#i(]"e!OodoeI:J$J6#qW:WeR`ZlW,g=G%ZD;1U7<R,"A7#NjHeh'sC8WP@\Af26/N&054RWfT"abs:[ueV@>%3nRGh@OqngO,u*<CO!\F35Z[ne9?<ji)EIEpPG^c\p[$W,=<%MR>8mJt]?MVgU#Yfd>Og7eXP]b$SuU[V\jWD(,/.AVnp<W73F(U6ZRhgfKad7e?]CV3oi[&`CDBB`J*g0r]kaDo]/.h7]6W)e8d?%JFO.(Xn[dSg9_GjJ*p1`#@.#n@fiF<?K$b<]B<lMYOLE?o_mJ8G<'XNe$@[`a,XfE8LFJZe,I#^md2ESeQ8"iH=+Qjg8f_gO4jCq%;jMq%:hK]GdZ:$(oC)]S&,6W2nkJ#?]N@/F!!1WUKIK3ser8u2+g7U;4+^_F88[4DjP+>6SJFhk%;CnkI:!&'S%K9D*]b>a[2"Tg%+[,39N2r4%),9hC]Q#D$1o@!BX[2$<=n0Pco+ScZg>HXD+kd21DUh;TjSP2i*&:4T'9PMQo+-0PO#VY1:k&b:lfu;Y\*Vt3f@M=%%0#V9g!QO!71jKmaV.\C2/hjdQYSt+.k9m/[>E6&c*,<Mp*4sK_fE"u--DU,$Rc[<ifUN]8lZZF[3#(euoWEgM\kuFmLO0TS`?.*]%iR)d*8(3lD.JTuuJ5hG/[AL<]e(B2"0TKVh#>+[F;d8e"g!UZj'FE7bA@7^+$o1VM50bhY&pqg'@H\LrN(I*t3;:.\;:>uTRlsR5%fQ&oNkgU*D@WOPpZd#&t2RI.XO:U<ZZt_hYW\/LNJ@pjP+B>(C6)$(@DFFR].c%\l*)OUI(M@k(C.+SMU7(IKGE_#D".(<_:o_jE%B9.%t1tU,*.(3-Q4"V`2NmBq.$en2G]\2MFfWaqOZ%ok'H84&PQFu'q;^^W!iI9p+P"gtu;:td)B*-lHAFuuDV2?PT!23=umL^\\%X$LG3p_giaL6>igp"^XKK$TN[9f#FG5N9Mpeo2,U+an<7$12tq@^fR`*?5p'9UhI1II%Z4%mHY?D<"^;qWs'D2h[Eu"lJ4#\deK:%V7a\\Th90?qjDOXVDX38-HV-_S\<hAD0MaU[+VWuS*sRdF<^rKHXs2`5Kuf<HO7-J(5[^HR%0J5ma'XNJ,_.KG2S_t5_RB`:KUKc%9.4G,3k]@@m)5Lkm`8lhd!uV^;D-\143;J2Yf?n5Fei>)OA`)GM(8ePK`MsHL>B9M"dk1<[bVsI(snG9[r,dPJ;=c<Q%FG$P1=2q%J2S]t52hJmnk+rjCk\<\McXQ;;/4<KFn>to3Msn^R-@P2o=?AsH`fuOKaEf,NfdQWZd<:eb@4`X"h-i_5%L$I(D/So'_GcJ[3j!9%VtYj[5-"%H0`\$hbI0nk<;6NX$WHFdT6'uh`6TfWYeR]C<iKjsSV0qIUeg^C#AV1PJTTEd)(qh0=:RM7Yc8K4XoF`q2p%=1\[F([%^c?X$!@(QYO`khr2b--kpL=-X['d?@7g-a*O:P`Wc4d'eHF4;E`@a-\a4>gej7dY2RIAH22B$(u13P@#!G=<Z[78^W(pcXE5OF.<%k\"fT[j$mCosq:DeZ0jth,3Xk>VY3r+2\9c%uE>*2"aZDpOR&[!.#W/Qn=t,gbPN.d"Uj2$+Km>1dM,j<V\F#'9ucEYP)5TNB[[;%R<>&kb;Y!3<nNalf.(71Kumn7R"_o939ubnLUk$^[$5a_@q`kj,?d9MH58.mO]f3W>2)p%_$]cAR&u*"\=6;5\N!##/oHB(1m`tm%G`?kTIgE0O#cplf(+9/epe",=^nCq]Rg6ocNKsV,-5#uRN[r5H[`+W+EAuqXGI5&nJd&mfN^96!a=+.PTMo\ukjZs[`XELV*CO!e%Ou5\fJ!XP@[V$E_l;dpm@Zs3Q@1P_pEfL3uaJGHMR9W(AniSMNL304n1h=3Ym?W:`cVO)fbmSTI?c6:1ojhj75r.iqqPJ9NaE"`3%2fth-&9%Bh>o1D"'n\REg2A$u#CmZE#(O'E\*]uKb<OjM6Fp$s#tR1'W2_,JO*eUT..L`(J<DAj[*"uIqmP)<oFg3t?#_,9Y#rpj%+@c:H>*"0'=:We5Ge=@\K/AI81rQ]p7j1=`+,^oc(/?":fbb[50lQ])QoYlmq[U]%m^ePJ>h%E=s&$?ls#;pSpu-72TBj$Ph!Vc]%ng9JbKh:H$3h&A"RnAmkIO&966-AWI@7YGrBr9Xb4XpFlA22h1O#nWk_;5).0V>tLd^u4#G;,ZJ$UBRj$1Th+H*?4F:KQItRk-)n%=UoptnSAer7'`+Za8p$Grbu<mqos^bE:bCep>3Mf#n&S>0p!\B??SIm"rNjGH!&KLE'7"/f4s(7=O@sS6;%kc5rc:tkThf4n;i/)%`HH6mr>K[>ekRscYl1TZLA9)D6@9a4VY!,,qNHV#/8N'HV)N+9Ah)l4n>;utN$mnK*]bs;Hakf^'G?ZS1+Sk(6UU4aEl^kb8+(oK%#sQ8A$ZRo;lZ=;q)d6Qh0S6F?7rH=@WbuN]7-NRM[Ik)RW/]Oe0YqVXmhU-NZU[i'j7m&]hc5#K<t3DBe4$*VOi'8dQTQ-#/L=K)%/JV92WN2PgZPPaafl+,Qk\f.,?-X@M6bAI<]kRnM4isX7\YBAO2!,=G=\\329fBQVXiIs%clP?*55RN8/1,mrg%'5]2,l!0</`n>%+`uo'W+rDJmZD8.Z0bRm<"RpD0/eZLo2cS$DBC`Qk]-/%CAf1tbMGuEQ^ZNm8oh"e>Yo`%Tt\QrB,!GKp[tu2@cRa[r-Lm's#7V_%:uGj>b0W)7M$hj'a71?r]FSH.Xa:iGhk5&4C!.Mh"3[Hs?p_b`S:2R)RGa8H"XFe=2)r8GkFmTaVT@5Nlt!WA6lDb5ji.$RVdr&5%k*(XZNcdK!JT`"D1B9pAB"mX/Htnu2,J?=@Xa=Yt:%`KmFe9'TCKaW#*]<!01ZisY<\LEqb4178K:u$X=1$_DErMKsr*"C(_1bJ\%12$'"VU_oV!@Q9H:65ud"C8rd<h)Qd"!:^.X5mUZ:kF:r+Zt0?Yg'20bpO2p%Ro<GA9G\XKr=GM_7AG^jD':@fK_-0."R`lGh)\Z%IZ=UH.a$49+e)!)UIJenh`=L3XbPm97!ALcFMe#@o"I91na,&]G1Q%`V@Xt/"2&;%A2_s+$VA+tSZ::em`9aFQChh,G4PAnqgT@I%F5U%R)'l+!+Er:DR'1==`&a1TJN;fN%*8SMo)XacWC@d6p,\3X4?$:X#b5O^B0`m_Gg29ND%8!<-eP,&;RhlUiu-UXZ&elp](oWb%\%D6P7Rg9XF.Ah[mm_!eEsM^4K6T&T1UD(;c)NR,U;3oYj`$s='-Vmo[Prq&-@u`n<"SYMnL#@RCb39=;Il(mM_:t[3G-`OVXX!#%O7a#;)eL91Etbdj>Y?\ED^"">a0[8%KqVo"Hlt<e7/lsEnnOUS90i'nFKokO<[cMtF`bK>hiT_$HXm8J5_"sb\t_,JGEAYC7(pE&%V^rHOb2npX/L%Uj2"%kGBKn<$-61!s_Bf(W)CdgpJY/kL1QB__:+s6cPl-\<)1sB!%Vlas!1ZE@3DYl=[cZFC^OQdcUpTIm,Yc2[%6>g)JJ0$DY+$5_kH--hXPjti.JJri"13UailhXJ<'I:hI`<?.m--+DlF3@G9@sWbL%FriQ3,HNV@_V.D4'G4<9L^Bo!=d#1#A&K_%!_4q\BebpO@D*L0K\F\?eQ=k6PRDoi[RJc"[ZS\l#e-oeRrq+Wi)Nm!gK)7g'/#bl!A'%76)S_5eapsp(AEY<#EEPB]qs&d4V;QE%Oi:o]__6k?0diM_TiT@G!V<'')0sW?<[FB+m9YnemJs$<[TgngU-``pp[Htdn72U6f=`F[IW-1l;TG7=Xq4gdA^HRV%LBJkPL43g%:QlGl^L0(,2@uH*ZG]:Cg!\Mk@93QXGQP>SRY^PeJaHA;!$$lUMa0Pd`n5R]aX$1M+ki1.1=V2``c.#100L])R+&."XML)7!tnXZ%<=f4m%&A2cKY5@14$1Vtl?Wh8@$%`KKSru/5"8:PY#>h]BG/eO=XaRrS.ZG(6DV'u;;&XrA*siuf3#2PeGbVem0Ou:9^&'+hf<q)%js[raeGWt!GS6_%Br)-TOj;"rbqi77>+pHpi3+BqJXoH/UI.YY=L?Uh2eh1GF3E_6c8gLAQr.+c%GHDE)>%EQIQVg-:d:BbLIABA%jdfV`'4EI?23TTK"VBLbG"uH#IMfJ&b?)0CUB@0:EGm4!l^Q\_IBhf4Y4&XldM61-l#qgYN1`&KmFWjkBN[0treZofglOZ)Bt/In%='[rg%Y/FdO9Vp8O[]/u%:G"QTioV0aNrYuqWU:aX&1+k`mV1=J:oqFn#M\ol-_MI*T*0,jYl*.Uu!Z'-'"\jeu?->/;TPRMrp2S%inU>QlT-K##=oV[!%p^hkLmR7WrYY3[[pDKF0e`thDeo1])=FN;OK?H>`7\l]fCc2NZN2L.A]Z9Yle==]mMaBetQ)SEi,bd@*A]5%q"[W)Ls=<MWng4)NJK0/;qRJ)j.C'0OHP(>8Koq_1m=qQGECI+lt0+hQ@.t"ef!.F0\!FHT5cC_S;FZD7kBe:r]RR@?]S\TnDr=?%9r.rFUu+!'VJQ<5Y/I?&/YMX4_qEJ5I*a$$rCL")jL`oh,Ns[GqjHhXEqItb;&(PhM@X5f*)Q!Oci>1d>XQm,aX$:FA9<H58FZS0%dqpn,A?bFcJ'Vj/S*1"ko62c.h3kdYl7V&&_kA]hQJ2V\pg^[I!Im,p\%dF?Iqrg!h^Wmm[U$9nfUU&'^Eq5#5leQf*W%P83_/G[%R66oqpR&q-6ro%U!<,GqGBOu:AP[35!XIP;MI%Pl(<An8D4\R#o)!#C^mJb&SY+q<krM2-4XP'::ebS.?S]3Dcb=)p_DL#e?dX+E%R/;`t&ZCLB8l'EErm/Cih(!jSb+54_YY=G9r&;,]SiYt-SZiSn@Zftprp%7*e,S"*=`DG6jF#mIemg.a!@Iqk!@KHncUuX=/n.,A%D^$ZX%;:TpUtO8<2'JW]naF:.=7@ufR,<t4KGs+r6[-oo@X8u$d4lH@eLe`1\OY[G6UJFC)8.VahQr(Q*(.jNTmW>YRJ0c)GX-rI%^?@6DIUVp=QI9JXQA!f;d)")S.t^af*?c_7m\,@1cp2#\pBq@ri48NZIm\o%1H+"J>[RP1*6*<K>pX##'&YVg9&nm(UbsQI4W4U&%Z.:d2q;*d$c.DpLUY>R>2HR[">C?<h&RcJ\[oJU!?u5RYMm^+e2JRPULif3755c!s*kO5E>(oKl2*j^aREuK7#WQ?>FkH?n)#$it%1I)3UPGT<,]P;+S:l_)J#[T48]1VQ?2cTu)XA!U4gY76O-+se]H?7fF]"jdfNq.>pD5I*6K')_h16*PK2GYNXZi>Z8f/bh3QnUT#%(B_<5ZDAX8W*BnS2&ljQF5A::Hli\&rZo`i7Q4;.3j)?WJfZ"%H9*(eIP08?)IPN!FM!cN?di$M-D<*;!9kW36peNCGD<@ZNG!i1%he&Q,.*3+u/s/4=]nj7ujbj:l%6qWpNp;^V_A97H6;J?1_dXluQaY"/rt4W(@WM(UM9/0&#4[3ba,UdWaoYcK+EibAq!s$BaEKlX%7Dq:qnYAR?Mk&`4.kKS:BWC/BKgJ5UZl.eYT`L:<ckF#oeVJlA?q4+E*nnE&)]W=:J.:F\C.QN.6A<kBcnj-iUMg/lMW!:(WRT2/%>/C10[N`9#,!ngDB+IFJ"=ONRr*p,)GIq.J`i.bY7k"ik.Otdt*C94H>TM$f^)'0C)52)m,7g0*kp9u58;$DoQT]p9WB+]Vo;"tj%G+tbrKBUB$Z>*rGaJ%<jU-),A*@k2@J(DPk11>DAWe<f%&HKmFrWHB8'9jO,W6PV(LCcg56OTl$6T)'lU[c"d1Bt(gdtLJAq@0iT%6_fkb\pGfW-6@iCYU\kNLB\GeAOBlF0L:l\:8m$mj='odKWY$`+cno9-Sje(4P^c]r`0nZmkbUK14l(-a7i&1Sii]i]Q0YVl.6fQ%,DS>+)>RNkOT,d;+hoC&l'.=%7SAGsDVX@\9)ILReMC@QI.%lHP**fuFTiCqmTe["WEtZj).jP>6X;Yj\*+di-Eu9]hg<LmNK/KO%0^Han7L/`(jRq[3I@ihVYZNcj83[,kLu0u/]r-]MA>cJ7&8?$8:oL65&nKI^MprLI$D)Z_"'et>p^Pf59<\J>6'%a%necR87SXqN%Q$b0-I"nBG*Q2;qJiVYlQ#Fsb4n+^aZU$5)+qJ#d1&]]>*92a#%HTWSekl4Fiktj9Kono>WrP_S&I:J20QSGPp8.ghM57L,S[WJa%T;!#CA0Kp^q9Rs(Zi=(cpC"=1;T80s+/n1La8J/p#-Q-C6/&Eq)nE.3bEPC9]OD^7NarPXYY;(@+pX&Y\4YABnR*A;R(C]Gr1UJ?%=0h)Z@a+'7qbqaSaIoPXG_,=aF:;=KZ,Z$Y&1WmhRtoTA2[7_LGQ_"_AD.S.Jbgl<pt^O7jE11J0s])7O!D<P3h.X.k\G@'(9,`F%$.N"5J\A1g$chE>06)&?bHVaJE!g;$Y#,_<s7#0h<r491QbK+jaj%jE.Y=\L=a:G/$*/+E=23Afr-P@,!*WC,.oG!JQ>aS_?$r^$%qh3H(].]!`Of$FQF,=.W=d#KH,?o$]7-n'12W&7/?q@0LRaLbs.6"\'L7gSUn+ZFZm8(*KDM@`]>gE^4h`BP=7\XW65R9QT.HkoR%md(<Nn).(C7E7\+U*q=d0#.QSPm=LOWe-/b@c"7Lg!DGVaUEK%<,`2U!2HXsPmL_`E<#XG)XKGTog_\O0R=T'p_I]Cg@X=hf"S+P%XHl%r-_KLG&hL!#(Dj)TiiD+ZNrI:\WoDi\"9N'nQo-&_$0fSa*g^.>+g_j/=W:<F<M<6]<+:`0<NT*$p6qEn<A>r@[#GW)D:Y'&%=326aA0\BdO:n70Ju*\PZd^?').JbIdD2\hdC3SXCm*qR!Mh5ZM.e\C:9a@FpcZo]))hi@8D05q_4q=Jp9H!G8$4QPR?9+k,*0,(%'qoDEM\@ZsAXd?/,,j5c@&F@gmD@+ImQG9]T'G>HE$REK8]U^\7cC[\(tSjokbFHEjYrANX:aPAgp,c\^&"\e(*'@$=e$ekM8]',%fphlZLJiar-3#&O9GbE6pDkYuYR`pna`R&d(/DdW5$X4=GOmLUe&RXBi^CG3(SL:$IOLX#=[+kmA\(&o:+.b!'/d);:D$W@CR*MN%TR-@kPom6%c;L2sOc=n3@JaSd1*kSu\+PU>O5JRMpVY?/=B9pgqp_ru8n$NLYIJu+o`Vu%U"H@!21]:fGQG%(VD8'E*5E+:r\W2#%FHO9@(s)>ir.Ff;<\IsBiQd3P@$:",`b#$\._b@i'BR(-Yk'BcC7;e[#![elJmHUpHqp3@5!jnIc*<M?_KQhN9RY-MI"Us,"eDp<%oZsCVnS!0@@pf$/Lk+DRp,=Y1T3ON6n@Nk*ehmI+a;u:elZu%Ab'rMmO/'qIHflW,VdK:N`pFj=&+(S8koG`J`;gaE>)np3nn5c!%R_Fp`1iOKXC9psE,!ulapLA(&?VSUB_2%#D@9m@J,5m;^m/',)6j3fW&+['1M`?!@Wdr)'lS^=5oV%6n<G`AU@r,jYOGW<f<>[n6%A=b]FO0M+g)0"nCmPPR2O)F5+Y=YrF6:juC;p,T3i,`Lp#)/oG@/E0q*!I3[L'5kC5N$RLYa)4:o(UQ,5bR@'Rm"Vr]R5ZeS%kq:%a*$"IMBPIllP=:+Os1V;S\iJ:1DSCn,9lMEn.+oWd=2!F"!cQar.Ya=,0AHO4IU/"9"_"m)*DD@>WBkac0k?jpn(KKgS\C2+(Yuj%-Q`ZsgoVjiW?V,2\/\51%OPWZ08%M3(X@Y@/KfkqQE4"0U8#Z[8'5A8;_&%c+#^g6J:c,tFHd;<c"aftS-\QAL]+*7qrCF)*T&pa%M"W1ZVAm)G/4Vj!GGF83W7Q;VIS7:\@eM9i^&u<nB>OjW\o3YMWY%++LurUsVKMa]2BC-Y+2nJFOYMdnO4_aj)=WFj0rf[T@#l_B%5bmTg)CnA/qlZ>,-)R"]Z'N+Jg4;%\^_PMo:7pu3Y>/frU*THB5"XVVC-knKqP&e2iXl(^A)2c@e32G9:(CUh^YEGY=MDN9;BbbK%gT1eX/=ng`$_AS%oj7OMZl9GQ?'jB<>dQu"G<6D4T&(;_RZFq`>Wsa.d`n&Kj_`[$etHdJ44;&I\5?@K\UN"q^XnE7Tc5<X'CH)T%GOUN_+u:i56Hs@k9g?7&kE5^IrD"hAP4'c5"=FSX''nEl?sWM,qVLn.V^QF(n!BOX)_^,Ki0o&ODEWF)f]_Lq!qV<E&-[FK\m4F4%%A1Z8di5=l$Vs@4qJrnq;1$.1_F^58m/5^!og!V)Ds>,XSYq]!L$fhMpBXs[?GJ@%1[E73npOB&!P;&klQD78SgV74hqM<gV(fe0%WI3K[k`I&WF2Sd[gjOND#Lpmf]$eIH+u`pBnFb>nlMHkeN=5<f._(k>S\A>-k"6SS<+kt'VOQF_Pda-1K0jV'/<AItlcBue-KtYE%`$LCn;0q4?F$j7,rN!eNW4!T13;hVhDNM;qTfa6<9mgm%O],-GO",SPgHRI4D"e`n'a_8q=VHMHZOK(j7eY;0q`sZF`b[oXhk+^[%To"<K@CiL<@%XuV:Ue8(FMESk>ufpUW@UhXI\;VY@SU]K_5C_HTRBVE>sXh\_8RBK/)D^\`48h6qOf0T$RUIu'oKg30B!2+WHf^H%A,mfrpD`Bn;I$#(Np"E0#RL]ilb_;[,grh[!qX`DMVFBW5VY73<DQD_neA(AHl5\R-uL-F>bTNUbsVg@q2`@fJuh66XeH1Gce-8p%lR%fKX::g##9JU/Rlg?k$,RapgEa0CS<dY0iVQ%t!S\]P6hYD7k/8@L#Uk1EDK#r_=Zc@f7MdCJZ@R`7'(/%Ii+c"CK<`E&9P*_5%b7ohk$*,h-c;2BlQkN7$!`1?l$7LYG,G9n7O"2Xlh#j+C4%^A/,reJY%"igK/SVh.-eKg*@a!oY4=BFX&"H)>g*%u%9iiVC<mB9s%;B6jBDkt@Bo:^iOl#EB1VG,\f9A!4jRL+6/M9VJ1:o2GbT[sf+#tj_cSC0A$T3Ri@1./^n`5_CShlL4r&u(a<J3lKs>7)Sd&sA(p%#aN?^W[W<3^h"]>W>OS+,KWnZ43'?T+sskQ#jS3RFIk;*dn4.5jo)kaqF#-M;+/BbSenS!O0-NJ?YW&""MfkF\?&,Heb2@i;@?@8%cDQZKa8Jpui9,lW7dMLXWT6TS6-D<lY)K,*J`0qZ'iBU`&Ns7nUC6tnS#B,Lhm>.?W_J"[NY39Vp7(A@7*/s`':b@#<.M"^p>u7\%8c;T\?>hi!l`j(EJpkX:M%5%$0(-ctnG).SaQu1)ffY`3#9$77-X.RE:8*9hm66kp9nVkB-u=t/HV>i[+nebb_IhDs`bg=[M!O_i%BH@c!cY,3$:6,=gD`.)(=se2n%H\UP%BW.9_ZF<o0O5D7XT_3'[A*r=<SD2EF\,K2GOkTh'6+a2Pn=(['<=l<E-<aJpI>l",.*]D%'*H`LABb5qqI)i94W"gR8*%<)!ckQr"YGRqo(L!OHTh>ZDm^6pl$sgV[HaJ4=7.?'/t%t^/KiJE*\aCR,TS*&6`Zq6]ha7ZCdV]1%;56$k-s],L;Xdf2&@"T,V4p2jL`U)7/;dUrT;ijh?`M-:mI6[DbN[6B@YBu`aAN5f(seoP3q%jfWtCHo97WSS5V!Ec\in(@Y6JhY%,+F;j&S8eRb2a9;o8tAd^=Auo@2eXGT#3qApp,!+J`Y-4+:I?&MKpn$2aPC3lObq?lrAalT?qpdeU%0^@JS?=TdJf\=su^nAF3='%9jnXjHWE#SfRibG1QWq2%?LitXXpPIe&Mf(=<6qsd/DCM2uKt/eb/@`C#;tY06huRg9j'sH9J(n'B<V4RW?P_RQ@KbK!5F;eo>.2%hr:^f0Gc:'[dd6E!SB%'hduZ)%1l])!F:qqZ1dE>TTrd&7?Z*7=!@2[)f<)`7$\*PJJnd[K9,ILJT4b[0_th%lhn21LVW1tXfDOh%mq9X,Zm-JScGE[\/'`(5nP-s%?TkU5V/fk;d7'Nu0FE&8*8-m?k0hbBWedhbQpl+=23<#A\\Y1=Kle^=>i/4J=i[?AYg?1$jJSqo%b^4WU&U<9a=>bR!YtK+B8-'=VcW`"s7?G(O05cP>K5Nk;Yf(Skh88cod[^?:6\ec(*L;,MpG=@ATQ7md&"uk4D)'&VjZ':?D5aY]%2k89Q,Ikb(@O["V-D<GR2pE)SCpP1s!``/"ibn86]p<HqSP_L92,LAc@&3btH+AE`laa`]+2bVsU"\8j=O,+a7G])&[J='&*;s*&%S3_tb@sO<8GF[/hiB_K3mX/BFTH`KQ<sa?K^/Ul,4`;!RIO.N$gatj(?.tt"W]iA+$Mt1+g6P@0?<,EZSC#asZ2YPAX@JJ*VI\Ei%Z)mJfRoGM`.p_uOTg,nmFVtbG(l;2@R7]eg7tq7mM.5Npjh.?FRu.W*^<+Dj0/3ClMFL6C6hm,%''n0b03>Q7StbI%fi[pobMe6h%m\;Pb'/a7SEkf^oRXqhm@R@9+\8kl7.3bNPAS.LB>dN;?XunGF&,K`irgc3*3dJk/#"N0*B+DSm>lgOU<Jta02*j;22*M^D.VNcG%D<dkmaF!kee<C,5k[]Y']qLFa(F-1R7:f##[\5d[,]0W2a"+`-%;1CDO$;`Z'TK@+G@P3THSS-je@aKgi%EhQij2,mdrOZqRAqmn%9Wk/b8(EgPOde+UPfT@pdL/CL3m-"CSmgcV^g_T$]/F\=jur1r^*uQ2[#S><C-=;$,h0_o9WHifW(k]nRQg(?(lW`-eF\K1?5GBV%_AJ7rmnq-V,alc-cKe:*#+85S.)$-L&nQS_58^1T?pq:G2%6dU]\3f8T$uuZR\9g>l:iA8b3fDa<Z)+8@o38R/Y=Z^Aq9'+Mjt^:%2:?CX\Bd);AF7WL*5!+E8dAqm^?m^ckC-JWg>\UpS("Mu\sU*J6q4+A9"09i>'%*m43tT0W*A#W?+-s39iZ4YC:hA$r_Q".L4*dI%_,gaJ3eMNkQt68Vpl!\I;s&[+LZINIfIugTP#osC>sJECXlNDq$[eJ1g3*F"F.L&Bs7?7O&K\O11CMi6WAOkp2ec<2H]-G?RH/7B%5+DWQW<-t+!hGR46'fBf6ma)60I(_g_ZX/['#<Vob*GVqp?8QQk-L`4eVC&[;.G"QkT2I:@%7gpYaHOi6.&TB`1X>tO>>T@'F3p=%0H$()+6ZJj3kbt9Pbr5tW9g$`1^)mOW\^?sXWk)UqL'j!F'Q(X1g(`GqdT7P?(PT;fWr03QnE.2ho!_s50T:6?e0Fb&&lnYZP4B6%h\=B(Pq%-&ni4h<*i]-JV!rWuGWZLHjj:0q%WdEMTeb1CdWhqAA)&^`m%G&"Zn\`=dE6N7m1Prqk%rHsG7SDXauJr%4LQ'k4`8^C%!W>mW'p0](<"PJe16#BPJU&7$rOq0j0)#o$Ws3nb?#34r2V/[Q'9W,<r%n[\@VrOMWHQ&48R*HRXN\JBGn-^0#h+CjZSMRF3RO]S%HX?N`$L.U*k,VZBTl&13W(GDP=8]n75MrYAR^D46=naTRCPZ8i-t&[K:2i^p.p?JUN*X5@kT0u9cBrb-?R*2<#]"CkG1OER9cgSq%@c]16go66G/5:d6Le&Q4HOhCqB.%H)#GP^5s3JB&[K0Oqj&,)o_0r`C+mFMiXp[igB#?j#c:lJ\+N6F]bbV3Ap`oKfmsA+VhN]c%%CUMcFEl[r(Y!`f-WqRhpj=4XOl)LL9a#M<LLpZ&%9XRRj+-4YOiQF<F.P6lKmpjrPNLWP5OdH0BX1H/Fo'jLOS-)'R.][:uaN7Dp%d'B_QS>(mLf-+d*.)SPBL6EfUnCp_3R[q1)Cdg$M<MOJ8PnYsc)R3Zl7T<&+Z?sl[^RQm;d*R,@62MW;g9pJ^]MSqF[bQNoURJ1g%Wa%0f>#qBXDK\L"!Z>-b3FWoK"_OoWjFAI$c8/0F7pWN\P,BPRG(2B&+593!;%OP+9Q%1(rP[7cFPP]'EgEWXP*pkqL?Q`'Af3Bl%&,j\k`J,^pS;`gV5sqLKGM1B7Jt>_hQ7NA&q7P-1T&Z9poA#EkXHU,#-ItfUEF7_AV/aW.s32)*T-NF@q`XAeB_nfXC-T.7BNOj"%kMLW\NP][]a*4kT>3ii6_NXnoW-&4o#ZfWNNuP)q^#*-K,G'`GBCK2;7u2V;[+86#rQT->(<g-<7?]XqH`-+]k-SI]a2Sh_`te"s%5Jj"PVL\B^,'!Rh*Eu/\_f!nZDF7q92E"=)$Q_/>+Lgj\WH"0*!TGWdV]AWX<O^%a\Xsh7>>DKOY-28n7a:8&pY=9\"amWG6QN7R%.=MdiJ=Bm4EN^K5[A-g5i-@&BBFK@^AY$rS$&SmQCfqX5K_V'dHu/(.PR5]5:&hk]ZLN?tPD,0\%GD%/e1d,-nML/!9l'(@+76^I%+)DK17>PT;8^^,t_KgW1'Aa7oD+.Y3@ZTR"'D$sq.lT8c77_,<injZCgqGPDX]Vu,7rCRWQ(CG/lo<NC*th<MAh9$t#or_PcAXJ6%T4[Flo/R%%A=hnS/OcKLFC)n,hEu(n_(u-gTul6ZP3;l#6_EJ%$jcZUi58kgW"8!a&O7)L7aI/4250/krQm">TgK!LmgkN*igCc,%BGt+tEo,MW^$*;N9duA9`3njKljnY4dHWX1*SH'L$sZ6\.OW).F2aCM(-9!u&00::WFeOmMZK>:C)>Sm+/RZFH4-03(^:pU&$![q%E\h8'_9`09r\=$BUD@SiRig`p?SUm7TO,k2D@)TgM/\J0A"^7kgWu#K=AGN4L"YH59R?^7Y1qq0!ispso(7)/%_npieGpT**&m)D%*sq.Q=@aBk^cQ`<aLW<A,dJMcIjo&LO[nWBED+<*=RV"oa1Y*D'>er:[]QjfX15',@#k#<$qU,GqXr2i=E!P^_);A5b`F2fLd0]l%4/o5/?2>!_T2\./'+M>gJR3/'XRc@f"Ymh2!%GmmK5:00&L%q>;G@FfHCnNT@'kbS6_#akbEE05q(l?K(%\V][a'XU2IfH$3l:Fa%0QifJcS-^NjMa2SA&ODSTg/P`$M'Wdd4=0f:$4lQdWis&N4[<AT)K?Y=sEjAB@RLRdbqE/-.DrF9smOS%C,dVoQjPTA;'`l&R2WX%c"SDNCm.%ETn,B<+oMu/jqk.acZF%[KBNAaqN2!BX2#F,XdYAqI4j1SH=6=\W&8$G#+()A!+>7+b9&]k@-IHf.Y]#g2*Z&d'(2"l%Hk4"rJFB[9c%(VkB`25#KN8.r>`uqsX*(cO<,6YBBIm>KJ$]u.5OHB/$%Ll4+l!tQTSQ&Shpo]TT=D4W&;![FlDh<]M=<"[MC"(=%>(G/iXEp?Y2Gmc9Y?H)!W%;mgZkA)R2=5KLdg!odj9aW#:]'D)U?DigMCPll%&U=A2WZ%9ZMqF`ZaK\C("f0A,+92FIY0I4%5uO"%Bu9b_l%T+p6\#!`p\g^@7tOD3gC)?2O[o:JEB-VTng9^d^<,F5O))^AK)F=Ua==-a\/ZO:AVK26:iug'_.\P=]%3A;IK26s^m?JM%5YZ-%5]g'!`c=s!77qioH)r*6=s)28fh<+tHF&'n.e6^1I2G`3?hr'_H-"2nXK`eE_$:MJe_Do^/eUMJ>R&qQ=5KGU7eT$('#r].%@`LfO30F<gV+U,0Du(Ta]QptNC0?CR_>`XPV>?j&!ecrM$u-s_m'2.aN;S+OOI9[24Qp*K/UnNr2'gMoOiYUL?cjdQkC.AJ8LO@e%j&'(_;*I*5]Rd`V-$[OGF.OM4;I.-6U),$+qL^!`"`ao%KMhJL,bS"kXTRok8WUX0's"/b+-dGeL\tg<A^AYe!]-J;FkWeT)k3OX%Iq0)]I!kA#+nlGKX`W!E#De`X4OUZj`C+s.SF6RSnXQ%U&$,3/mhbIS*rf>gF5fnY;I,W%^j`AS`s;HZD[E^tKXpT'V:HcuI*>&!%"CY)AN0tgE*<--U"`phIGXIUTDa'i^IF)?n!r34SDleK-@OU9BV>Hp%"&1cj=SgtFlLaK(4t%Q6UC4H>4jsjj^E79,cQaX'b:3df%_]_R8)t'-1I5L%kJM#lF!C>OLTq]lH>'T%TY@&)uOfJpm):Zc`c.DgW'0XVgYkF>rgF&eo,(N"qUL"EP@D7BQk(iBp4Y,(h.M<"o%,H+h,LdWkphDb9'LTj05&)]gpqcl6E]fTsY1`4HL+!olm/>/d!rfP"L1k5Q7bhJq;EKQCSD_'=ek3gV9*`&F.s4pLH)JU@RH9,d/%n,N0Um6muN#rrhmaUalm&m,@(J*/fp\J6Zom"!ZmQD$H""8g\ZQkckuj*H;ZjlUSNQs?%%Q?u;k1GtWl>>1SRb^>j5&apoK2Jo6S%n`:7DFl->rles-p-/@S*i1U$2H)kWdo,&$;*WI>p?l$"cL6lhl@?D92?@i:/_UK#5C\UC#NgS+A54S12l\:=2EeF7DS:;D;n%h/U%p`Jjjp%J5qn)6P+'.<E;)-Qoq09jb@`^kfXIH>&p/ZsKGp>[fWP8GTRCqS]9V&1pO6[1+a>m(EsR.9Hlo$JUOJ!BDJ:gO9G[8Fq.%0o5\WaFSu(kRtM!4Q1:/UdHutLtZ\35Y'AYIOljK0sgGt#!5s"feUSXHk^iHY.;7U2:N_`0&9Nb3c[IN/dO?R4FnMEeq@UR-9/r+%RO-7EfGsX_BT(8$JT95@57Yc8+FeX^c.st9&NO/7MVQO/p!*_?AE99T?E(""_$6m2IblH3b^b-;ac4l-4WE\9'$SOs\FAD]VP`<t%V9&]8UF0<O.Wko$9HU.]hgLrJ<8dOdYOa(o((WN$52tc<Eb:q5T2,fH<.NKDh`[6!2\2D'bTqQA39n]k@::Jhrua`iBOS5FfG%Zf%!Z$F3]t#pMK4F_e+q[YFQ^JS%q=`2]A2MDbg"#](,Gk>=iV]9!)3&=a%<KTcb[!+k7km8K,i@pnfY1dS'V.rm:>pEDiZV[`=:0Ee%^3u;0'IpJ)lMJCTB29s=N#'W.oI];S:<^R\NZ7JKmPgHtoCO[oUO(nhUg8U:rPrn)]j>bAH))ULOg)*Q*o"rF/.PMKO%OF>0IW!B%A7itr5T&cAB+UZE4(qEBrhHJ7fK@:Z'oG1gZamW1L&cJp+B>k&=ZDOos.II[P(5$8G4,ZtqdQg@i\K)u^cb:7r#Y;PgtStTq%I=h%mM<nGm&e$@/H;P`lTY_MrNErS*o"dY:NNG^`MOY5R/q[g'!uu1^Zk(b0p<p3V/2sXrJ_Mu2S9:-#hqk+*(K)Qgp[<^0"a>;2D1CV%0L4gCJe-ZrLW6gUVh1e@`<A%A(1[AA7RAuf?hmW@82Q@3a10YW]\h:*'>mSo?gNC`rKoK]$$O<c+->VFJ6UU^B?#rP6M2[&KQ]2_%GpForJWIO7J4DTVD:=\FfU.Qeqh4:2r5YFE<_%+ZW??<?5uBp2(C=Ks8&`4!o:sXfWc[rVbuuL$-UZ"\+do$fB.3!<O1mR=I[r7b%K[aBd'XEbm"T<fL==)-%$#>#TB1l_$R)1*O#1Cl`k7*tdf.]5WcXHl<?)t\Pku/`&G_?Yg9)a(Lf4GB_Z)n*LYA-"Y=V'?cc["Bj%X1?:@+XAR4,/7XOr.1oqQT[IB=513U8^9),+L.2G9[bJ&$lJ;m+H:hNhPT[/9k_+GL-&'Y>2V!AX?J`k:J%cUkpD'_K9=;Mk2Y65%h@EVdQ/=]E=QUL.#t2i;RRhkAb7l4/<mLZgEh46:^^!(I)W#O>%'i)A#KX(SSY3'0T:8mufL3,5%.)Z3S$'/G'rrC3Oj?n$@q9/k%NHf$N&;9[q:+dEh.f:>3\44ge:mL[(4I"HcKE3Of@qH*Z9*uqTQFt*da3kfY2W_3qPI93,?`jTMTk8Z0kklo3L;M<\TtN_6\hZ'R%2HYACjVO$H&/(l/1?^kGZrjedbM$&D]/D%TIV^1ABk3!d-^V@!d)[..L^Z\k#KD%=bT[oSGt$r#0"2-X?/#o2ik.#<>4RKB^'Zdj%UZ[G/V:K@nG$24W\ddi"$NSP$(PqSre.QpFN,[6*7=!b1j@6AqLIj3;'8,l##4#b/KV-7/^q=*aHXr3JT?&j7?k&k'KD$'.Gc9P:%2'ZAc9c;s=r$-OgSY)[5-/V<)==(]03elM\!@i!g!5EB(D#A95h>Z@AoVFZ:=YM[H&(]M2P=0e#7>B&@K8?;6LHgh1&HkAnnEE>L%)_1ZQ!9d+M<o7;UY4Z]4;h?+'O,8N=(OlmW+kBbNp2;8\+4p2``/F`Ga*Zd*1m>m,He&YQ_%M"eU&SiLI\rQhK?ntLAQZ]T&@c:j%NOk#g7/3)Hn=f)T:3KZr/e0W#%Gq_D%^5UO,Gq8"[JP?44Ug_[]^>(^)`GOX;CAC\)E.Eua_^[t\KhT45Y2c-':?,:S]!Rsd79M4%O18)"H$E2e/E>LrlC;PS]Z4d>5cD5c*d4`kKK`:rIE#sf30(j6*5S.`L`%XeXA8@n.U#:"Dt?*Agn&F>]d@NR1?u$sU>:2V^Vs6;%=q+m"2EWtIB*&W-(o\$G[!e47VRk"jRr-q9Kn!/>?WC]#o]D"C&PmUR,u=$S];G<cTbV#M_'M[6i.c%A&LqB"8"tOHdROe?>Df/*%G5FL0$&9J$m!+3'$(6iBJ\WZ\!X,ZLqaX\WfA)CYUEN)k+e&Q[a_@i?)\)61Ua=b!8=fr3(h%B8),h//1XkY68a78#r#JpF#&au;%?Adk`o\F?8%AepGY9sJ&I&2!sQ=;^@C2.YT#]AJ$lPsM"jDRWA<RXRhKUOkhha;0>'P:S#*f]H2O_nhZP1#:Z+[$cHEP?!5fM"6?%$:k*UJY>"#E]Io9L/^Uf?"V`]VmW?ZGU3gm[;p@hC--da8o"JgZBCP\DJ,aiW`(DIHOO<R_4"nq@u\S.kk>61)9kD45BEVs6<qcN%h:Oh,pRB.k9'n%hP>n!;Zd9+'I,I",P;LKW5VUYHE\0c9,'mN:Kauqc`TWZl!]bH^&u+U/q-.k0?RhWeV#+D!QT\^t^NC&sm;Qm<%DkMAISga@tQ2(G3pd(6gjN0\/Gs:I00l+t'@MkUYn25dq7-RL=0<n%@1ZD0sk#G^QB^bnMnifeQfd.*KED=pXm?WM-3PjRXU*-4m%];gCiI<*%`-TPErCj#8/N#N]`n$hM\T@*)`$hWo#^Z*$#iUD[L<(>REK$Enu8B9ga[1Z+%7nphe`!H-O*\^E3dF9=ZXAA89NAEdY%_Y=)/(T<c_M<!r:YL":]Y$PnrGonmH(V;$Yj>gqa3.k,SK,K4\VhZ/,9UZ,!1KP16UoOlnJsEg+Uu/#XlLa7n[FLo$7H9$tS63RT%5KIHI;Woq9<"8*\&(uHuq&RP]Ha,00R1B8B&;S]sZ$^$u5[$4,VID\gPJ$qAX=Nl2h\a6TM8Z$C[d6PMeD^f./]--i9a<MEEGS@3%5NcmN86b-<W<%EAir6WVEjeKrO<5ajM_fZj2Z5s"_f)Zt^+)g19Mu5l8,!Y.a(NPnVG=Kq2j+j)RBg9V=aA"Z18<^]2g0mJh<aH>%LW=)(.VNfIeb1iaT[Tt8`'UBE_p[>hAFNG!_dQlR@FAah3U<!]4:?6.gdR`[n==a]#gR+9I[9c%X:MnDB'Q[T1qh;Udef$'1K*Z2%l?P@5XET'nX.CnqBLF'dX^Ztb366J;N,.,AK\Tq\]*"?ajUs317M6K_Z#&+\pC"@[9@0-I+Ca<ErSrA!q&+<kQXG0$GHLIlSuXoI%EqfJ&rU-#5AeXq%>JIqKDX]gh>/n1R5Ne(SY@;,3s')T,@WgOuCVlY9&QrGe,?K3H5FtPjgrr@!g[?Aa7`S+2[i3kFM>tlai-]1<%?OGTZ6BF5Ddioj[;j3'TlX2/IO,[m\5fPALYu/cs>u<XdpL%r5D]1^1@"+EQ$bj<ufBZ1!L+Bcsbj-!"1[NpHl'Gql49*PJNg)U&%:nrX>N*<CrdeqNiZUeD`6i<FsQi!f!!V4MW*AjCW%o/f@]RE%p&^J*DADb#3a1B,$Ct9V[Rc>)4$`b:W2&CUFOk+ku^k7jt62R0f%<bFs'8n6%)gMuqgS#4U,3'.7\C;N'S+Og!p2NLmhZ0mG>BL"Q.cSdfeO5r944-PMaouI16Z@ie*/[?Hb.5o0QW^,TkY9Ut.m"mnC%-*?e@E7aV_`D5[mG>V.rPrAKo.mB//;d.tgJkjos>i]b@c6X0?VP()QGj'(1=f"msJ35L#"R36uIW`uuQe.N"2*i2?<Z>o$(/3JQ%ZVVqTdA!1^D4%$JI)=CJSGAXWp<SFZp_Zeg#$H8k7&\kZ20Nk-D"d&kDHCr9TQ!Ljh$9C97aB"WD?-r1[qanhrRcf#mT\7'F6T1=%?e;,k$cUgSUpRno<dIFQbCdj4#AR+ZV'[e7Pmr[5=.QO'/)4_N2,CdCWc:lX\9KRjle0d$k8S,`FZ3+\)6PV<ri>/f,o?;!;(@67%2p6&a\/X$OA;Jd=\?pg:a^RN>>N.`mE"GUB3%mIuERA&CiBeG%.qtp/gd.Z,=qOsdD+ZtLer>[dKqhtq%)J0m7XZP@m;lbIaRb,Y%rEO\FS@Loc7Q`fMK_Y#FFaMKsro!<kQ:oLJRPrJMaM!c$".l>V!B+<7QE4[("Su`[s)_P!q@hhOD[]3"+8EmiQ](I"\3PM)XuS31%^H%Ui4(CFshS55![?B=%1>BAS+V.#:lqFae%p+C+dk8%A4Ldg.i#@A!^aTcI#9lP)jf?+mI',F>Ue/:qqNdmX8V^S/#(K*:;b%<&%7>YC5LB"B_oC#Jkn+T#7FaG31=dlp\m2Kham/DJ'Dnl.gs6RPl^H:%S,V6\Xg1kp)LsaAiD0fu9DC5tcInFtb)Z;=[n1RU`T;F2#%^XhomUctSJKtbI%cm`X%QCFW.g\O`hrYh`V0b<WF23T^PX^7FtMtKt,)tM<BF9aKNS2S*(0@M)LG(G(>T;/3=F'fKp0K0/(/B&&;%aouIfHo`RZ3)[9/2-SL\1]Up*52;SY.(VjU)<"OC[JUmN+P#S,f$SC`IlR$GeV6N`QuWVS6&.f5B"]h/[GNH"[Rng&4hG=['T!6p%"Bs+g!q=[j_<*QH_(9'__1J3K-L$fFm=WPM[g^(BQF7NX@_E5NV4!P:ocdunaU@kI7F9u$9?R&Q+fr`C#L*8_cE5BdGE.)mk2<?k%fCFC=So>fK766ccadQL+3+87GIIA[+YRF"OWYGhq1REBC<b,.m3Ln"KJc]T*NMY*p3'hLgo>MHoLN?2;+*@^Tk9qF7)Z)qtO,O?D%Iq$O`3lmWKj;rn!]?@-#Q=M)i7+:HWKE7l[\D=`A$@nDK!(=YTYekc@/lM87''PeUe?LRM!-Z=-*8;S%&4_,.W);:SCpQdn[cNa=%QH3SL(')0Ka4C0klQjU#^eDT"ILbV?!&3W\qAVtJbr[2!>sXY?L^l>H5&R")7'"G2Cmo-8gLqnf0TnsZP5@j#I8<o8d$<CjjY)=X%C(eD<)&BCMN=q1%lLJ8X-\.`/A=S<\Y[lBeR7u3U<IG[i!T.1]-`QRA1HEg:1!-h:lJA,,/2K$JeT/4ml#EP&9%E]#5,u9)5Z76M%oaO,4ja^n9^>3H8@g@k'8C!a;)W'e/nDHe._%UG7<WK_[ZC-,e5\MI_hBON"nbp1'M]T2!dtQGipI<QCa?ZV8Y&Vk&>DO-$C:dlZ%4B`QbJtdYMA;C@piO=:Bi!R\mkFq\WFaOa"%:tY^c1N"S8fBBsRm^B=q\IThBKh;?>C9`(CUIFL+55j.34EKO4bPh#8DLk[@[Fsn%W5!%&igS!SB^^tTRUn(SjB6]64fn9[n?:Q.)EWP>Fn613o8>3`Q-Jt)FD1F#$I(?7,K_YUc[g=kBn!C^j-'`0:?5b80?-;VFmZYZ%WQtDFJd#\/`Rd:UI]pd@U0;3IfA_J:_QgcYN:WH`[Sq3i'(KC*VdKY:+"5u)_n.kf=h1&NfW=8=i>=L\FPO7G646UDXH5SLS?<4@%5M=.*p+"t?J@;A&Sp'b_8DO<#p20N]GorC%1W0E^gj>($X(,G6E`J]Wnq12cJ>soL?rI[oj)=Qf-JcCNT(J]$AsSeO]+6%\A6E;)%fQl_Q(J2YD`Ms\AG:6q7nC>I/3K->3<?:&nm,R:ASTfB_h'*Q#=Kt3N9cQ&5Z0sZ>He8j34]UHS9'2`C[c0+#)"#A6O0U;gHbg=R%0t.MD))_/Zp?OZ;W#:Xs1phT:i+f`1:rBk<;sMYr;L";?37FY*m:,L<Q6CDiogSG!`X@HflBRnkP=47"N8"+R2I!;%9OK]^_!KQ/%bDCibZKFCd]9\2.Ul59orl"YX@X+GEQQTh\b&*)(6%/;[?mp)2i-n2>T=DRr1^,_t[J8;liAMeG]+EJOHP./gcY!OkS`uHCj^Jrb%li$6bAN=:"1+J=eQr5^$W>EekcpM0nic[LO@WF;D/;l]QGd.lb$rG._GSsK:qo3=&f)*n>RNcMV>!H>niO[;^)63^a2iisb7CODC%>W\WRE:gl9D_;Dr?mGpcc7H[;#`L_j:<k-@MH(NhcUIfGoS@1u$95nA+g7F,&4aMO'2u@PeT+u,f2*%0i3N&XrDS@TZ"Y$0QtiS<%`f`c+FB*ZCl(Hk)=[.D5s#g,do+W^pU]F[UK[s)3C8PZ\apApMP6R+?:/H8bM7rM0.=ikALLTtII:8Qn"tX_cI%ptP>N+-pHR/!Y%.oF=6]HKANhE;Tk&#?@#\*!Y:553j-kp!B;IVTKm@#q1P2s!D,H3SHu8P[96LB$])La_KAqi*))Ec*X[b_-+[ePL\&R#!J^A@Mkc%d3JnS(a[d19`eB%-.SJI+glE=!6k*o+VZCc8Q>@S2DXAr&?D\09$!;0-RqIR5E?7OB$AW%o#^BuM"N2fXsr1QO7#,-4=NrM7;3<M%MN]!#CcGtIQ\64D(jT:G5$PHaGIp%YM#1j1mDt%+,-V,#U2>asXcHFJ5]X9(q6%FmK9P'==VJb1GRN%,h\h!V`WIY=[iV5#0s(L`%.h7Q#Q-75.kn,)FFhQb:PkB)]AIrVrUYROGYpr.94&"nW`_?76O*[247[ppkdI'QFQt>)M]rTskG@;lMDY6OWgWC'?bNc_,K'"W=%c'e2sG0?cPH(qr$kO#O0qL.F=,G+D_M?AI(Gg/#WMt>$:"fKlEBN\:[dOPJ5Tdk6C?,#0JMi/:HJ`WDo([[`4Zf*-=eWWsghioG:%3rVB)lSsUkEIRo?4ing(D#\e.49h^r/ho)iVFg6nme&d(6o2p8(M)=YIKU%I6A_?hB&AbRc^`nUi[hG-WP%AA<jldB>kP0LFk8>#%;SckW#F@;dqUT:#1uoYA,tpG(%m6`aLjVRK4O[t?0r)M*jR\1$7;&WIbo?l`="Bpl(:kuuT(?k!Xk)+>"Tr]#;<Rbp8Ak%*.opK`%Uq^i7BN'cTe\q!\$BOR]@bh*(bDtbH,(2ZJ>uMTBHP[6`lUksAKC8&SZF$hWkKO'T\Z/F!kU&6CkR<K>TtdhE?IisHW$5_Hm^r:t%UU3bV`q(8*B5$>fHW3/gge`.M6g2(eSZS?r8V+)t't+YTC$?$pS'O%18GV%bLS"CbX/4S6dmE*Z_D;l2F0B@`TdO:Ql-YhKF]I14%Y1-j%)'*?]i@N3$.;U'kX_e_-TBj=GGVk<hCNE^%9hmnI38PtrneB3`J\c/=[!T,]#qRcdG,]Q&e28oqjoVgXo5f?XEHFn[M"^D\%#Lg59&j>)Y?>\IneIu+&;+Z]'-jC8IauE#Tmpl(iXL(^!J2j!LVr$8'&M-fnII82uL2'"giuq,53]^3H[.S9cF"8WM%34KO_,!`-%^G4;"3AP[bb\QHY[^F8Iens/A9j\qHY*?k)W<lB+>*H$=D]E&T//RHD-*gdJ-<5EMk.rXZ*Gdb=K^6j7N%gn,-tbn'@`NWq^Zi)T%@#`:sVqR,L8>8\?E#1J+ADtb5'ct`M9N(c?JOS[a`M@FnJtMkQHFFB!SE:lpjG^Et!A<+9*[tQ`lJ7a9)G;0:r:V-FZTFO%I;fba%aH"utHUO?t)**CmYbjSIWd)Y.F#t[aP[^^k*aOg%kuOnGAOP/)Fca)VjpANne8PYZ5]llB'"P[>U4HQnJ?fJ97o@AuYUeM<EqH_m%\S`Wp:^ZU9SRtNQ/d_L'J<&/YHnGo$VaR,[C![E7:SY2P%42oE@O"P5'%Ju!UUqW[b$q949aR?O2U<k7<p\]^+]m^N'NZ<_&,qeN%`fHbZ!0GX_iclcgjW1hl#+F0AOki=AgX''kp,(OCTo\[62(X?9.=>U]'2hi,.K7hMSiP!+5-"FEW.0paRh@&=0"?R(HUE!c2E2?(%2K*MI^+j[MA+She_D:Sr6&q=N.=#=F_(i3m4SQ35"CLc&Z22dX4cL9ta<:Ra7C'qXU9aU\8E`Ki<ktoJTWl7ne[L5TO^_`b:Mc*J%hsW?k3/G6Pa0_C#Uj'-hphd)m)RUk9\NLb[e;+Ud^<&8,`L\O+>'&QYEK[Cd[r"HJoe\*@<36$>SW9bbcbnh4R-bc$VXoZ?+t^J?%gWuY$=VFeX,dDWY_NEp5=FEF.r:-#*D/B'Yo:SoDpN6;A<8hM^];m0me^o*XDDON%;mu->qTUs"?EijEDuD%)l'mi`;tGDZ(#`%H%=^B-e<e6"(G,6sm]Y:+_b>,K(cb8#NP2*FI`!c<lWb3tC'C!Rbo<aqLg`n:/rTD?Mbdc,Y&BTn#@8g<d`MSI;:^f'N)Se-@!q>Dp%(N_X@ICiq2.inBQSgp:miqOeXB)^;.o,^d9=!\X45&T=?*Q/A'Y*+ICF'/hpNP+FKp1U@,1c%t-3UmP=LUR:FdXB9gRcM]t:)^;Z%hhUSt2*bKjm.8eS'5>;%4HYQ!r2m7#-MGD1IHBZ9jP0sV@u6`5\MpV#YT^Ps@_n@BJHW*Kr.YM5-p0Li6W]auRg&i#P-W0?^[#m1%3>k*Uh\-`'j1]%KPu&.7OhHY6QWX".D(=DM9=0,Mp6*_%H79^nml)9q4b)1sgn/K\r7hr8n)2JG94FW('AGa#FlL13#AGpR?A"Oi%9mlp_IChX@G/g%8-m5?:E.33V]4smk3*IM/=sInWV+?80:JH4-N-MU%<14XKogJ;HGKRkd?#K\D7AJ.UDVL[/p.)\TT#?(!9BYDW%Q8,X'9db?iU[S)tlElSIfoKT=SDYXYkg'Kt;`[HiLNV!4nRRH0@)IJa7m`rA[P$>0UWX#S4+.s#(m!b!Ta*j/'Y@"!qSd<]O20QL%k7'NAm>`*Q8>c)mQ[X.U[.TKTD-uIirOq$adeUmCrl56Lk4BU0mjIjV[)sVMXo:-MoAC%+FS6A7l1<]f=FL59?U+@'Pl'Mp5r65I%&Sm<Tnbm0k==mp_AE:I*ef:QdJe#V,BiqBFZ%)f%a<=(BPc4W)"($['n./#fbAo]eFP8dnGG!^`Z7?BPHVJ)>`hqe$nD?Z;?tK[]%gNNSu)Qr`[28d#'D=>_3Y%r#Xd_n>XA$?J_XM=DBLh7Zqq5lujL\/;_o8:3aaKDW]M=T5(O3^60U+rY8fq\AgeY;lU"0U(<>5u;k%G^%edrl(&Yg8Dm:e*b"h($BLqLLglg7IrJt5Xj?+BsZHq16t&@dd?$[N["@EP>BImCmKn09sD4!a&-%<,Vp3ui6_n,A7DA5V4i"4%LKa1Re)ROK1p&QJ9sRLCk4CSLOBSu=Cd7UoZP&d#O#DNnETJ40^e/eUUl2=HNJTV>((@RTn_BK7YkMg8+GoNYT<.drO)sp2ngcO!%lHe?/mbC3k?pA,$fLpU2E]j(82&:C:^<=)X1P&?99Kjl86N1!]Mb91>?'6)TK6[<70:G&KOg:Zn&]EihbuVt!;[U>dRBa0XF/eAp%'&OJ6hC;HafFBp+r_`+G;_J-=$(]]`O/@D4DP+C%<c,>mV6*?K9QE+tD?_q,,B\LJrA-0>l?5@hkI.X(M*pWV2d0\fe=Wt?1D=?G%EO^uk>2V`7YhNq9(8`.X5-HdWO%h*:3!UlB.2VWgA[8h@#cWWhV8t(4BX.u2s*0<O$;ktdR'tn7p^hr,92@!JT>'CZTRt0M+EN/J%r@4`PGo*,IUd&$>1$KQNba%$#*P3e)@!l>@+Y0"KFSc(heD8Z`i//oeSaWrWH@8TD0($"9_;uk8CdpXL53$-G6CH_QNRN<W(J8/q%;]V[XGGJ]oeE"tu';sTn1R-MRh;iN(caEAdUJ0f8-Fd1'J9c!4Bkdq1X)3@9-NA\d+FqB3dk?s=GQ)pXQ72O"p(AW6`5UK6V+[4H%H#'E^dXA1t*rYou8-lSE@_2MahQ4MA#Ge9ERgs_LQ`R1#QZ[E=$WJ!CT2r$A'3.nIAFkjaZ2K\\KuH.t//#&d'IXMlcFcJ8WO+&X%a,PdIr0J^W>NE1Cp</+-"N_8lbGHt+If&"\O+7+t(uRpY'0B@n^'EP`T]9sb$DSI(JP(o+2C6@X2]2n#(S@@[9Kj;A<b!Mu$c]$E%,J'tdNYhlLrZ5pM:NS?0q"J]+_WgOPrF]DJKP"Ek;eMQa^]+DpZPIMUQ!=&]8?!;?lRIbOD9I`.MFX#;l((:;W2P6eF[mU=J_Ed9%_h]?)d#9-a6XG$t7;XTcFQ&ZLYs34Pr1LUV=I)qd[St8g/Mn1S,$\.?jsA^$?('QCM]j\ii;<IHo@%G\!hQ1Ya6Z^7K;u'8%6:P%%R"l*Ya-DRii,Q"X)(R*Y<Di5_rh.!^(2):8c^[AW_1V=qSY.^LbM?3GMT*-er4<&"bcB5[;%?<O4-!oP-.rN;i"T.%^.9,!lX_=o%[&CX#;_?`$[-kIM%Z#s*iV"EK1'/\c*5dJYXr"dudeRFedmHY7#9?h7aS>BA&^46@6SBb!TbKuBLp.0j=,A>9$Um8u:/*U*=d.;t%C5S\D<?iW<hXGS=QOli,)_"sZU3g/@.KkJ-/FjG1NP*4d0Neldbuj&TUDRLOpIM8Ak"eDP&7_-giT2#RYsa4oUY<!RdJ-RPD:dfB%.;C6H/pJ*+;<^##/4P<Y550[sVT(l=g-!Y_2$Y=j=FZjN1otNW[\Ite0On^a?>4"q@01?;0`HMBgr0TR*VWRW#K8/pnT_85S0*(_%N5+K4'qc0<YH-L"\qqXNl;YNbCd1JqT[&PkMFIE+%gGhq#IC&o5uFDkR.WlcPp\Esd2E0dYV,WaX%J<;VAIU\%'@o`OO8Go(>\Ce%e;_A8"jCDd47.rkXdV,:`BmmF=*b%tYWrHXMHaP"3`0/68OO6pq,@UfDVe;"`E[B(4TR&=%p8X<'>R0*32&)c]T1ICVKp.;RMZt9%R-J)T%B5+dX]_bF&48%;,?0FYk=pLI[kLOCm7_?NiE'I6&_(dLI,E.FmdQ]&k4rM(EA:+$j&2Q.X3':DTpRX<5n/W$7L.DKm1YK\%J5><hd_rg'0bLKCS>ht]eR1oB$gFNjT*nl$ebb>s)#65YRGG6$J]$lQlGf(S,HBHj#+3kH`W4S`1r/]DgC**l[mG==NY!iP5MsVH%jh^rqPl><tq?Tbu_.2&9P6i$<7q$@Kh#7#=Z-O^3WH!gLkd3Q9PtGdm*9bKi#b'5L*7V2kXSQIDe\,1n?Wf3>RcC2l_qh>&[m,GS%Z8sIH0JtP+D5D/h7EYs3#VJnUeOF.WR&6,n_Mr`@-P(f=Jm(<*$lV]Dg,HP=mL\IC2O2Y*q,b>t[45R[8k-C:DB%SO4U7CN)JED[%on?/+W^BG.3!C8[Kf_\)1gdH/<FM+h;Y!$gQ`ShFe-a0mE/c;?G'Xe]=]]S9T1bD/?!et8`E@K_&c+.1m,p;^Abi$3h.\Noo?c<8%Z8jQEk!;oOm4t[-;pT!`WM8GVgC$Qi2:7G^!UYNX2+((0)`ke%f"Ek$*X"cCQ96U#caTU(!Ug&(PUhk0CsW$YiJF#`YaQBHJ1S2P%bHQdqK%TnVZb%$WN/I"H]>!alKS/s0_(Okq0H<MRRF(!U"dN^"WR*R:OO%^Q8'bOoH(J4FD^@Yr6;;;D+`\r#5!]2=:/5R4K5.@V%8r@F9Wh4X++(6qDd,'@6+ia6>d9Ar,!aE>+HnHhRM%MM.;c/tQ>\nQ=G+4@1#(@Rtb3s[KW`hjdJo1.:02)`>8-+=Tg7a5?]_YN)%cWR?mEAs1(k_K;bF*uM7i:DBqmNt+G=<X4OOf8s?TnlICkm;Td:p\>?kk+'m&hN$:$1@\L[3lJ!\I-mlLi/!Y@A77Q_-gBT"M%!*%ec&f4T)<10I'gQaG@F?)p:[q='HR[AmZC^LaE.$QH)f'0Z_1#o'=d@,WeVY4ffK2a%>V/9ZnPAi\U%s6&r<Z+!HgC0!([cD(96gp%lHB7,<8]`=79'#`P>Ba^KfVkl#:bmA1D,TKrYaZ`$uO/[&;B?hIKM,t?D[4-h17LLcs[5L>nq>Il/at.@c#UPn<=ph3/@\Sr)E&R%AQ"g5R^kljIAmZnrEU:#TDLVo'+tYmPRo7]*4c1ZV?1/6?aP#!pWuLW:peU9pI%dCjbd5Znn.$?^If*=].^no6+EqNQ^ARn5;Md.%54W[C0#m`A&OtNck"/iU0)C=f`<oq+[<Ilg=qAH)]c.1]0I9%W5]h54=3UL$,dDhUl`Hp\=hc+6-m3ZqrJYZ,KY8%$>pbE^(cUM1%oWUXj@[#UNV@X=@(CUT1?g2fEhkuW"6Is<1EV92rZ3W)'I,+=g+fj.EEkgLiK<KCDn1LC,LX9e:msQ96Cpj7&KCq_dme\8\Y7c[e%:Qu>)N?FE.#ki\f$BhLXK-`tEHPP+Q8bGIi-o1JU>nU73eJ<\A@qn8B;mPtI-sa%A!17gKEn/tlA]7L]bP.rFY`A;LNfg<J@LRml%$!YqXG8IV[&;#iWU0G_rX8HXT,>foL0F/5j7R0/DQn@$J:M`(b\F[%2EC]b0fL!oCm>m4-`U's;.4g8WZ3D2;g=BGGV]2b#+`@*h%4L=XYGtD1bc(DW.D\Y-f17.n;mVt^'L1Y9c$5f+(7iKiKJd;se,n7jA,=1loBbTbiX61EjLBq9((^i"SA(]s5L:gj+"5Z(-UZmS?%"be"=>3gIX=/+2P$f4ZO@kBWO7V;#B:]mlo>7Rga$]KD6NQGfZ<c]F/U`D$)lYXC$4f=A=;5rs^bZQrs(>"8$!p1k.27/H3I4V)O%,l#I@Tf8Z,Qc]gn25+;a#L#J.]72V2)#5_\"><Rc*:]:VRf=:Y=ng_GD>/Q/MY_AUm<`0<Ar4K]WrP%;,<_/Da'Ai!K`b^5)d.%p%*Q>![L(o*"[phKte`LgNOXbX1R!?S>oR<Il=R,,3HgW7'F^_?:iQ/=8a6aBU4E"3c\?W8iN0/l@(=sO0Z9>$1g9:p2'<Q#^lVp#p%`n!!Oq]PT=J+@n\D^gQXieSD=lP7Cjf15TH.M5kbPFb.-N,D,X8mDbcrjc5K$QJ#r.u_Ahkon"!'+5r4K*1Bs]&2^lSka+!WTq_,%\_lTdPF_T=[pPs?r5^3,^_*j>lU^A^?)n;c\2').)TJQ"*ajdHLJbm`)RX`u8:@@BaQ09H"W=LU(P5"oNWXt&DPl<71*l]$4)J0&%bhGj5qT3cRj0nmgWjH_bob*FVg=8g,m9IVfbaU5jcY/OakV%_7D/?sMB-l:3F!!GJ:_0.9-TN/!I`>qE5<\Gtb5TjC-RV:cD=@4#%P3n*;HQ1^hBg^cbDIS^pD"%83W!a7GKCM/b^qEU<FK@9WLbFiE-Lo\i&?&F#b'gp\0%2%jX6+6<<lAmS(tuVmGLc",j["1W++Nm0%CNNcElm6DG:]j*pU'<8s&sHj?;\Oj(R9g0eRuQZl?lg0nih"^mTF6u%lS>Fo!.9H>fL>:ie("=3j2Uj4mkan]KeK?[[bEi_ki?([%^=(&91!]J!"$i,80<j[dX:!('3Mt-26T(U8qSk/D:0fOWknHg1V$=GO8I&F#.`"EX/CsQqBpOg#<B=%!n#Q%7M^qGdd9YXP$Ui`g%7G-Y3m8,mJmO\R-fP_)jo^i1j::3]lT(Y>slnPZU`8o,#qlRQ1Tm>>f7#MI(U>L!=jc_RW8mh"4A$&4tKspnrgE<")\h6XnE^>f+%DJmQ7@X$%fQHp/J<[)HYXglhMnh)pG.G5B<ArR<$H";857*l=cdHUaZ[/OZBTC_WmP`E$&<OF!nc=9d0%iQI+;_e_k20=e2'hmu9%2j+Q7)lrZ"4hr2a6&6;=d)LH*$.V][aFr;2SL6R_7,,7:mGFB$)uKTJkPaLBmhaF/It'HT59CRi5]#!F'VB$f`3plkeT.f8<B[OH%&^c_T'A614'`!_Pp82-PR)]EoHB36b6*L_4,]qg0+3T4u<b5:#!W=#n]pq#79m&[oP9HAe"(?,qLi^\/*U+thO*/u7U?SDSAidT@%\Q2_XD4Y54,i9sRdt/:@3luCFG/XK:&@!2_SPBa'@'T"8X5%7(C%&Vp*dnN20[(,(L.i&gWZ(NF:o,ih71e*3dP<Qr6qVaH6<2Y#%Q[6?aN"?AC":4@<C]!qN8VoJN-rl+[SbCKiVV6N"`Pi_m_q<q#HJ5d?F'l2QG_oe,@ea2#W`MGU.p+hjkGsMG2;GoC($GodBJ-;(%+I'CYHeRl(lRjdHBYVA1bhl5.@&&I5P*ikoYn;hG7%a?Jd059I%1!UkZA$:0;ks=5)TD1M')9#P)aG*)KBM$"k8kGA3Nh0KdB4g:%+DN5>@f&;S>0;m.J1;8I#C"`PGD^'t*n\&3/h`R&i%9bj,K-/*,GR*RZ+L"@I@V2@[AA].V[h+aJUVQnAZngGdOYmcNLH_r-n>o/%df_/<Z>[ek^g2Cr`-F^oIc!e!`-aSW,`-ZeilcsH;P%mb=BYGh>-MeW7u,XA,]k;#&?"!u49aMAL!3N-+@CRdBh/7NUX\o7I6SB-%7"_AH)(2c])]<FupJ)OdKmH3%:LmeT<>8n!YrrClFKahHi'#u1IFt>BRdirX*Soc$]E3BK$_7U3X/T0qY^3(*$g"/-lQ$\OAJ2"-%8&m3#DhFo\k=m!'7GsI8e%K+hd=+=Qm(6jsK$+@9pV]'6NN%jn=M7AB`Cj/C?0+_m7m#+J[mAn"VVl[5X&fXoC+-*#m],f9[;tQ`%.I?ZdUbpjc9<)%RH7UMDj74cBinVpP8(Dk>kYt(*/]?C29MQn=WCX(pE`K*lJnDXBeRPmYTjA@PB/0%Sr'K)t8^=K&WSg.lXlI?$%%mAk]J<[`I7J4(L-dPSJ%?468!`X\BX[#MKkDlo-n,uqqbg!i.ncsAa>6*,)'#UnjbtFCuB!V[/SFV'BeJ['(^)0#e-Ii-NG,MXo%9(XAk)D?[Z@'mEYR0[:LQ(o3ue/Nh1B"_06^+&[6ejF6[7':7/ff((AEgr`](rjM*)0<tD2PiVU]DCR7%]qsHZY[/`H4K(iCt`l#%^oH8QL"L5?*aLF;6nh;>j7lh7Wh/iE1ZDl@mf[\!QtG*O3i!0Ad@sQH6!H.k3*WBoK;()QWtJ0:nZ2X'd,\!J]Z3)4_sHXU(N^-u%c='abB3eI+bIZ)=1Xeg`]pd5kDS<bV0TCk6T))9OS>3KuY1j3$l0_N'H;\Nu,_%K0Kf;)^WW/4A_5+Zd9Xg)*<89dp2cNGE1rq7F%:F`a)(T9.h5g'ST#=JriX+cA7apDfl?/I\<h-G\1D'^e)gWUe;n3F>'/X0[6g(OV!ULDH_2lEIV/Y0FER.("3`N%7t4V'D#);o5<%BGq`kpr<0tqte."*rf[W-G+IlO-Leq8.Mo)7pE3%5rFC40bJ@VR7TT)H]B72rOM$(dT=16"E]suPC:`aH*Wt"EZbbChg4LdH655j%ou:)=O4D.M\[4:[kLtHahGR:-=TA2rD6JEl90n*IJ]Nd@h0t3fN#&!fmdKO]8`[6%5&:p:VDZRC*_6$*=VC0_Ph'QZ=[2U9g/j^k%3n+CCL::a!W@UP]ANn/U<L0fn0R][0A8-uEDl$[T"5R5F8-tl:NM]8uPIQ/)*Z<(Y("#;;Uo-8uq-KAVaHU_c:\.2`$`7F<>1@JX%-)&Fii+tq1!^c'50YVTR9;Q6N[&)Okd2gG-eH3)D5gD.T.\ZHupI^UdK`1s)D)dQ]YqD3SKZ0_h3'/L#CZ<H`<R!P-;%n#R#sD7O%H2.]QO#p0SC1fkIW=\64.(ft]e^>[Q0`+OB>W@Wb#r>lDd^;-+HS/`h+^H]2;%u$a-%/srYYd4)#5Iman.cDjJaUMBSY6rtr%A9=%0AZ:;[IN]ER]-nH=`/ZBh._kZjo3<+]VjTN#F"o[jU9,>p$FDjj1HuNNa%**W?g[%N$#eqDn/uo7`''XX[@U9pODCo)j,Agmmgn`%@1c6!M4jP%878G8q;san+919**2B()._''ncpO"#+,GBWhep,F$10/?RYjda.rRo%mthOY7&hl:`Y=RSWCuC8J(I2)Kc+jg:0/7]%]p&_s5`5a\>j<EmbTLc1T=NkFk`3mJ\%;9HR_GaNQ#iuD'm0&*7]OFcISY>Ql6X#srh^;PUgL<r$$0S%o5DBLADd82U%D3SRq(%5%ekr_fbA^eI.;YcjH@L"NU3a%tRoVTrHH1jFll^.:)9/V=5gd$\9tuKR1Eg&QHgJ-:fQ?:-pZN4_"^%+6P9?SG(f+J\IZKM]7h[K6%84_<k8pTD.YPU?%W&)gJ\E?R_e$#I(Pc&DF](OF$)E>a+0&(LGTepO5Gl#/*^ei]uS,dD=P:g*&.7#kTafZ6h''/'5Vi'o%/9-6`%0t<*9>76$2=m&fn^F*2i;&t=Dl=N7Zm-]UeRRNXp4QuO6MLhK>57mu-f>Qnd)^=A8((Qa*?H(5Vi>Lb.]#U\,DT+Ed!MFN$'gPci%)q+BG*k^r#!er5s4h/-dPJr9]S`6'@=[*.F];o`Z4g4UDpIA]Jc0sL*(c]D0_otl(NCo1cTYo0EDRX7c\nY+8h^nh5hKkAs0Il/J%CsOPkMtp>c>BZ!MO>`*TI`C(&3g/a=Pu"ta[!Zo6+pLAp]QRaI![(:`=Sj.&DFi!9JbgE+K5j5Wj6=&1g1&s*"J-=a@Nbd4IT_Se%%&/1(0&j-UY5=hk<.KeSD8,eDp?OpSht(l(RN74_HJp@YX-=a$Xl`e1<To%Yl<6!]VNH@G$_XkPB@mcZX=_g/n6a++-7>&PR_Vdd%XJ#3.gj8D*cclF%eU1VO.:=,.fJn"n-5No!omKN]Dfi0ARX=V$SX>N$</,"1A'k`7;pj@3aemrqI^8:=n,ql*)VV%>XSV4-#QK4M%%Et21gQSUonOeBNiU\83\D7"iYK4j)mHZ+(4a,#edMF_%E*IJ`T1A@^np@a1pTI'lh+he_":R.0D][b*Ubrg&oo6-GIaWYif_t("%JsB14H/c73r0\<2WY9U2`9`-qX0FP9iU(nI"\#uZg!!9Lc2E)H/HoV^S[#\OHerj$F$fRY>;D.:_H%nECqsa9ECMG*bkJ:^YIHHW%S.qY!5X[dBK=9U9[[=s6h:J9G[.:.Cq8p$!64Mnd\hdRDl,!QVSZZhA4_NVg\CX-l27qoQlPJG0fD%_!>&J%aq]N(T=$3bCW$;lt%O&)>^#q@O3kiEJ)"^oT&e,%d%_Oc.\mQ:M%kYbndaYSW4dfo0^@bg^eSa0M*#PLEa=e#@=-UaBc.]\Af'^eK`n]`1dhp.h7rrP_=%G,.FY2nH;fi$fap,h9!:KS8FCgT[L#NZZ#.8*'dOil1dX:LNL,[+P+![PE_^V"[(O^Nt?Sd\$9u0CN]9e3#C;VtB`XmX=8jTC9Fg%=(C@iN1L!U@f5,5r-cc`rPn!4)qF[PS\);2o6sMTV(o5CDI+..m5DG[8Wj6iLJS5eB9NbkjqjN;s8C!AG5U6]WPfe1%)b)]=P68(%kgDV4%e8/GJ,A>OiZ7N:AUlJ:N.VoPf\c]p;1>6L9?#$1cKCd,JI$g\'qm:r;ODam55KDi):p6g1dbRH6IF\p-=jm3+%9W2\+`S=%HR@pr^INfnrr$rL@e9`oXTd[2W%WV/A'eu'3G;N6-9NX:ndl;2Z,M;IB]^A/0O5$W`HNM/?nN/V"O:3r9\qpt\M@b$'p+H,jrXnM%BC740+>H<kSfAZ:JuQ%]mIsF3A<,Re]=jodDePiZ8uU$T03tROKGfIL0*?\s$",1\4SBA!s7NcmctR4A>ku&pIt[6H'Y,b$\TIlK%kN7-3gA;9;;#fRXrZarijPN<&mud8a)+5)J'DO%EomI;ln1=UudA0>tn"[F,(D1BIU<i]kYhc?F>Gs%J099=Pb7Hf.:'hBS=]A9(%.o.RFlo783p>hMpcd=k1nKeGA64qA/%VP_B;#1n\LnS/prH?>\OGg)#)Qfo>a8!1[W,$ZXlnJXM?^7(C'k\g@f7VE`ll>Nnm\-RW%gC^,5h!"p[TCh-hPs-afJ-G"5K?tqZ%6m1mNckr8Xk_6:\3gXC":*.MrS0cZcgW+Fl@WF28pKm2>.kME$i>W03H$:0mYMVsh_r'0%:2>LQl?$%X$9:VSV[gp1^:OBbU4I:7X"7!2Ra*fI2S1\';:&6Q8>bW6GdPoc>E^aFEYDX_:"(CbB`LPKANr=eaBKj8gD+0_2!`-*%b6&sJ';,p0pLca;g9r8)@S^XrlnueqK#&t..E>^MZMP\E<]&]bf%ANN%c7;oX!RXq.8`od#gq%5E'i&-k'_t.bhf'iS9u51V(EL_%,r1lTm=%d5"gTet,fEkOn:!ar;]8-\a>";93=umVh`,N.a&ZIe0au"F'X&c[=VEMc(-uZQEh1_KJeVicW]+-r^QCt6`WRr@if'Z:%9\QTb=9jGITchUSCTme&j]gJk.TL^-_Zg@Ys8%M'[@lo4Dn[#^ZN_R6<+e;taFFNQO*kN/"VqMW(\h"*=`.7tn#%N4NKKJp/<RV^%OAdg49LnI-MSg"K-@mkumsX045uB6)%;l4[R6=km<8-5uS"o]c/hKUA,]XEBZI'PZ5H[9KpL7#ANn6b]5o,4>So&Hkij;+df-%=6%"M4'>2IVjU>t_V5IeZ%F!Y)jd7tj^L'DbaeqhOOfDucIDSrb"G/1%?&^>qYUTMT$f_sclhR6`%Po'_daURk+-/DBKJ^8Jjp4mOf?%,i'0Q_\l"n43Tk5I52Q:b'G.A_RLW/,3ls.\77_Gk!T]ELBW:T\\&Ni#(cUO!L`Fc.)nS[j@2>X:r#_R:-!hk"<&.*b`!:*6:!tJ%JaAhT:NQMXPFm[,W3kCRBd3H=j-B%u0kH\5r)f8\Z2PB)g5"SPk6@&oE$tW0,*um=-%l\*qs/g[5.2htgW'ha7(Q'_T;Ti$]Z\LJ%krieI4\eLRN\U!(2?*9Hcl^$tVq??*IgY#<s!.*45OqT9XY2H^Yr`3tn1_EL`J+87d0`DieC,eF8IH$,q=@4ABXF8Pi`R_IOH:eO%^H2/!?[h,:q3.J)K6a<#\s0$_EDRY".p^UQmca*/T0euDB'6D$PT"%Ja#Y&ZT('kS^]_/+J[4>AbZI4<UojKD,%PV=9?\Uebl,-t%DKnGL1F68!IK-uPG;B,AJPiLFqN8V_H>-R1p6N2E,;`B$o%#<H0gV.kU,.Ri2-#!F!"/C9Uf`^,!(g"EAc`H$TUO5c"S"`ETd<`c%G_Q`*JKS!4CT6H*T_^EsI0H`1[p>$NEOsG2LE1"89:--!0H,D^^!+SUM`=&*"!MjBiDnc/Q-VNlY)LZ8D8J@:rGL0C`9>'.k`S0H%B'_NeSrV#rL[hqnO[V10X8DTria;lTFb^JPnoEVL`Y(]fQN%BW+Wae[bdS>DqLRVVE%'4F0^A@lh6O%4k11%b6Rb9#*i'SIK/\A`%4VF49OX)Xu5kS,WdW+nq5;u9md?6YW?/(C&ZDqT<Fck%@8VDM`3"9cdE_"=`+o?3s!&[rqdcI=+DYgZQ"B5&8Z3hGdiY4soPX<==%n;/YArKoE(:XH39ZA@F+C+sLBUT*d-`Pse3Bjjk'EJl"o4;YJY9664,2g!k]f<P`%mXaf6j&\YfmiQl>T%`]A/,O[eESn0PY,iT0%ENF[`8Vj7_3KEOHKqF1F%F4O+%9C5;#G?!QEu;nY,%#E),>QI6K</1JR(h7W-mMH:Bb\I04`:;iL!u`Ch+.G^;)l8\6gSTdp^8@m%[5cR=[mr1'D.X#.5bS`"&+0kMed)$+^dM#OW`05:?+IpcKBD5XjWP>$Ng?G-Omfp*(g4R5$i%gV98g\f<uK;TMB('(MR!NcD(G?,%R.Q/#IKol^r'bjCCP;Tq\.Pc9W7-'Roe+D[)a\U>)`P\fJ0obU4`XU2"84*Tc$O=1&.q2sc3gCCM*kFTV8^.Q,Z*?kB-$bMOg'<`%)c2Z59BN8q2Ra6(6MFET^3qs@h5!J02,%Ajk@Y8XE"Ss_WONX7+X:CZ)Ku.HRf-A)'rb"J%lR`5ZB.B8L):8QMp(@^YuB>'+/p:r%#0(T=Mem"?Zt!UlJ\uV'OobFl=kh+TTQJYS6?;Y@IA,K5ojS.f2Q[Om!;]ea]PtiWqS)#D2MEJ+TNLc+])u*@XpPiV?Yu>e?%4M]%ds;eT_moO:"N:hM#g$+^B`21D.7!l]jDVg03kK6:]UG?FjS(PO/XuKNBoK#Q2o5N+UDE0R6<TeN5,q>+aXO+:hL_UMf;oe[?USTW%K<JE31U4fORrPud]!cXi5usCD8"=S^M3s<W_Em"@_)4FE=U,\[iS\>2ULr2K/3K$28:,!F+rW+0OU*dD`'m_4KWsfrI:rND&K!.[%kfg$pCWWH7Gk8X&gR]p0G(h_ohKSVmV0THD]B`n#](j")JAbEm^iX8HrYto/"_jG-o<t7S7<gT?9:3IV?7/hI2M-qYBFor>;K\0W%@t89.dt*mQS+U?Le'N2UboA8RBAF[FVkKf:VQi2^Vjq]in$1XsIm\U:IYBs-`6O4AiCM;K@tE=t0Af6l*B@i%+2kn:`^m2c5pcfI%m^H`4OZ)33Gi8?>CS?Xr%m_+ee<q[=aLhQKOC;En7?T_lXPXk3'@g9;mF,_HY41UP,Seq5pLlC8>Y;BWZ5M3b1Zid)(f=a*'M9]$%=>uHXd>J5PUOUMmM8n?30JR\SYofeE^.B:;F<gJq,KQYKk5*-,WCq)>Es8`?,6Gcq$O;ni[dK!Qq(poFm[92`DAa]<g\/:G(lA>2%%h7;XP96<o".-jZ-C]l;+*6#FU9<>dHHuJNnnIj>Ce4u0cQ'OA\f&Rs`/p),/tqnd#dtdt\$VOorS4sqN2>XZ!_t_=RjGF6;NPm`%^C=XZEZA#a9,O[d%e(n69+:9'D:u7@[iKQJ0X@mj)0CKup%Yb*puFE;O?@jU+o!_mlD*<m6;q2h\6bbV*uERhV4dH[\nUd;qoPH'%Yc]#^1L_&C!H*YqY.]5_$d+->jr_Agq2d$IqSn\^f_7+T`)(g*Fdj=G/91B/"`\62FkUmUp@NDFG)`'S>@DNH8m7N4*SdbNjK!g*%%2:,*e&-9*<B;#eFO-_Bka#-]$#p6-U)+^:U`ZJ(PHl@<(qTDHY4=1;"f[08()!73**QG`[&Xmj:<aCL^TKKa/MP1U.t;IkF8BSW%1BMIIAA61<,?KrYpN=^4$[J'5F0MouTBr[gZ%W[VFDM6LVCd%h*VK,U\\g>Ab64@B\EQUt-M3B1A03Gu;c!0H#.5%QF%/l5#OHn`%p"iGmF-s3>iu1.3oNTuD3Gj`G3FN'83q/`\[[5H:#Ak`(HYrSKDg1`;(<(i/Wn_LUqI``A`Yt6&Lot=l`VW@d$1/j[*!L:lIn`W[%pQYQMoM*#`QKZh+B!`aFI1a1$_Zl_pK"'C>^3o;3JfTbl&pg??%k4J81pThhGoej#CMNc%bdUk?pFF<CL95e6>Z)"Zik$rm[+[Aq%+m&K:GfcA+9Nl-7<93+uptbGhkY3l[<V3=skp4bu;e@koS1CooPb]!Th^p1'6*2\s>Yj8tFPH-9%g"9?7@7%^Cm)jS*$54(GKPb?%'e$D"^a9m..nu"QC:[FF^V8!)f957,Y$\toW",;`aEU33m0adc+M_m)D\+ZI)_`Rj&o@@3]uQM&Vi&,5pJ.j5f_LD`=HC#T<*56f%=!d=Ad[c&$hK?<D==F?k?@'Ntl>Ds('&h'&;qII@W.<:H.6@!nLX_Nf>U<H#R@-2?h+sfe!30f!]Fl0"#=%fA08T<r.i#OuZj>&K%FY!Z*h-U/Z,mTUATEjh"b(HRUp)^XU$Ma7?)L\\/cFab<i0Ykh-2N%<#5gk:`OU8fk6i4Sf)^M0)M5nraHdLEZVZ]j[[_2pAb*La%pIZ<W:=VSMr=>3rPl0=JA4TGnQ@%J:RF7PI]GI].-QP/d/!BpK$]@1*O[q6?d1^Xm1$M8"D5ACF9Vj!`/8=sp[_:fb\6CQ'g3B.A%Ae,LdcXZ_%<jX$-U_]Bs,S$nPK@Ogd>2"ADg30.X@Y6Hg,r]rtLoYOMo>]!spFBeXZ="+RpRhunS4j5Qf9]R=7K`iX7.Z7dkY*`\%E\WS<QX.5R93#^P_!9s*i20tSe^fB<A,g=N2d5!&<7m>$q2][]JJ7f%'<^_):W,0,VF.P;%`OHFO)[\--LGh[V=Q,rEb-8fAc=Q@%+PFXFHK@+XhV6Z:16-Ao5rN:;-ak<JMS.bJhrC@-#kJSI3R<Z><r,66Qa-e+"=9n<)T$P%[Hms/fccEQCcP;B\f5@!L<>R&=n@)7%*T,pCH1fG5c#a[$gs&dH$5IG3pLEVer;TN6s3tulW'rZ/@*ob"0Obr[^U3AHV)HsXDL<PsWY90G:8@3P;](,R`9@W>b<l`rmRW`G%m.b'L*7fRD.'`Ge.BjT<CXTao<c>1F_;h\sQUjoA=\&k"+1O\_>6c>tVfk&o[9>#fo:b'>$g55`mj#5TO)68nH=SM9UZ!&H'Z#`o%N%(25h(glo5R57tcs.gpBCqu,]qn;c?r^"28<+m,C,7"o7VlqVWWQVk`Wm"B0=Y<1?NjW")Do$cgZ+R&b8EROZHUM\I7N5"X)!#o%g)d[V=!2(lM%@5&c5;(t;nbH_p=-]j>.\sW)/J)?IH&#-^hNI!LptO/LeU=nDW?=*[KTdl%M4[FcqKJXX1&O^-S8F(o"3GKTqP4C%;N-dp;%JEX=g\<#f[o#8^uqh1dGfK`*!t/0GmSX&>FRRhYkHg[3'uS7MIF`teh`IHm./_K3W0esbB#!_O=tG-\2?gqQJ6[iPPE*V%[Q%bm$V9IHgtL1>oT7h92QHG4oo;SQ^8%f\(-A0UDW9N=6B5nU7>Hn.!1h2s;u5bQ8->_u$$-87#W1_ILgZJ65LMST2uA9L,].SZ%.4uuQF=@um,n6p!<a(&a`&:u6Cu(3*"E_SJ4RKQ-+0=(+?hiO2^7XNak[RPCeml*bI1*_o^74-e<q2^_@"mYiq_#V?oChhYWrN5m%;uCLuSIhG/L_j\@LHlm`>u9U/9HuKsOt/n^04MXYL(\=>PM+^#^sI*PB/4;KfE>Usq*g:3"jT$LDYViB4gqmD?T.#QMc7%P`=Ige%jgeZS>;gd%;eK\FLu/tuOfYSGV1V@5=#K$R<666+CKn9aE4p91Yo8[(V&S=>_456Bntp9UH+@Gq'tms1HFNXaB'5b_fm[Gsmr`!O%c([V\\a\t>>^Kk.LkE;m,Dik(qdG-;AL1'o<OlN1_N02\(V/ODS(Bj<I8D<U^SfSkDM`^;beJT+_X4`?j$.AYZtoOX0AI2T4(?&s%G!qEQIt"Nk=rV!AYm$2GD9UV=mWR=PdtlOs*:(ajaq*pPSMp"F5<8E29/;od]b!*9QSc`GI;sIemG'K4'9Lo,gYJ]ARHNn)<4llV%N4rB.D/W;#9<R!@SGS$s;XZr05L&m%GCtV%99\3dI&hSL,8oeb%\I(%LSCmU:"`N0NS=T.r<NE@(X-lpEJ+:c4+G:-"<E+H41jAG%Ge_J`AE4[sZmE*m317C)'c+G7%dYWi:XpHZM"S)SGhMJmreh9PQ=s6I%,nS;<pa\p`Ji'3\:m!!'\(E.9)pYUlYY3sjJq0B_`=<4%n-hR;!ciX),FG<A=S<IA#BWG0?]V*gnsMEW`Z,RNd)37m;^loAEb6]g,1k$_7J7.bhbJAqWRckN[o*R9jhq.:6>jk6)J9AhOcNif%`jK<WC&YJ</FKJO-:c,g^$O$nWNQHEM."rQ<16iG0u.q4hU)mcq@mXa1Sp,652fbc]@\\n$1os#QF6%U]qS;!/Jc#u43@]2id/so%Y&,*f@dE&<0S6_f0C<6_f.<biE%bHkCP@q9KI_uKo=SV.8l`&DHe79<qRE5?Ki&QZNeG2)KdB"m7.br0[kt1'jT;\YZ\31.9d-0q%BU#\Y/I5Nab)u80S%+QBjNYc+m[J],a=4K5kX$:ae#RWEa#)"t8%fV#>6&F4M5^cJ>0:s3o&Yl>l@UnKpfU,]0sZLLe4oKd7[>l=%A!n,_"8Fa\k"8dG?$XTKdT/nG>&6Y+oqc]tgi)[^8nr'.NGk3XR.S8H_ZPmX`B,tSUVCD_']HH;!Bi\Z6O:lI'_.tNK`dabmP731%Rf"+,-1'5aA<eBBrp_dejs_[F`Fm2LRd:/cb,\``;nTq\H#f#sNf6@-du#`ce#p/'9?^#b?FA=H<``Y0Uk82-kn6\2%9l;bJn\<2%P8quN8DJ,b-V)bLhF[94:5WVHIdUD%Pb(2CclR14j="Z43!_k,;A*i7ol<CNYI%\W4'Sj)-<1i7p(`cC+soc_$6LlYm3ZqrApS'8%<Q_Gqf9C$-)O!+DABVo;I:1N#i40Tj"M\=$b[jA.jLfas[Qi/s1@,LM<4"j\Mg'BHRf$76]@uW#a0m;Ede79`Ls>+06)U0H,8M0_%*dNq%=NW\sP]iW2&d#.q\k$!2outGc)>R5WBZ:c@aLIjWg\93:kU=Ga[4!ZTc4^ZNjq5oc>k=8[7_-_L_AY!BC,P<9,qL"7;LcEU%&Z>$=>jA9FS-grAGC>Q3;B$B4&^S-1nm0Pgn#*VH3o>VNQ8qO;Ab4p\j-LmhfZsEO(YqIUA_JPC1qM#<VO'G]Pk]eUHb01\hgA)M%%#rb\VgX^la9#KQn3I_IW$nmEa:DY&XnI[%XiZu(#H.&H#hTo:NBXZ)0@INKYoZVmcMSWRLbuP*Eeqb0,=!/[^HB17VO;nqNQ$Hb%5R8U:#'s5/,f[kt8,&h3DSTth9",G8h@:ojBH8+uUL%jD;P+c;C+_c\DbS\oW1fJtD:?5mpXK3Ss%nj2JX`lc'<9"0-__!VjEB)X%/5Gr-$[]-T(H.,<j\oBJhIJ^LHF%bUUQ@=<pAK.!i!O-NHD$!@d(5dB].+DhSk#@?j->:6>h9\@B?Q/\Us/NRR1`ufFfG[3Ji3*D%+I_UXpA-]JZ\BWVqC-`\!'ZQZP79APTgkO;*W6UncJ[l+f7KZ`\PI+sK&>=i2""q=,?8n)l`B)t.%?%0Ab6PQ.Pa?jP&m.pO!$@T%$:Ek\pN5QCd3H"]DdQ_NdA'RZj+:??3Dq&XZnap5CmekQc:72]%O^;"g%)eNbDqGj_I%b4f^.H]Lh@\linmH!^P*2J@<s(hdU,2^%E2^Ffo]"hmd\k<;eoN!.Jf0"t:d-Kp729!nOb`\=`qR'-S1Xd_>KU#ABceIFddB1865X>8Q.O@EG9)rin[f`Z]b-"s&gjmWOT+LI%m.ub^37Mcd%fejoYApm&R$eLG9W_kN1bt5I!Xbm!)qE5^dq:WEf#&J4KRKqj*iP,/4>k=W"5llXa5-44`b6,;)Wa07aSK>IZ&!;[%EblH'd#':(+bf4S>\#,']joaL5j!RY5"'TW*%;jk519OR,uku3Fbe9>oQGM\!Kn@%T2r-NmNL/NTJENF:V9LR\^g7'mqe-(s5bZ1%Z%3Q^oSo@N^a_Rto2+;\rAkRHX8iYSc(huJ&YZcbk#-*TJj5<JFO/a:%Yd%n6u?nb=B6b1>B6P3<hDMXS$'R\V5UNmGr]+&!;`]q%$CNJuTd#`6!Qq!GdhL!!bR[.U"5kZuE81#g6SiqX1X@9KGdrYtVl1Id07FXYpoMf*k+8EXOm0Ee?_3,S-)VX25VP=\l8C`=T5&-`%4;:]A'ZJ7=k#U<)"tPcp*%Xb18,b`4X1&n^,oT:@>e0O)8!*-3>_"3NE^2Hj1iA0E,U"Kc\bCGNNE5LT"'?XCMib=h`F6oMb#jU1%[ATG`/odE5at.dA*r<H?QC?Pb/)&NPRFgZHdWiXBJ8sF<#g'[oapPbqP6L"Dg\oi\fhQY2AG%PD%UJ8cZ^8$=-Uuq.GhB*'U."lR%((0V;]CCRccMeR4+4jfI!Sba39>6oce73)LDW]W`a6H-"jK`@eAti>HDP_k?,s6;+Tq:(loH\sOHA>IDSJN-D(5cQ4c`qnV"d%`)%(\$'2B%T[f;3uRf!S;g:''WMjo&R&?fk`-jRnNdD1K*)3h_+,"_GIn(XW6&-io'8p)@Bm<1@P+N2Fp(7SYZr9.8([EpUMI'V;GTP%R?_P$pXJg5c%)41\?k="EZ33Yppn6MWVS_qGR.p$nSANtN4\-UUKo'.W"BY6F7=cU5G(MobPc"lMRH?%SD^a7q>fS+rH[t79"a?K%Od#Pt.HtTjCOqPnkdIi;r,DWVlDUGEP)GQ25X'$_ktbU1,Ckt;rM]i)`7KX4e_%-)HaJ,@=*Ml/;5O4l+::f]CKp$GO7gfY-_MpG%6o;8.m[5&T*CM+_5ji0X!&a(S]-k4q0@1Z)HnT:%m(#$khC$sWUtTJcI-Vh874VLOZ:ogDG1JK"K+L'=i74.&a6<+KRW.2#,e`]O%`6+C:8(_U!IE453EGo4c9Egh#T'eQFJ;r6[VYT`r*J5Wu1Dt3qnJt\?[hH<Rj6SkLh&]ICi];0&9%:]f/oEX&MZ']MRq"ZC,)lK)%&!.!GG140&X#;IpNU0+maSfQKCf8("Q4MUPc+sTQX38^NW,%O@%jHjXGE$X&)_`^tn6np-JFF,>.!`EL<64Xq+_)qMjp5%^Fe\R[%<c_A.@HKPo8hmqA$/D)SOaa:b!$02e#eD`Mf(3-%c_JM@eq^k8Q1SJbK@4t+"q6qi5TT@Wr=V49e<0WF38#bbqk/re)np;7L))kB%8$*_j"#XTI%<%u`IjR?4iR%`jZsj*P!_l2ccs>8VZ<?NPAq[/7G+\*';m#C5lo)"_:ZDO*a1C<Hoo_'J3Ai]3CqK*)DHThBAos"g%b+iZ,IU56QL+j\_QZ]^@h@fNleoT#qf1OK5bO"\(?L:>6gD)s,UhXgNdRD]%4<b]hm<^7Ycqh2W]In(h6*k(BE;(k&C7tpGgQf`^%SPD'N5R_n6qY?2H<hP=O%oV4%UKch)msmFtV8RPc-,WRQYFk//[i/]s+`s^uL66rheE+0\2S&pn!j</Q[9@1^]Qc;lBVpQnH<Eh3%nh%unZ>GdX=\t`#<&&<DK"h2R7N^.6lRa+1Q.e!s7*gXP_oA?lBpQ0'<@+T`UfdC=KKO4)/Wt*=,>LQA_&DXC:@&Zj[fVK,P];=7%I]D->h$W(c[H642Si]p6B(R%A'"jai+@K\nNWVnZrTcSd^;[O!:qGa>]OaSQTY9fV\9UM8TT_IuM7")Q;N+]37?g<AZ$VBsTVh:k%!_q_/8>9j7apIHW1>NIr"Ki?&f!4Y*JuE08WJ+(%MRF=s"He=u19B%"S"`(Jc3(L=p-iILlW/@D9&(91)Y,OH:3AP@crHp=R!?sH%M'pQsn'VreiE1;a`$ua*)j<KEpLe@/2-m4a]BI9sGX$Ck<>.DDA<[42HQRI^gs7J=kV9A^MZ:>e&b3B]0SpH2pUZttEl@iL"O8`K%XSp9!5q(/jS!(!b>JOINS`f*`,tD0Sef`qd8c"`of;3POb<6[46GR3,l5tTXlkTSTR5`f6L"k6iG>rgl&!u4_HQ9#TMkgHG-`CiS%3T!O"2r-!.T;/]gZK<Loff)t<hb7HZ[q_5NkD6NR/X-,G>E@qO?!b("l'j@2bViolB'3/?9J"HD0GAf7Q(?QtdWap&9@l3.F_X#(%g=C$`VMY\Qj0*[rIL#U;G8$IN]saXC%=8Z:eC`JZ9!RL?@j<f<L9=c1Ao+AW/=T-'bTeD)G>"ASDB8s&;h1=Ge*0\F8o4coJm1YU%$[^'UG\4$f-4Z1g7#XW,*tF,OC#t4!n:Qkfb[A/0_KNR%JN;HP"04"EDaT1H*RWY2]kkbl\&i`o/q_m=.DaS;GSB2diYgL]nHhn.%$'PWJK##8A<-F".gW.hdg[$rp#c[\Q-pJp'Nlc.cG#ds/D'Z<5BN=T#'AMsHHNd_F]gJ/pRiFY&We3^.F>c_M5,Mf9R&X;IW]I@Z%PgB3oNhNq$Eggm<Tuf1/,0g3*q9-lR:/WuHF*QM%-e*'XW12`_hDOW3>ZVnXl_*YNN>`N/Np-m$];1lh8KBKIO"kU?AV;F+4'd,q%qd@d7JJqBLp$%L-)1LFSbhkAdk3!iS2I88((Q13Z[fPl.-S\VH]CR+b0p3>fe2aTHh%N_4>J`pR>KYRq<9]7>Oq:)S!#C8!4lA#c%KUG8lkt=lA5JTEHXMd5JN1kZ\YtC8bp7]4/H+O<R?l7aAbo0c[HM)#0W^u97Fh]:BqaO^N_(t2#W&tulZ$J(Rqth3Z*qUHI,ceh-%rZ:CMFS1i>'r\mc\IWe?o@S2nmQE^(F?JME,0Q:Z&F0U<,d`$0.][.%PU24M1R`5gV55MqeXkGrm6N_sVAiH>3:5-P>*;;5DpGur%@QHe.P]o$HX<eH60E=F)Cl_sXD=`^07mEc_UF5F7g=gc"P>a^7blFpcDd,ft?`.eMT7G#8a\YQJdBVq9mqWm<OQ\YS3e^_^WF$Y`%J4sga<Cr"*:VN#G!0&"!qP+Udkrn,q^iPUf$#V/FCbL2(b>8cNHOqW.o4_MnCa6#c$2JID$p>!=FVRP4mX<hg5.u9'4Oe!\SW\sj%4Z%!"ScEW@-;l,$@dgFQCft"-?KWE[gXDs;2Q!PS5R96b)K@<W5"QcW1%E*e3."C`hOD?p];IR<@dkM83HAL:i?mAI?/gc!/&:=l%!'8@en7D?@7`.9La<+b+S/;jf<YJ)0V%`MM>ERDWdF>N2"87H?j;+)Yg^l6bqh$.IBN@OYU:mFE<,U)cP/L[nP9*p?F<$eKT\(O#%eq?`:Y7;$Z?2m[r-B\A,j^g_R^k.J]9:D=gHIlY=05,Fh2f"L9XSO5"PK(4>j?`Z0Dd/$>SYgP_$YkiN<37[`Hu)O%DH&F_!t<?:%MGpp0glbk%f\o!UrQ,:0!INWd\StK\Hns8p9e[<5d?1%dZ_Q=_5YE'hPlV7\Sg2ku&=1FkNqIk<c1R<qb>q^"<O-`r0-IDh+q)JI%GirQ40X_PWhSo9M=sfq:9P*6CW*1(Lh!Ud!DXt\_<lp!%FIWqcc'simAGj]*n(u1V,@q&SS]8($?3D?jeL^LfP9!*?ck7\?W;Pf6%2T6=-CbK@`,rIOI7,k3SKg1N5k'I5+?qI<]\S<>?hc!o$1N*B9AYjC-Wp7+/3('up'Y!Q.g*XEJN_mFX]F#*f1gMqYmJEBIcAmCU%H#3dGn?H%B,odh<dWCJVaF9PhJ]^PgcUuP0mMXa,s(":2mPdV=gR;JWSlGe%Rl_atBUPH[-^$?H_G'DqC9`%B3H:Ep5$eiI-S4tB%*&B/I/>UFANIF5:ft?sk),/`ZaDIQQ;#qRN0WrQ_,#Rjdq.qMN7LG#<s5R,LS^7k/M?M5Irq;QMr,:):2qT[d4%$`q%@8NgmaX/n%@"2ZQXD+@]$sB;RQ_aWtqp;'M\h(:m*\s8q8:3:acUUYDlm%MS7hNVZ)a:?895P]S'_!K#:_Lk/_F<AO_oBBir[j'I]E(0-)/eeh%m+ae)9fB69N:]V*b3,;);=_t1XG@EQ=EW,U5V_`6.tT[Zl%tQ-'.nDl^T'C)+)FK55__GpD9&]AZG<I4)+=q%Ld$"k[dQUc$0(sO%4pQ\DS8oQ$N-aV&X1O6anA6?+]r#)6P82Ts%fP;FYr@7t#<2njG`V*4\kjp-\P#:Ldf);5d/^<%12Z$_ImTh-9p3^5)+iHu5+^g,%le%Q5.QLa1&<c\`@W@0&j04uc,dM1<)FqlC\IK7ADQAE26,mV#eip9\(cEm#b-qZW\!+pmc>8^4PfLsoSC)[^8*4k#T<O:sRj#p8%i2+A$.st^#L2oFlmK=]UnrmhGBR/?>MGahaoZsXFPnY]SZ@I@X!^uEi;JB#+VJ.I3,.3\LiLsmtV&>!-&H#d5pcup4;TYQEeBWoX%Y#1V-Z&XX(NHA]u,C4sH(^-Qiq=,#Sa+\&e]:%,T1EH^NNnAOMS2;-fFSCU;V+^V9p:c`!I6?hPT%9jGC@c1R+/l%b@%Zc/.@Xag%U5.EgcZ>kZ1m5+H<q&ju\;L+rODI3P1e<L\'a%0*>NHE]8"&b:--O>e%hn"@!BZZLq?.7>6W+/dUrbYLSV$406=Al<42M$;\UWD5%:51X)6-(-^:@G9Xb&o6rS"nrm@6kXH#jDfOL2Ot5<\5$2.@WWV'/<if,8*h*YJMhA`m)tt*Dgd)GXLghLQQeLeq&"D-%d^O4e,SJ%]^Y*2-6fB)!]h8n<)3j('_Mm(lB:mS?=qC'`*YX%W#](JJ<CR8<EXPp1@D57`",aT>4@,m'&>oh#H"M\T<ImM@=^F"meN"SJE7>"%FBYVQ[p?O)X<].2FEDnb1+P-''q<ZfG);3Iq3Db*?>d^g;WfDHbZgO=$@mgMJ6YQpSOcL:-T+@T!\j:DUQ_BSRB1loo%0N4*$e'j%TBj:uPdP@P#!:Ut\1`PY5`eVR(1ClV.>uM6P%Z?SS&CRI%U_u:]EHJq,tfFR.Gh*';H$M5WL+T[l!JoV@p%gYT'Z22+o@^CcMH1R%)UlDJI>/D&:sZde#Xf0Ok<3Kujk$f>PHRL_E;P%_ZkP-^])!_6*l-o>V";;L3F5$8$")F6aAn_BOr/n6k*22]Um%0QEYQUq/DA&[%FqLR(7^cUUPsnEfg*LjhTAAE]FP?9A"6^^*D=BP9a=08-k?:amfP`I?BuP^,Tt*lFa"lI!bZpHk$)'-QCX>id<H=F8CnHn`!9R?g%Q'cWR"%-d'&Lsa$8co7[AZ:<"n2#P!;!UV6/8`ab,^*:(`0@AIPN2G>0*$"H217BTq5k0C^6^A=U.7;YDDc&LEV0&j]/kTCZER'?%cec^u*i/Sa@];Ck2eT<`qPGt"@]%7&",)NcD@fO]LP0Xseq:63.sD`S,T`1AZ4B\.rmm::]i30?/PGT1GG3L:eE/'0S#@HR4?FiS%0TEkMfZhID4^_M$M[m85k^&Ag,^"[TZi0UEdRbe`)2ZgCf4ESJ&DbSjbL!ZbAItiokKaJt\nS@oe:clYEo_'_)S1dnkOO%XGNj9>%^O0C*kUPP*=PLjhd,<7s(R:8HZl)(s6lkDS;62raoDe\++$^U4)M@g["],THW@ks][B0!a@1.Pf`^uth*A@>@&Arm]"\d+"?q``!%8W6:&@;@FS=<aQ=$0[!godhr-H^gh3lmojWmg,e.SOX>>;,+4jRNBii9d):(=.7*\rf)s3fu#ki%bbmJBY/;6f+T$pcVXDMF?96q%(-,.Elr6d#oDno.6N,(;Q<f=[L5q`\OK0"qJHPt>$Zeb2U'VU(mD[Vr.E&`&RS0/b/SQoU6N0T@_4%5FJ52kQ09$MS`8iGuFK_I,%"XH8l\l]R\]I&KLZ+Q%r"KA$jKBjY+d4fU`n%_ILb.5n@U226:cL#Wp0u2iJp]^?OYsFF"FJ2FbW0YF7R9:L,1-8bt"GNJuV<K_j%G+H;toJG6;c=LF3?mid!]6n"$/UtJ;>h#4aouQmgMd_b#BkAParO`Z*b'-B1T-!J3-JpnD#9ifl,\r0)T"(YD)m(U]\LI==ofmKh%gjp[iGj9e'HW]LUKOTCr6qq)*,NajjXh*d@Ne>uA(lmNmO'HK/&[7_hTaW19ghK.`\I<DOg8'iuQAh*cXp`=%paN$X_n%NL9%IPD%GKT:GM.ra&-a''W4FijE"dKlkk?p@q8t%r8&9UX]T94R_dZ:^V!o-(#4UUrI%b+p"%?rAAjZEP3p(6.!a^o;;JSd"Ng!m0;2nlS.%W,$g5(d,USPI>CO+WiYg:)]@7=QkOg1<;dC+p<X?7d1s@g&3KJ7J4(k0+bu-D1s:qLM5iIEPuh7rV<SZKW8Y?F&(VO*1:6"iS'l+%/d58Vnq<u39:^d&P+ps"iECe<U>J&/,NW1=X+r]nBh%e;:PBahG1,`F]YGGdhP'h"($g2.4s]aCcsg,pX(iQqIf`2N\1fe/21q?3%[jQ0,\K"hb"'\^lSiLcP\<0u/o)Vp6U!=`GognHuS]udcrocj%%#42:9h`!t:Q0hgSB0a8copWCce&2gi<7U3YNrdXSLTgMKp_PU%bDhgCQ$s`m6CR5*8).#&kET^Y\lf]fJXG_L<42O!-Dlq6ma8k&MWl!M]Kep)2[IW&A-D6lIG$3pXT%uA*_0Z('>c!,pF'_6muHrj%\pi$Q"cRbj"n:blSC(G9GgI(n1;]\JrK*273>1uHUbe'3@Z_"S@$mN2o2b^p*)/eb,'2FX$:CMR<4:&Oc"A%o$`M2T5R+F<Dg@\H%B3r_O7S5]u@f-??h!#tafHCt(/:L;lI9qqb&`%\6RV#cBFou!<R`.ac,SrL%1a7D-Q/U4pqAi069;j>^#;IrJ_6kblANsQGbu4N`%FiF^/ib)Lr4(?/g=1Pl/-t*3_@>D7h/kH-#I6fZ!$o/+h>+UMfP+u<+1c/l"9u4uHeXPY[<lYeAFiE-]#o%a\CD'PP+&o][[EA/D%ZMLR$_K"$_c-Q"F0Ca0B-T[^NL%9=@e'0Qg2/=<I:CJZ7QjmCD!8TEd#EIhDPJ/QbC#A$ZR5_<,R1'302&b-'ddkGX,Naq1D\n2P%SIWBn@:"l!.m=j[`@#aBl,K^[#/@&#*[Z/K5==D3#uqnu&:"tas'p8;Dul,pFE0f)PA>N*FN?7[+_D]!$;Tb'i\/@?%!im'^+sQs%6Zut)kMs<lF?A%ZefW?LgYS1)[`.=IW!Vqj=,5'T[UI*;d1g1T8a2+uPtqER#VK*RYUQ<@5!roe;\^O;an60C%pf3g@AhnC>@/-"%Ajr0.rq"Es6AMF#SUFemW0Vnbd`5Ca;N]kY:i\JBH'%bHr=9Ql/.%L84Jh4e+b.bUd4>1KdV7inSric`G5YSB0eL:R3Iar)e$gb$%:@W?gMd9N^I@/3f,Gq:jM.mI;2N4P&#9$\V:PkW^Kr'M,qadGbH't%mh"eT$V2sA:$>`Oia1EYDb=gPq#b\MQa]1g\h9gSm=[?#N%_pJ9[2-,d8Qs&V2W'^f'k=OgoZZ]JZrcegpoZo"q6<2B";RL2l,'CYCD."&p1[,Y*3*XWg[;qdO)I[j!DLmNX!d74Z"I<RrgW.eh%Y'd^,%/1'0O=6u"S+t(,WcJ7rS`DjY&CGY#OEu\AoKu6sKk:i.?0=-84\/g/]t_&&YFcKY*nm.4@`ih_&=JC1dj'\/^I3RPErsCT%4r2PS*ObfoK4U,)k%\gQU*[AS8!DK@EJ3@"O$qtDf:P/K\KG)E-1*(J=K/YpX<3S_TuL&c6O0@hE?;U2.rLmBB;a!S`A/u%:ZE"M%k<=s&%I(&q'R(QVkEU5ALQCXHl+N!E<k'@A#d"Xp$N9c=lfH/k'FcmY\:?F_o9e$Ff!KtsBf&KD:tfITA#LHj?]uk<C%#j&&WP?Y%H;=G`\FU6aVYl@B;#VlHBj4$JJ8:&fj6sE\=]gc&r8^oYiOai&;-Q3mJNX`+T/P9&bf;F^L8$'OAMH2I/CYEirkN8#'3C!SkK6d=%B'3n%ik.T0!u5]6!6oauWbL""!Gl+Q+]9YoIE(Ska[_+8RFl7`51(/P!4sQIG>C0)`BTUV8LEXqN;^D`0/>i&FT^pChr>&\+n-!0%&J@nAe@j\.CCdNsPmX4O@1.,?e^%a:8:N1uQN$^C95j/<-OsSlTC6Ek>-d0$32tq(EMN!4T^X=lL]HBQME)Zk-I)VB^Ur;(P9otQ%aMb,sc=/5m!7TD^Xc[2O@VF5=$p,2s=+"!K_r'PQP&.m%$%1m&1?,H%OO3#Ep)DgC+&3*L2P;Tgl=Yf[F[YGHi0L<%g=\HMeCWpT%&Y%9LBjur*$BQpjVD]H,(0#Y+RkVP%)N07#__Iu1:<*B(WL/frrZUSbJ^.7?Q_]FM$ZEM.(an>f$W2Xf?uciCOTN>7c-K;hJMu24%Z7`p>4c'aFq)L93_*.agF'4(\,^BZGQ#Kf]W(V?MMP0/[&*"=%PH94kB#V,*C.X]*GR@Y4b75a\"V9qBAnj"W_(PMhh25oJ!J&cN%LD2?B5LthQBe="JIEH;3-J)*_#?6-3kSU\FDF;mAU!7bUg%V#k\gf/AL:b:*8Vnj(kFnR:$&$O7*dg3<9Mh[BhIk*L[$>QFl3FGY%:-q:g_P8e,l(N9[&(uM%\2d!;Vke%'N__j5^!eB@/WB7YCQ]@Wr"m/LGRCa?Jg%;c8XnEr)JKW-,\]`SXiD56?BS&3VaAabES3Nh%\q7G`#i[Qn"&\>O&\4>-F6ITAE$Wi?RgYL@ilM(=RWd`gjnDYY[&@?XOW5biA%&eS[fY"KcL\a-,@fr2?Xq7N7#<bQKbK\C/*^<*%:A(S8[;blC,'=V<LG:AWA$"VuVj9\GN"p26J1s-h.DO[n1UNM3)?E!7d?W5`js#09]\DlT".$WD]_e,lJ6:*B9s+G3^Utfcf2*)P%fpfmCHNcgDRI9AF[(bD!G)AW:B^"p3pC96R_S<@l)iAraTZYn_>(8!c_\Kgh(.1Yh!]Y`fq4uB^;4[mL`qq[#+lYoX7WMGP!0bCk%S@e1jAdtm6M8U+*<T[RurGnSmW0()T))"0B[mo.^Ht[uL2"Kp7e>O-jRM&N/g]e7?EFj,tOef(2l&9WR:Yfk)=.4UV8MR5O20DsS%D2t6q>aMCVA\.\)Fq4B'rG>,XS9X-)'`/'TPEM;qR9.et@a_YXR=8GZZPZOq)TcNP0kII7(nL&*gW#'nX1O@<0pS/d8T:KK#;ff#%1UG"_a)PIf@jF`ZJ4a-*F+/M];[Q+G/hjD-Dt\!JF6i'S8Nn^u8ES=+/j(TqSE/E\F7J$:X8LP:HgBq!;q?(oVi6!%*2=]G:"d[O%7C9&GUkoX6VL-\OB/N1'b_LH.QsCS/Xmb!=\asV5lZ6D,)`WTEieknqAKn`A"8/OX#%[]I0$ajU.+Q/[?Z=1m6IOr,li\pu;Y@u.%T+@gZMsOuX:^QrFHp*(mf2T1q4(q3ep/7SJ!.;B$o=PL5#8[l?aLE\%#Vffq+[X8".H=;1Bm83]KE+qn=/d@5a@J9Sb%7H@e/15n%`-St*LHgMUcTU@q@s)Dtl7^n.AH;oUp!@eh.)"i7re)pa@rKA'An:kX9mb9]`jh3*4VIsV$1l%P6)h<e\__uDWijjfeCdJ)ak!iF%Mo5:VpW(A#:91tq24SG,T7HZUAuLB^fRFrJGF<=*/m5<?UC/Y:D^GHX'u)t$/MgHD)oZ`.&(@O_MmlZ\9T/K3?2;,(ARr0rJ*Su^%YV_=s?IOQ1+NKc;\&[mWn;[&uCJ(#i4mT<G;P*Q60rFddb?nO.qXM;9a(cGdj\\:7Qet\h-&mst!YafXCS[Nm#:4`2k7DpS92oQg%hM(mpR%?t-7\T"O!Vd[kj4BMB.kgD)A9XOA=Hf_g>dGNmDf4SF/`Y#Fm28i<?dE9-CHDDOI=78W.BjY%*d`2Irp&*aqUgMfgc&8k%a7];cfV05f;\6^4bUg"Ybk'O8eMn)GF"E)PdnchI%Ctq%9X60S\rq2kcK;b7de*Z15"nS2\[@5+hEe``\fFlN%TPmt/4^(T%V0:"%OLs:8rR)O?[dU#2?Nrpk#Qo@37SumG);G>q?G".8"&KmA_)paF][6jM'Z%?rBbPf9g49<qJEi:'U<D*d<Iq7r$<S7jXm\_`8)(@W%P>HpXjVhW<*Rs`Rf2P>CoIu#tr[RFa(9qipBj^f$lEX!YG:D_\F'$sqf\8Z"XS1(lY5SQEZ!,;oA=3k-!!\3rQ=B:&pEH3cR01jt%Ut21qBh@.Scn^pNS92+4]CSL\5j(g&OQV"9haHYhK`6(HqtlAuXj^I\"(c3HMuqA(V\>2CI0`lnoQ^pm1IUaj>c\AQ"HH[eV.kPU%#YW]D`:ATA*M]SQ-)D*4Urg+uA.ppQ?#,h)mHL!M*uR*m3S"Ugk/q];G\^dRBsRJ+;h.=UCOL\nGHNA%gd`0pBc=H7N\bSS`,plC%%ls"d/UH0<b"i)p6S?a89T(M=RHLA1!0\60Oni(F$ZJQpj0lY<(W#W0pDZP],R11s.?fa%&Vt]``eg]4*rH@=WV<G:?K0boYk9'H%qTU>289dMDcAuY%a\btg01_lFY/Vk@gcS9o$`18'1!M#,SiV1C^6,.h+]q_BRljcWLa\NC!cI):m*8[SrRR(T_M-tZW!U.19p$GD%-8Z+JSDFZA[3G<GlNZCXA2lq2hE5\D'c2-j)[3*Q@;^D((hnsf;IWmC,c9@>kF.bCRZrBS"N(2jhd'`?NKhjJ]hFSKXKfDc?0jQh%frWImX"u+>=!D!97i5jbV7:Q@F//o(lNM4f]:h*!qNTnbPOZs>S?P8sNAG%4r%_fkQVDefE?\\H.JQ#5]Xp@!\'>^eVmH0RWZ`'b%6#ro"63a4>DEX8WiZf_J&HTDEY_VP-7a\4Q_)c?M0b!"#)T:uNlJ^C2=G0acI(3f`1ZrkLD)#&LTLrlD&N=WC;khP@mXmLW]V<I[%SXE\B\IO7Ygo)<L-S9>]#rA.d2G^Vg<`W@,Pf%8l,!$%N)d-qZ_^MT6Dl2jJ<__Da]H>HL8^=lm]J)-%"\<OA_\Y9>mi[P0])H-8%_pcb68%.)jH<g(`V9DD6KLKV@mS%=(ApZ>MA)9@??*'pOUOXtCnlZuag,0O9Ct^8X<,ddR)T*gQ.1UoV+#;\$?H=AUd0\5S3.D4I%P>FqW1t@G[;nUl7/Y@)!aG:df%X#PIZo]:OHD:?qlM(ocN"of+;&nuX%o+[t[WK!#Sl0qjF-?;*nDMA$_-%._o9c+gB@AQd'#BZQ%#ikMWI?WP<nj@Dlpu/u1RgBFVc.'GimTWP^I_bmZh+73U4R3MZW)5.NnZd`S=NflZoM&1kS)lij/Mtue4Ogs,(I%!spD`HL4S'r7%PId"kd)7ZTl%ZP7!rUQnSNiX/ggH>@iVTI6#:I(S_tDK/LC`snIFe:rT92AAn%6I3\]m1AQpg$T,qVfaT3$qlb&K,Z605eaE&<U@%,g=m;,X;&&PDAH[VljoAI6'J#NJ%l"c5Ed*AMr&J_=BRN*ec_3lj?@I<JUrVX8q#$`K9u,AD4OKT,Rj.&80_:f[$CeSY7)3YH'"#%Fl8N8LN!+^]1PrOI;b'LeUZ]'KE@GP[qIJSl:ZEYg"n0iSpRea]7-n`[_?`7X@1'mIKq=)icG8')'Ee=\Lr)7gZGGEO),`Ng,h-]%%j38Zq7)sSI?p->kasuoJ"qL3E>N(E6K@gmh=-%/Geh@hpsB46Nck.f)iOjCjPY7JZ!-;J`>i7D*LijVBW()%+4(AMWdpgT#Wj[Y%`dh%u_#(RZkGXeB9cLO[cte2A#gWP%lL:LJE!a"2.ui?P)smo+>2JNcoWNF`K2ZI"$2h)[iI1.;<Vsl",Dk:?1S"l1b:Nh;\/?Wu%SRrtsUu^d4[OLW80Is?rB>'k5hdn06d=WAY.L/R3jC*FZj4-Z=,Rf+r:o-aa8e\d&ilAt9nhD3VNQ'[O2a=gK)T9R/]ND0m=d@%E%!AR6D[ehctmd)pB#2rc_5k:/VqEL8\T[HQQgD[E[N"YC*!bIQ==1j[G;=dg-U;mi+=uB8rIWkncnI;it<<di7G9n(+iq+YqZiLtc%,Atmo9$L"t`c=uEIJ$WXU8Zu1[l0\,/[m8YP'ti3_RAimT6XkcZd$g0_A3E[U'T_IT.A'2T:q;PJkHrhRHH%3(f)TZ$N1!I$Ti87%=#mt%n.15u)bR2$Hk^IOIT`LLI#;:=b[pE&'e9O.3i[;>8#>ru`K3C6Q0/p20g.sO2RDi!>614%H_)32[.+iu\(]qUR=J<^s!X"i%DKc4OGVc&f<F6#@O"I?l9-e1Z);^(k<BJb"<t71e!P&_$Tl52Q:l\@[osI";ln^"1dr3;"KiUc(CRIRk>/n\@PH:KSI@lVsU'V4m%8&F[jAe^R0a*lC5c4W$BR$QuTloh)PiJD7?L-U-q_@rVNi:O0<:R)r(&#M$@40uUr)Yg:F;FqN:S$(tt-_D;0P=#j/Umo.tr")KS%pX*@o4JqT4#o/BCrA$<8SoBP7=tC,GT'ajNQ6L\gs6t[hKU2BH7o!4h]DQZKJA68AB1&F%#a-W/GG;*`Oo^MYUN2^UWi)D;V0"e4%;@?3THq\eP_d8K)P2/[/c5*r=WP8is%i>p57t"^T()to<qc,JojFZ[7mg0Q`*1+j%Ei$Q:q,6sp4ciPP=g'G4$X.L+]M0"f.nmkB%10719!dT?s/ppD'^o,c,X"^;06sJ6R#r&nX(K'FUHAAq;qg\Q60A85!n\\*ZlnP#(p.NCdeTguX$r,F7H&n1,&t904?_kH=;2hdA%[9Y-57J-U?&tieFlOX4d\>#89%_l[/Q]Qn*:`67YSYQDj/L6IM&Up;V*U&Qb6Hj[78*.V@U?A1i)nn`I_JkCmT_=_K7\Mi2m7.Oi%!M%X_h."82a48_[Qo*N:)OVP#8)7E!`a>`^<SZXm@&(3.([_GQ8q6=C+@+GqqMEho(89sLF2@iE/\_XNg7QjEGPOReO=%NI9O"^I%HS?$qF!>E$Q_4Ls&><`%=S(KC"!bC:<`U_O1=-"XRca(UTl<U\[4[DX9CiO6:1pmY@?bf+[d>?7QY;%iJSa%_&Z!q#dl\FMN1Q8<%IV^dn9m+VU9A3<_f0-4_om*ZlFTfsi)7CAU9V#ndc'-<oF!?!iq#>e(C@6J(_SuJtHt):Jga<#g%gR9VDH'AdAIFKY1hb*CHMa>i%+-ZH8c(nk@N%`cQr`Gh]W_haiK560H@]D$=JO9s0YAU)]ll7C&nQBTkF-e"XK\Qm&7\C[KV(\&`:t$'NU+oOB>n1)7=8:],%:N@7%#2oX.bB:LG/X&!mVY4QV<1VmR?#.P+C"F8!N6JT]97BK"6`/R1@0o+)S<nGfK3C7c#"&G9$kaE?'o;0"C=jcg]:B*O<!T_H^/lSh%jcHN'<5pV`U!kn2a-cT>@C\tN8V4BW?C-G)5Vq=N0Y#u9SDH.I5bTX1L54I2^r`1[]W9!%9eH$2c&<<.r_mp]HC8F"[[A#o^^cKj%7!Nr-Cl#EQ7%<*MB?lO"oeiMqD)[@sah63@\nqD$/W$ak=L8A#^;lKV`#/lBE!&\t2_GKSm,tb_341cAAC4HR-SD.hQ1NGd%((c-%o!RX,m5]PNJFq,jmfM=r9XBk3b\O;e#c@]9]n7EdAWV9);H/:k0D00@)Z0LZq&Xq2;po"mRq+DM+?e[0j3<7(>+FIW02V`V?Gb)D%/k*<k:nOT7h@8E[q%uR-k6(/'H0;tOrLf0Sk<8C1ngtunHT.19F^`dEm?\KC.6BN;Y46SrA@7VVbgq&2hg4L=fJ0k+jA@%po<FbQ%$+1WAnG,1Pg*56nn&4tSHo1JIk?Y8koVuF]T?uVc;kmWU'djFR&t)4D5d?Q;Klj9UpN\\tH)biQi2%)[JG$KI7R5L0%=':1L-1I(%+;-&NIA%-sJ,msC6t`YO\W88O)'O?=2!=P'iBES>ot4I+C45<AZ/`3nduMF9+9[RLM/>4KX\pO1nP%"HS5g(BNuq'_"T6Qln&>th%`VkZH5\Tu?7oq5Ua[iCqDA\Sdo4+.R8E^qADhbJ0GQ<tkL>H*IFc7paUj)O`@B?+Z222"VNp;'fH4u\.LlO1Xe6]PELXmGHB4PIb%E.h.+e&hugjEiYhM)'c/Z9kK69AOYA4)%bjR8)PT"!jae_!l@c8spnDW12+/h0(mZ+a>TW6G=A[(:S-siH;Mu0i[>s-U63u3D7Z[%6VS:qEZ>*'o[,[UE55mCR3H#N;.^-d@(`kU%C@?,;&>ZnNS'1'a39<U'2Wf`094,cPgo+T2>bYK8*Nm>+o"ZsHnL:F'l7YD3sq'<%dgFb`;kk[!21=.bP$m!@0Em5kWQA7cUaWgO8j\;["a86G>;EI5<9*T=8M<2\<TdpXDC;NL<'d-lHPCIss21;[VY19t):PhU"Oj:]%<hQ6L65D`t:k[L\^GZ?;)1(`1:Ct6=oet%OYM.@ANt4gb5K8HQ<9)ZcI=#0><gOUpb0RY-^*;3e[I_-Tdh@hT>4!dtm!\b4Il6'/%c[/nA!?7WS:c1I'TdnPug-$ok4ZEUD\BGEaLr7:>4$TD+4sfMoH!.^3a&+fh_[eq50G8ad=].tdano#m]4T^A7hM3.L0g,+_q8WR%0_A<p=I+&,)\G`R,G3JmPZSY)WY$L=T%bLOWhetIJlngpSoPtNE2E@N2^)ZD:=FM\h%(cDQibntD0'o8(-5t(XgC)MV1@o]LXsKk%",%-GSffVtq[I6cdtsa68Hog6.qbJj&U>F.-_eDf$#%K+:?]K$)^N[!>,bZ]DsE0RWf_ScOjW@C>Wn?DZ&ha*CH:)+)RK/S_1Dl8%(aq!u!6K`@Q';J9]i(FEFOcbL[X(,d<UtI`!DlLQXCU-TmA7(8kY,gc=K$RLL%RekR0etI`F)1obAMW'C;oa2:BGJj.6sC3H\&UD%66N6=jG<Y"_s<>pqn+s;j;9!(Z#iAsh5RI-g#oO^H9@&;&ajH4m%#G)US1\`f;,YVB*NY!%lm]c6>>R`:"#^t`JEr._4=Bm><j9B%.m`2`09Q23*1<_GFUe2I?ommjnVts][j8od/^nnXdOJr!Wa./*B[@al(#M?F>H&D9&Ftug^Z):Y=s9s,D/-+Q&4k3,Da0/H07rah%nOj^9W;cQpD'Nd4e6G/e^n?^(kLmSt68R4*WX1i3a:1_Y+[;P3,(n9-%^SQDLOOh<4F/<dWbA-?[!=7YpD<o8dZ@O)U;XK-?"+C^%b-q2#36T?oFXJ3?osd+\/4E5?Vat$VY9*:LD;E$T-#4si>b)p]"Ia"nm@O01K7S+6/Mc"o-[\OeD,M,e7W)h!YY&$Dlk+-g@[QWB%*Yqc*7EhH0j*XXDJf'iq,<WDq9ZJM0N:3t/bQnkb&WBa$IVBg/pe4B^)d*2I3`uu;aAJ4Ggc8/:Ijm;iLhY_e<n>SsmY-F\[9Tgl%/Uh!1&LkcO^W*GT%W+cB+lOj,'=ModS,BqFiQ-V09raJ;*qc,9-*6\e-FPJE9R2*Wjc(S.s-38`lZ93+:tdR<QtVBua*6[!m?:YP%J'F-_n%G7`8?Ksu-aQ8(G7JIA$;(RW7K!C"9u6qkUA5b_F-8nj=/TrH+24TnFqK]GpVJu>2+jkJN,)Y5\bt#R*[9DuA?C<'FC0=h%FOuTV[!47MSH:"ck>6%6>gmC=1TVi.I-Fe+acZ:Y`!6#>b8_CgPrF63c;'8!S?$TL_GKguP$o]n$'f8!,7iO%ZqINY,k1!6$+<?;%>apQ?C;t;Mo@UJ!dSi4[@4U#n#`<(CM="t^@7Ho3I'1I-`/"'HY#cFd[L_\-,%ZtjCc2aUhAaUV/<a>TZ9f-i=n9>hUudq[^;$bK%6KH*fge.hT>e6eXl)(GaV1N,_nU1Sc%^G&VD'sr=dtaD]l'H$[>HtZVZM-L:D$-<ho1%IdSU_4@q0edA$sXDOd2RKd4hoDuSbR&M%iAK_L[>':YGR;!o;L]ie`;2UD]M\`kJgrWk5r`;:D)"V$E_WXrT51m%+^[30emJ_iP$i*Bc.^bCj19asXgNPIL=k$`S6lN<2k]F+%PgeAbV"IYZI78br/'/<=mOXgB*b$%c^Zg9E1;d!HhQ[en$>f,#Fi/;dgQ7'Nq"hglQ=h*ek4^*O-<ZD%moa<>&j/8IhJkm9a=Sna%J$*pfAtpLI.H(noZ%hZ'-oF]3Wopnjc`!K!H>G,R;FoY*'fp^E"\=j3d0tg`jp=Z]Z;#W_1'`F?R_gt(i!<:?FL(^CX@/VGih.S,%L=J1p&5P5hMsZ&(!%'.gnLlBV4j/7K_S(*8$>?I.ORPF#^;(U#/O7=)64jZU+I!aGCT[&D2C]pbG@E]'kXI];gKaIWfd0"LJ9?=3%]Am12lXtY!G"hYrcm8RDeg)-@6DR7gp3](Yf1fjjJ%$`]::2o`qJ\k"]I.!fG;,X;A/$eqkKBcB?Gj*W,@gEUq>lAHM:eP+pTZS*%JlAUK<^7R6SeMKC?:Ts3"b:a**95"eJ"E%u8GQ^a%7lc3\k,JoWLm-A7][ZYb@.;gql<X+$-kXl0j1kjYs-WlHf!j#6pSA*ZsIX!%)')Xd:gbo&FR%1T46Fa36U(q`'XsjnRjPqU0ZYm=]^NV4c.l%n5-i1_&qB\U=4+3@h&E/Hq3\d@]&1B1E0Y9[,<f>^B1\aeh34@V%8<RVhC0r/.%oEC2/WP3VEI1)?f4',),CrLDmTO.J9KZj_$]>=j]bQ<.d^PVCf%L'QXg.[ch`"nC^d%!jS5bR''>_FGT_KLa,!n8i%(sdY$\*(Dnn(N%,Ct#mdm,k^jK0/H<5<C`hV>\p<fKpfo0'O.`Ys.e1L0FJd%Er"gNqN5Ncb$`N38C^pn\C*N?bG.KP<R!YSbklO%5MO-US=S`*n,(:sfh(K,^6S?as4Iinq-)tKRaa6jlHgbKqm0!JKD#/F<Th/`L@;_u_<T?jh_-=3R^Ub/P[=[prTE'80d$+Am1_P7%2sMY5$=ZMghYF;-CLZGbW+9Td$'5KXUM<mOIPo2IXI,so>u1#o<>@dJ_H..=jtML;l4^<RPB*B7&HIn4J<ZQ7noQ='PP67SAJ1B5%(U$P%/5s\YDM`KlB$)'\7-QX?Q=pu'P00+CeA.Dk`3!*=@CukGQ0*e9Ei2$fg:i=0Deb+AO`:HASnmhO>T$][M1O1N;6FZX\E'0q%?,IUpQEAYuNX>W,W9)MIN+eDYK@Ak\UgBE,?YBm)=,lGn^#,MP/Kl1j@7"W/U8H$MVC="QAj8sNBTsA?A'75#=c+db8AM5s;?]`E%3+X/nRF.cjnQRk"je+k/\W;,*kFq.Hri\EU(*/i+RG6cArABGmMPfh0M*QWBkmX]kQ'bW\.R4[1,of)@afdQf&INBg".PR("Wh%S%nH;jc1pF0smiTkiX(jn:(o*Ek:e<5,j[NI>TG$-cP:/7]"16"M\^LPeM"&KjpdAB@O"d/R?VL[=!)E"Sc3J\Jq.+*lH22NY%&4e:%As_=Pb'dG7bD5p^>ts[+ApI8$%nd.QC@0Y2k#g*&AFQ.k<lk?4/R/;Akk;`_YPP"^T["fZ>g\LAju5jo%RCgU%u%9/$YmIsdMd^d%X%fu/Ul4A+:Uu<)&&['\AR$Oq20gZMOt'h(]$tW)NHl%=?`'9q<#LFXLhM6[AFC:r.'_t$2AN#RC4*0Q<k0GgpW:!#!iAODlgZ"s%pYOU;T\#Ekk=Y"'ZU&-d7&o@Z`X8tQQ'*37l%J_JCJ*FMOj'VJW<Q]k7cd_%`61MqB#FtWFA!UPWMTC5]NMGC%!1nP\!48CmZo?d%ficiS%qIDp8h\\Yb#C)qG'gnpK.TGTrjg/RC^?f53`6\`FQaAM=EP]lV+.`&W\UAlEUKrl9&CfLhj0q6jgT<]>f#5]Zb\Aq`t6E6%7FP)*OS;V[8s24:7j>W=%1BGsTBq8=`:C?-S9@3=4P;t!0!D21LOA1F<(H=\OQNEBW@?@l9Vo/ob3X_$A:&@L,?kZH>&&\^SFh+P%hdP8hs6kI3qg\>^a++'"J,4)5s2Y0:Vn`0#bO9o[qu?T7J,IcFq9'l[a8c(d?[ha1s7451rMOR`r25&@kC<Hj^]*JIIK&Ea5Q9b?%s73Anr0KWrqj7?^ci46nB?5Gpmsk@]s62cGmf*=[Kd:=~>%AI9_PrivateDataEnd